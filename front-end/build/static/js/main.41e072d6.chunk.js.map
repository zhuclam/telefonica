{"version":3,"sources":["contexts/config.tsx","consts/index.ts","hooks/useConfig.ts","hooks/useAuth.ts","services/Fetch.ts","services/PhoneStorage.ts","hooks/utils/useReactive.ts","hooks/utils/useRerender.ts","components/Switch.tsx","components/Alert/useAlertInner.ts","components/Alert/Provider.tsx","components/Alert/animations.ts","components/Alert/utils.ts","components/Alert/Dismissable.tsx","components/Alert/Alert.tsx","components/Alert/useAlerts.ts","components/Navbar.tsx","hooks/utils/useOnClickOutside.ts","components/TestingLabel.tsx","components/Layout.tsx","components/Spinner.tsx","components/ErrorDisplay.tsx","types/index.ts","components/Breadcrumb.tsx","hooks/utils/useThrottle.ts","hooks/useFetch.ts","contexts/auth.tsx","contexts/index.tsx","theme/theme.ts","theme/provider.tsx","features/Login/Login.tsx","features/Telefonica/constants.ts","features/Telefonica/components/ConfirmationModal.tsx","features/Telefonica/components/PhoneLink.tsx","features/Telefonica/components/PhoneDetails.tsx","features/Telefonica/components/HelpSection.tsx","features/Telefonica/components/PhonesInStorage.tsx","utils/index.ts","features/Telefonica/Telefonica.tsx","hooks/usePhoneStorage.ts","features/AdminPanel/AdminPanel.tsx","features/StatisticsPanel/StatisticsPanel.tsx","features/AddPhones/styles.tsx","features/AddPhones/utils.ts","features/AddPhones/components/EntryData.tsx","features/AddPhones/components/Review.tsx","features/AddPhones/components/Result.tsx","features/AddPhones/AddPhones.tsx","App.tsx","index.tsx"],"names":["ConfigContext","createContext","ConfigProvider","children","configValue","useConfig","Provider","value","useState","localStorage","getItem","darkModeEnabled","setDarkModeEnabled","advancedModeEnabled","setAdvancedModeEnabled","testModeEnabled","setTestModeEnabled","toggleDarkMode","checked","setItem","removeItem","toggleAdvancedMode","toggleTestMode","LOCAL_STORAGE","useContext","useAuth","AuthContext","Fetch","isTest","useToken","token","console","warn","this","url","method","body","URL","path","params","composeQueryParams","test","URI","options","JSON","stringify","decamelizeKeys","undefined","headers","Authorization","fetch","request","ok","contentType","get","includes","json","text","response","data","camelizeKeys","query","Object","keys","map","k","encodeURIComponent","join","doRequest","generateFetchParams","PhoneStorage","phonesStorageKey","phones","parse","phone","getAll","find","p","id","length","popped","shift","push","newStatus","toUpdate","status","restore","lastStatus","useReactive","forceUpdate","setDummy","useCallback","useRerender","reactive","cb","returnData","Switch","label","onChange","SwitchContainer","type","split","e","target","htmlFor","styled","div","emptyState","timeout","show","permanent","AlertContext","AlertProvider","alertValue","state","setState","showHandler","name","opts","hideHandler","hideAllHandler","getByName","AlertManager","useMemo","hide","hideAll","useAlertInner","popUp","isDesktop","keyframes","popDown","popUpCentered","popDownCentered","getPositionalCSS","position","animationDuration","css","commonPositionalStyle","getDesktopScackbarAnimation","getMobileSnackbarStyle","endsWith","pd","pu","startsWith","enter","exit","theme","breakpoints","down","Dismissable","InnerDismissable","dismiss","cloneElement","onClick","Alert","onClose","enterAnimation","exitAnimation","animationTimingFunction","noStyle","containerCSS","isShowing","setIsShowing","storedData","setStoredData","hideTimeoutRef","useRef","handleHide","doHide","clearTimeout","current","Promise","r","setTimeout","then","useLayoutEffect","processedChildren","Snack","animation","role","Children","child","isValidElement","props","ReactDOM","createPortal","document","querySelector","Container","animationProps","useAlerts","Navbar","ref","handler","collapsed","setCollapsed","mobileNavRef","useEffect","listener","event","el","contains","addEventListener","removeEventListener","toggleNavbar","isAuth","isAdmin","doLogout","onLinkClicked","color","dark","NavbarBrand","className","process","Version","NavbarToggler","Collapse","isOpen","navbar","MobileNav","NavItem","LinkSection","RouterLink","to","background","ButtonContainer","Button","small","colors","secondary","Nav","NavLink","Link","darkMode","lightgreen","info","noPadding","TestingLabel","TestingLabelContainer","Layout","Helmet","backgroundGlobalStyles","FailedAlertCss","error","Spinner","fulfill","container","SpinnerContainer","Math","floor","random","style","width","height","navbarHeight","Feedback","ErrorDisplay","ErrorContainer","Breadcrumb","items","index","title","linkTo","BreadcrumbItem","active","useThrottle","timeoutRef","readyRef","useFetch","AuthProvider","authValue","setIsAuth","setIsAdmin","isLoading","setIsLoading","doLogin","username","password","a","post","err","accessToken","ContextProviders","sizes","xs","sm","md","lg","xl","green","blue","black","white","red","up","size","between","from","Login","setUsername","setPassword","submit","onKeyDown","key","Jumbotron","fluid","FormGroup","Label","for","Input","0","1","2","3","4","5","6","labels","UNANSWERED","ANSWERED","NON_EXISTENT","NO_CALL","ANSWERING_MACHINE","POSTPONE","IGNORE","useConfirmationModal","isModalOpen","setIsModalOpen","feedbackToConfirm","setFeedbackToConfirm","toggleModal","setData","askEditConfirmation","f","reset","ConfirmationModal","onConfirm","Modal","centered","toggle","ModalHeader","ModalFooter","PhoneLink","touchedCount","setTouchedCount","textDecoration","href","Array","fill","_","PhoneDetails","comments","handleComments","openHelpSection","handlePhoneFeedback","handleGeneric","feedback","handleAnswered","handleUnanswered","handleNonExistent","handleNoCall","handleAnsweringMachine","handlePostpone","handleIgnore","DesktopTable","comentarios","telefono","direccion","answeredOn","unansweredDate","fulfilledOn","MobileTable","HelpButton","CommentsSection","autoFocus","placeholder","readOnly","commentedOn","answeringMachineDate","ButtonGroup","input","HelpSection","close","button","PhonesInStorage","currentPhoneId","onEditRequest","storagePhoneToConfirm","rows","reverse","i","phoneIsFromToday","date","inputDate","Date","todaysDate","setHours","isToday","savedOn","statusLabel","isCollapsed","handleCollapsed","CollapseButtons","filter","Telefonica","setPhone","setError","setComments","PhoneStorageConstructor","bind","add","update","usePhoneStorage","fetchPhone","newPhone","now","original","log","onFeedback","put","answered","storagePhone","sendFeedback","editNumber","history","useHistory","closeHelpSection","goBack","c","exact","render","AlertCss","component","AdminPanel","Item","breadcrumbItems","StatisticsPanel","fetchData","statistics","calls","generalData","perMonthData","perDayData","formatDecimals","n","toFixed","totalNumbers","noCall","nonExistent","today","yesterday","thisWeek","lastWeek","thisMonth","lastMonth","months","row","total","different","inexistent","totalValidNumbers","totalCalls","round","Title","h1","Description","Buttons","getRandomNumber","parseInt","slice","LineIndicator","forwardRef","lines","LineIndicatorContainer","EntryData","onNextStep","handleSetEntrydata","numbers","setNumbers","additional","setAdditional","numberLineIndicatorRef","additionalLineIndicatorRef","handleIndicatorsScroll","scrollTop","scroll","onNumberScroll","onAdditionalScroll","numberLines","additionalLines","missing","difference","abs","repeat","pending","pop","haveSameAmountOfLines","haveEmptyNumberLines","some","line","trim","disableNextStep","toString","splice","generateRandomNumber","names","randomName","randomAddress","randomNumber","generateRandomInfo","prev","Row","Col","TextArea","onScroll","Validations","Rule","valid","number","address","disabled","ul","textarea","span","Review","entryData","onGoBack","Info","outline","Result","onAddMore","onBackToAdminPanel","successCount","failureCount","AddPhones","step","setStep","setEntryData","serverResponse","setServerResponse","handleConfirm","FailAlertCss","DummyComponent","ProtectedRoute","condition","restProps","MainRouter","location","useLocation","pathname","App","getElementById"],"mappings":"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","file":"static/js/main.41e072d6.chunk.js","sourcesContent":["import React, { createContext, useState, FunctionComponent } from 'react'\r\n\r\ninterface ConfigType {\r\n  darkModeEnabled: boolean\r\n  advancedModeEnabled: boolean\r\n  testModeEnabled: boolean\r\n  toggleDarkMode: (checked: boolean) => void\r\n  toggleAdvancedMode: (checked: boolean) => void\r\n  toggleTestMode: (checked: boolean) => void\r\n}\r\n\r\nexport const ConfigContext = createContext<ConfigType>({} as ConfigType)\r\n\r\nexport const ConfigProvider: FunctionComponent = ({ children }) => {\r\n  const configValue = useConfig()\r\n\r\n  return (\r\n    <ConfigContext.Provider value={configValue}>\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useConfig = (): ConfigType => {\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('dark-mode')\r\n  )\r\n  const [advancedModeEnabled, setAdvancedModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('advanced-mode')\r\n  )\r\n  const [testModeEnabled, setTestModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('test-mode')\r\n  )\r\n\r\n  const toggleDarkMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('dark-mode', '1')\r\n      : localStorage.removeItem('dark-mode')\r\n    setDarkModeEnabled(checked)\r\n  }\r\n\r\n  const toggleAdvancedMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('advanced-mode', '1')\r\n      : localStorage.removeItem('advanced-mode')\r\n    setAdvancedModeEnabled(checked)\r\n  }\r\n\r\n  const toggleTestMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('test-mode', '1')\r\n      : localStorage.removeItem('test-mode')\r\n    setTestModeEnabled(checked)\r\n  }\r\n\r\n  return {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    toggleDarkMode,\r\n    toggleAdvancedMode,\r\n    toggleTestMode,\r\n  }\r\n}\r\n","export const backendURL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'https://telefonicatesting.pythonanywhere.com/'\r\n    : '/'\r\n\r\nexport const LOCAL_STORAGE = {\r\n  TOKEN: 'token',\r\n  IS_ADMIN: 'is_admin',\r\n}\r\n","import { useContext } from 'react'\r\nimport { ConfigContext } from 'contexts'\r\n\r\nexport const useConfig = () => useContext(ConfigContext)\r\n","import { AuthContext } from 'contexts'\r\nimport { useContext } from 'react'\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n","import { backendURL, LOCAL_STORAGE } from 'consts'\r\nimport { camelizeKeys, decamelizeKeys } from 'humps'\r\n\r\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'\r\n\r\ntype ReturnStatement<T> = [Record<string, unknown> | null, T]\r\n\r\ntype URLObject =\r\n  | string\r\n  | {\r\n      path: string\r\n      params: Record<string, string>\r\n    }\r\n\r\nclass Fetch {\r\n  private token: string\r\n  private useToken: boolean\r\n  private isTest: boolean\r\n\r\n  constructor(isTest: boolean, useToken: boolean) {\r\n    const token = localStorage.getItem(LOCAL_STORAGE.TOKEN) ?? ''\r\n    if (useToken && !token)\r\n      console.warn(\r\n        'Warning, trying to use token when there is none in storage.'\r\n      )\r\n\r\n    this.token = token\r\n    this.useToken = useToken\r\n    this.isTest = isTest\r\n  }\r\n\r\n  private generateFetchParams(\r\n    url: URLObject,\r\n    method: Method = 'GET',\r\n    body?: object\r\n  ) {\r\n    const URL: string = typeof url === 'string' ? url : url.path\r\n\r\n    const params: string = `${this.composeQueryParams({\r\n      ...(typeof url !== 'string' ? url.params : {}),\r\n      ...(this.isTest ? { test: '1' } : {}),\r\n    })}`\r\n\r\n    const URI = `${backendURL}${URL}${params}`\r\n    const options = {\r\n      method,\r\n      body: body ? JSON.stringify(decamelizeKeys(body)) : undefined,\r\n      headers: {\r\n        Authorization: this.useToken ? `Bearer ${this.token}` : undefined,\r\n        'content-type': 'application/json',\r\n      },\r\n    }\r\n    return [URI, options] as [string, Parameters<typeof window.fetch>[1]]\r\n  }\r\n\r\n  private async doRequest<T>(\r\n    fetch: ReturnType<typeof window.fetch>\r\n  ): Promise<ReturnStatement<T>> {\r\n    try {\r\n      const request = await fetch\r\n      if (!request.ok) throw request\r\n      const contentType = request.headers.get('content-type')\r\n      const response = contentType?.includes('application/json')\r\n        ? await request.json()\r\n        : await request.text()\r\n      const data = response && camelizeKeys(response)\r\n      if (process.env.NODE_ENV === 'development') console.log('response', data)\r\n      return ([null, data] as unknown) as ReturnStatement<T>\r\n    } catch (error) {\r\n      console.warn('Fetching error:', error)\r\n      return ([error, null] as unknown) as ReturnStatement<T>\r\n    }\r\n  }\r\n\r\n  private composeQueryParams(params: Record<string, string>): string {\r\n    const query = Object.keys(params)\r\n      .map((k) => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\r\n      .join('&')\r\n    return query && '?' + query\r\n  }\r\n\r\n  async get<T>(url: URLObject): Promise<ReturnStatement<T>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url)))\r\n  }\r\n\r\n  async post<Payload extends object, Response>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'POST', body)))\r\n  }\r\n\r\n  async put<Payload extends object, Response>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'PUT', body)))\r\n  }\r\n}\r\n\r\nexport { Fetch }\r\n","import { Feedback, StoragePhone } from 'types'\r\n\r\nclass PhoneStorage {\r\n  private phonesStorageKey: string\r\n\r\n  constructor(isTest: boolean) {\r\n    this.phonesStorageKey = 'phones' + (isTest ? '_test' : '')\r\n  }\r\n\r\n  public getAll(): StoragePhone[] {\r\n    const phones = localStorage.getItem(this.phonesStorageKey)\r\n    return phones ? JSON.parse(phones) : []\r\n  }\r\n\r\n  public add(phone: StoragePhone): StoragePhone | null {\r\n    const phones = this.getAll()\r\n    if (phones.find((p) => p.id === phone.id)) return null\r\n\r\n    // TODO: maybe max number should come from backend\r\n    if (phones.length >= 6) {\r\n      const popped = phones.shift()\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return popped ?? null\r\n    } else {\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return null\r\n    }\r\n  }\r\n\r\n  public update(id: number, newStatus: Feedback) {\r\n    const phones = this.getAll()\r\n    const toUpdate = phones.find((p) => p.id === id)\r\n    if (!toUpdate) return\r\n    toUpdate.status = newStatus\r\n    toUpdate.restore.lastStatus = newStatus\r\n    localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n  }\r\n}\r\n\r\nexport { PhoneStorage }\r\n","import { useCallback } from 'react'\r\nimport { useRerender } from '.'\r\n\r\nconst useReactive = () => {\r\n  const { forceUpdate } = useRerender()\r\n\r\n  const reactive = useCallback(\r\n    <T extends (...args: any[]) => any>(cb: T) =>\r\n      ((...args) => {\r\n        const returnData = cb(...args)\r\n        forceUpdate()\r\n        return returnData\r\n      }) as T,\r\n    [forceUpdate]\r\n  )\r\n\r\n  return { reactive }\r\n}\r\n\r\nexport { useReactive }\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useRerender = () => {\r\n  const [, setDummy] = useState<any>()\r\n  const forceUpdate = useCallback(() => {\r\n    const newRef = {}\r\n    setDummy(newRef)\r\n  }, [])\r\n  return { forceUpdate }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface SwitchProps {\r\n  label: string\r\n  onChange: (checked: boolean) => void\r\n  checked: boolean\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = ({ label, onChange, checked }) => (\r\n  <SwitchContainer>\r\n    <input\r\n      type=\"checkbox\"\r\n      id={`${label.split(' ').join('-')}-check`}\r\n      checked={checked}\r\n      onChange={(e) => onChange(e.target.checked)}\r\n    />\r\n    <label htmlFor={`${label.split(' ').join('-')}-check`}>{label}</label>\r\n  </SwitchContainer>\r\n)\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n\r\n  input {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 36px;\r\n    height: 20px;\r\n    opacity: 0;\r\n    z-index: 0;\r\n\r\n    :checked + label:before {\r\n      background-color: rgba(63, 81, 181, 0.5);\r\n    }\r\n\r\n    :checked + label:after {\r\n      left: 16px;\r\n      background-color: cornflowerblue;\r\n    }\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    padding: 0 0 0 44px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n\r\n    ::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 5px;\r\n      left: 0;\r\n      width: 36px;\r\n      height: 14px;\r\n      background-color: #999;\r\n      border-radius: 14px;\r\n      z-index: 1;\r\n      transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n\r\n    ::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 0;\r\n      width: 20px;\r\n      height: 20px;\r\n      background-color: #fff;\r\n      border-radius: 14px;\r\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\r\n      z-index: 2;\r\n      transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n      transition-property: left, background-color;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Switch }\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport {\r\n  NameState,\r\n  ReturnedNameState,\r\n  AlertOptions,\r\n  AlertProviderInterface,\r\n} from \"./types\";\r\n\r\nconst emptyState: ReturnedNameState = {\r\n  timeout: 0,\r\n  data: null,\r\n  show: false,\r\n  permanent: false,\r\n};\r\n\r\nexport const useAlertInner = (): AlertProviderInterface => {\r\n  const [state, setState] = useState<Record<string, NameState | undefined>>({});\r\n\r\n  const showHandler = useCallback((name: string, opts?: AlertOptions) => {\r\n    const { timeout = 4000, data, permanent = false } = opts || {};\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: {\r\n        timeout: timeout || 0,\r\n        data: data || null,\r\n        permanent,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const hideHandler = useCallback((name: string) => {\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: undefined,\r\n    }));\r\n  }, []);\r\n\r\n  const hideAllHandler = useCallback(() => {\r\n    setState({});\r\n  }, []);\r\n\r\n  const getByName = useCallback(\r\n    (name: string): ReturnedNameState => ({\r\n      show: true,\r\n      ...(state[name] || emptyState),\r\n    }),\r\n    [state]\r\n  );\r\n\r\n  const AlertManager = useMemo(\r\n    () => ({\r\n      show: showHandler,\r\n      hide: hideHandler,\r\n      hideAll: hideAllHandler,\r\n    }),\r\n    [showHandler, hideHandler, hideAllHandler]\r\n  );\r\n\r\n  return {\r\n    AlertManager,\r\n    getByName,\r\n  };\r\n};\r\n","import React, { FunctionComponent, createContext } from \"react\";\r\nimport { AlertProviderInterface } from \"./types\";\r\nimport { useAlertInner } from \"./useAlertInner\";\r\n\r\nexport const AlertContext = createContext<AlertProviderInterface>(\r\n  {} as AlertProviderInterface\r\n);\r\n\r\nexport const AlertProvider: FunctionComponent = ({ children }) => {\r\n  const alertValue = useAlertInner();\r\n\r\n  return (\r\n    <AlertContext.Provider value={alertValue}>{children}</AlertContext.Provider>\r\n  );\r\n};\r\n","import { keyframes } from \"styled-components\";\r\n\r\nexport const fadeIn = () => keyframes`\r\n  from { opacity: 0 }\r\n  to { opacity: 1 }\r\n`;\r\n\r\nexport const fadeOut = () => keyframes`\r\n  from { opacity: 1 }\r\n  to { opacity: 0 }\r\n`;\r\n\r\nexport const popUp = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(0) }\r\n  to { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDown = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translateY(0) }\r\n`;\r\n\r\nexport const popUpCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, 0) }\r\n  to { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDownCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translate(-50%, 0) }\r\n`;\r\n\r\nexport const customEnterAnimation = keyframes`\r\n  0% { transform: translateY(calc(-100% + 40px)) translateX(-50%) }\r\n  70% { transform: translateY(calc(-500%)) translateX(-50%) }\r\n  100% { transform: translateY(calc(-300%)) translateX(-50%) }\r\n`;\r\n\r\nexport const customExitAnimation = keyframes`\r\n  0% { transform: translateY(calc(-300%)) translateX(-50%); }\r\n  30% { transform: translateY(calc(-500%)) translateX(-50%); }\r\n  100% { transform: translateY(calc(-100% + 40px)) translateX(-50%); }\r\n`;\r\n","import { css } from 'styled-components'\r\nimport { AllowedPositions } from './types'\r\nimport { popUp, popDown, popUpCentered, popDownCentered } from './animations'\r\n\r\nexport const getPositionalCSS = (\r\n  position: AllowedPositions | undefined,\r\n  show: boolean,\r\n  animationDuration: number\r\n): ReturnType<typeof css> | string => {\r\n  if (!position) return ''\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top-centered', show, animationDuration)}\r\n        top: 10px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n    case 'top-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        left: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'top-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        right: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation(\r\n          'bottom-centered',\r\n          show,\r\n          animationDuration\r\n        )}\r\n        top: 100vh;\r\n        left: 50%;\r\n        transform: translate(-50%, calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        left: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        right: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nconst commonPositionalStyle = `\r\n    position: fixed;\r\n    z-index: 100000;\r\n`\r\n\r\nconst getDesktopScackbarAnimation = (\r\n  position: 'bottom' | 'top' | 'bottom-centered' | 'top-centered',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [pd, pu] = position.endsWith('centered')\r\n    ? [popDownCentered(true), popUpCentered(true)]\r\n    : [popDown(true), popUp(true)]\r\n\r\n  const [enter, exit] = position.startsWith('top') ? [pd, pu] : [pu, pd]\r\n\r\n  return css`\r\n    animation: ${show ? enter : exit} ${animationDuration}s\r\n      ${show ? 'ease-out' : 'ease-in'};\r\n  `\r\n}\r\n\r\nconst getMobileSnackbarStyle = (\r\n  position: 'bottom' | 'top',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [enter, exit] =\r\n    position === 'top' ? [popDown(), popUp()] : [popUp(), popDown()]\r\n\r\n  return css`\r\n    ${({ theme }) => theme.breakpoints.down('sm')} {\r\n      width: 100vw;\r\n      border-radius: 0;\r\n      left: 0;\r\n      right: 0;\r\n      ${position === 'top' ? 'top: 0;' : ''}\r\n      transform: ${position === 'bottom' ? 'translateY(-100%)' : 'none'};\r\n      animation: ${show ? enter : exit} ${animationDuration}s\r\n        ${show ? 'ease-out' : 'ease-in'};\r\n    }\r\n  `\r\n}\r\n","import {\r\n  FunctionComponent,\r\n  ReactElement,\r\n  useCallback,\r\n  cloneElement,\r\n  useContext,\r\n} from 'react'\r\nimport { AlertContext } from './Provider'\r\n\r\ninterface DismissableProps {\r\n  children: ReactElement\r\n}\r\n\r\ninterface InnerDismissableProps extends DismissableProps {\r\n  name: string\r\n}\r\n\r\nexport const Dismissable: FunctionComponent<DismissableProps> = () => null\r\n\r\nexport const InnerDismissable: FunctionComponent<InnerDismissableProps> = ({\r\n  name,\r\n  children,\r\n}) => {\r\n  const { AlertManager } = useContext(AlertContext)\r\n\r\n  const dismiss = useCallback(() => AlertManager.hide(name), [\r\n    name,\r\n    AlertManager,\r\n  ])\r\n\r\n  return cloneElement(children, { onClick: dismiss })\r\n}\r\n","import React, {\r\n  FunctionComponent,\r\n  useLayoutEffect,\r\n  useState,\r\n  useContext,\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  useRef,\r\n} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styled, { css, Keyframes } from 'styled-components'\r\nimport { AlertContext } from './Provider'\r\nimport { fadeIn, fadeOut } from './animations'\r\nimport { AllowedPositions } from './types'\r\nimport { getPositionalCSS } from './utils'\r\nimport { InnerDismissable, Dismissable } from './Dismissable'\r\n\r\ninterface AlertProps {\r\n  name: string\r\n  onClose?: () => void\r\n  enterAnimation?: Keyframes | 'none'\r\n  exitAnimation?: Keyframes | 'none'\r\n  animationDuration?: number\r\n  animationTimingFunction?: (show: boolean) => string\r\n  noStyle?: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  position?: AllowedPositions\r\n  id?: string\r\n  onClick?: () => void\r\n}\r\n\r\nexport const Alert: FunctionComponent<AlertProps> = ({\r\n  name,\r\n  onClose,\r\n  enterAnimation,\r\n  exitAnimation,\r\n  animationDuration = 0.3,\r\n  animationTimingFunction = () => 'linear',\r\n  noStyle = false,\r\n  children,\r\n  containerCSS,\r\n  position,\r\n  id,\r\n  onClick,\r\n}) => {\r\n  const { getByName, AlertManager } = useContext(AlertContext)\r\n  const { show, timeout, data, permanent } = getByName(name)\r\n\r\n  const [isShowing, setIsShowing] = useState(false)\r\n  const [storedData, setStoredData] = useState<any>(null)\r\n  const hideTimeoutRef = useRef<number | undefined>(undefined)\r\n\r\n  const waitAnimation = () =>\r\n    new Promise((r) => setTimeout(r, animationDuration * 1000))\r\n\r\n  const handleHide = () => {\r\n    const doHide = () => {\r\n      clearTimeout(hideTimeoutRef.current)\r\n      setIsShowing(false)\r\n      setStoredData(null)\r\n      onClose?.()\r\n    }\r\n    if (exitAnimation !== 'none') waitAnimation().then(doHide)\r\n    else doHide()\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (show) {\r\n      setIsShowing(true)\r\n      data && setStoredData(data)\r\n      if (!permanent) {\r\n        hideTimeoutRef.current = setTimeout(\r\n          () => AlertManager.hide(name),\r\n          timeout\r\n        )\r\n      }\r\n    } else if (isShowing) {\r\n      handleHide()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [show])\r\n\r\n  if (!isShowing) return null\r\n\r\n  const processedChildren = (typeof children === 'function'\r\n    ? children(storedData)\r\n    : children) as ReactElement | ReactElement[] | string\r\n\r\n  const Snack = (\r\n    <Container\r\n      id={id || name}\r\n      noStyle={noStyle}\r\n      animation={show ? enterAnimation || fadeIn() : exitAnimation || fadeOut()}\r\n      animationDuration={animationDuration}\r\n      animationTimingFunction={animationTimingFunction(show)}\r\n      show={show}\r\n      containerCSS={containerCSS}\r\n      position={position}\r\n      onClick={onClick}\r\n      role=\"alert\"\r\n    >\r\n      {Children.map(processedChildren, (child) => {\r\n        if (!child) return child\r\n\r\n        // @ts-ignore\r\n        if (isValidElement(child) && child.type.name === Dismissable.name) {\r\n          return (\r\n            <InnerDismissable name={name}>\r\n              <span>{child.props.children}</span>\r\n            </InnerDismissable>\r\n          )\r\n        }\r\n        return child\r\n      })}\r\n    </Container>\r\n  )\r\n\r\n  if (position)\r\n    return ReactDOM.createPortal(Snack, document.querySelector('body')!)\r\n\r\n  return Snack\r\n}\r\n\r\nconst Container = styled.div<{\r\n  animation: Keyframes | 'none'\r\n  noStyle: boolean\r\n  animationDuration: number\r\n  show: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  animationTimingFunction: string\r\n  position?: AllowedPositions\r\n  onClick?: () => void\r\n}>`\r\n  ${({\r\n    noStyle,\r\n    animation,\r\n    animationDuration,\r\n    show,\r\n    containerCSS,\r\n    animationTimingFunction,\r\n    position,\r\n    onClick,\r\n  }) => {\r\n    const animationProps = css`\r\n      animation: ${animation} ${animationDuration}s ${animationTimingFunction};\r\n      opacity: ${show ? 1 : 0};\r\n    `\r\n    return noStyle\r\n      ? css`\r\n          ${animationProps}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n      : css`\r\n          box-sizing: border-box;\r\n          border-radius: 4px;\r\n          background-color: #333;\r\n          color: #eee;\r\n          padding: 15px 20px;\r\n          width: fit-content;\r\n          display: inline-block;\r\n          cursor: ${onClick ? 'pointer' : 'initial'};\r\n          ${animationProps}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n  }}\r\n`\r\n","import { useContext } from \"react\";\r\nimport { AlertContext } from \"./Provider\";\r\n\r\nexport const useAlerts = () => {\r\n  const { AlertManager } = useContext(AlertContext);\r\n\r\n  return { AlertManager };\r\n};\r\n","import React, { useRef, useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar as BNavbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n} from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth, useConfig } from 'hooks'\r\nimport { Switch } from './Switch'\r\nimport { useOnClickOutside } from 'hooks/utils'\r\nimport { Alert, useAlerts } from './Alert'\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [collapsed, setCollapsed] = useState(true)\r\n  const mobileNavRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useOnClickOutside(mobileNavRef, () => !collapsed && setCollapsed(true))\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    toggleAdvancedMode,\r\n    toggleDarkMode,\r\n    toggleTestMode,\r\n  } = useConfig()\r\n\r\n  const { isAuth, isAdmin, doLogout } = useAuth()\r\n\r\n  const onLogout = () => {\r\n    doLogout()\r\n    onLinkClicked()\r\n  }\r\n\r\n  const onLinkClicked = () => toggleNavbar()\r\n\r\n  const onTestModeClick = (checked: boolean) => {\r\n    checked\r\n      ? AlertManager.show('test-mode-alert')\r\n      : AlertManager.hide('test-mode-alert')\r\n    toggleTestMode(checked)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"test-mode-alert\" position=\"bottom\">\r\n        En el modo de prueba, todo funciona con un duplicado de la app real.\r\n      </Alert>\r\n      <div ref={mobileNavRef}>\r\n        <BNavbar color=\"dark\" dark>\r\n          <Container>\r\n            <NavbarBrand className=\"mr-auto\">\r\n              {process.env.REACT_APP_CONG_INITIALS} Telefónica{' '}\r\n              <Version>v{process.env.REACT_APP_VERSION}</Version>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n            <Collapse isOpen={!collapsed} navbar>\r\n              <MobileNav navbar>\r\n                <NavItem>\r\n                  <Switch\r\n                    label=\"Modo oscuro\"\r\n                    checked={darkModeEnabled}\r\n                    onChange={toggleDarkMode}\r\n                  />\r\n                </NavItem>\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo avanzado\"\r\n                      checked={advancedModeEnabled}\r\n                      onChange={toggleAdvancedMode}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo de prueba\"\r\n                      checked={testModeEnabled}\r\n                      onChange={onTestModeClick}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <LinkSection>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink to=\"/admin-panel\" background=\"dark\">\r\n                        Ir al Panel de administración\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink to=\"/telefonica\" background=\"dark\">\r\n                        Ir a Telefónica\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                  </LinkSection>\r\n                )}\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <ButtonContainer>\r\n                      <Button onClick={onLogout}>Cerrar sesión</Button>\r\n                    </ButtonContainer>\r\n                  </NavItem>\r\n                )}\r\n              </MobileNav>\r\n            </Collapse>\r\n          </Container>\r\n        </BNavbar>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Version = styled.small`\r\n  color: ${({ theme }) => theme.text.colors.secondary};\r\n`\r\n\r\nconst MobileNav = styled(Nav)`\r\n  justify-content: right;\r\n  text-align: right;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n`\r\n\r\nconst Button = styled(NavLink)`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n`\r\n\r\nconst RouterLink = styled(Link)<{ noPadding?: boolean; background?: 'dark' }>`\r\n  color: ${({ theme, background }) =>\r\n    background === 'dark' || theme.darkMode\r\n      ? theme.text.colors.lightgreen\r\n      : theme.text.colors.info};\r\n  display: inline-block;\r\n  padding: ${({ noPadding }) => (noPadding ? 0 : 0.5)}rem 0rem;\r\n`\r\n\r\nconst LinkSection = styled.div`\r\n  border-top: 1px solid gray;\r\n`\r\n\r\nexport { Navbar, RouterLink }\r\n","import { useEffect, RefObject } from 'react'\r\n\r\ntype Event = MouseEvent | TouchEvent\r\n\r\nconst useOnClickOutside = <T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: Event) => void\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: Event) => {\r\n      const el = ref?.current\r\n      if (!el || el.contains((event?.target as Node) || null)) {\r\n        return\r\n      }\r\n      handler(event)\r\n    }\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\nexport { useOnClickOutside }\r\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TestingLabel: React.FC = () => (\n  <TestingLabelContainer>\n    <span>Modo de Prueba</span>\n  </TestingLabelContainer>\n)\n\nconst TestingLabelContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n  background: darkred;\n  color: white;\n  padding: 5px 10px;\n  border-top: 2px solid orange;\n  border-bottom: 2px solid orange;\n  width: 400px;\n  text-align: center;\n  transform: rotate(-45deg) translateX(-185px) translateY(73px);\n  transform-origin: left;\n`\n\nexport { TestingLabel }\n","import React from 'react'\r\nimport { css } from 'styled-components'\r\nimport { useConfig } from 'hooks'\r\nimport { Alert } from '.'\r\nimport { Navbar } from './Navbar'\r\nimport { TestingLabel } from './TestingLabel'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  const { testModeEnabled, darkModeEnabled } = useConfig()\r\n\r\n  return (\r\n    <>\r\n      {darkModeEnabled && <Helmet>{backgroundGlobalStyles}</Helmet>}\r\n      {testModeEnabled && <TestingLabel />}\r\n      <Navbar />\r\n      {children}\r\n      <Alert name=\"not-so-fast\" position=\"bottom\" containerCSS={FailedAlertCss}>\r\n        ¡No tan rápido! No es recomendable tocar un botón tan seguido.\r\n      </Alert>\r\n    </>\r\n  )\r\n}\r\n\r\nconst backgroundGlobalStyles = (\r\n  <style>{`\r\n    body {\r\n      background: #222 !important;\r\n      color: white !important;\r\n    }\r\n\r\n    table {\r\n      color: white !important;\r\n    }\r\n\r\n    .text-secondary {\r\n      color: #999 !important;\r\n    }\r\n\r\n    .modal-content {\r\n      background-color: #222 !important;\r\n    }\r\n\r\n    .close {\r\n      color: white !important;\r\n    }\r\n\r\n    .jumbotron {\r\n      background: #454b4f !important;\r\n    }\r\n\r\n    input {\r\n      border-top-style: hidden;\r\n      border-right-style: hidden;\r\n      border-left-style: hidden;\r\n      border-bottom-style: groove;\r\n      background-color: white;\r\n    }\r\n\r\n    input::placeholder {\r\n      color: #777 !important;\r\n    }\r\n\r\n    .breadcrumb {\r\n      background-color: #333;\r\n    }\r\n\r\n    .breadcrumb-item.active {\r\n      color: #ddd;\r\n    }\r\n`}</style>\r\n)\r\n\r\nconst FailedAlertCss = css`\r\n  background: #444;\r\n  border-bottom: #28a745 5px solid;\r\n  height: 76px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: ${({ theme }) => theme.text.colors.error} 5px solid;\r\n`\r\n\r\nexport { Layout }\r\n","import React from 'react'\r\nimport { Spinner as RSSpinner, Container } from 'reactstrap'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst colors = ['success', 'danger', 'warning', 'info']\r\nconst getRandomColor = () => colors[Math.floor(Math.random() * colors.length)]\r\n\r\ninterface SpinnerProps {\r\n  fulfill?: boolean\r\n  container?: boolean\r\n}\r\n\r\nconst Spinner: React.FC<SpinnerProps> = ({\r\n  fulfill = false,\r\n  container = false,\r\n}) => (\r\n  <Container className=\"h-100\">\r\n    <SpinnerContainer\r\n      fulfill={fulfill}\r\n      container={container}\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n    >\r\n      <RSSpinner\r\n        color={getRandomColor()}\r\n        style={{ width: '3rem', height: '3rem' }}\r\n      />\r\n    </SpinnerContainer>\r\n  </Container>\r\n)\r\n\r\nconst SpinnerContainer = styled.div<Required<SpinnerProps>>`\r\n  ${({ fulfill, container, theme }) =>\r\n    fulfill &&\r\n    css`\r\n      width: 100%;\r\n      height: ${container ? `calc(100vh - ${theme.navbarHeight}px)` : '100%'};\r\n    `}\r\n`\r\n\r\nexport { Spinner }\r\n","import React from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst ErrorDisplay: React.FC = () => (\r\n  <ErrorContainer className=\"d-flex justify-content-center align-items-center h-100 text-center\">\r\n    <h4>\r\n      Hubo un problema :( <br /> <br /> Intentá recargando la página.\r\n    </h4>\r\n  </ErrorContainer>\r\n)\r\n\r\nconst ErrorContainer = styled(Container)`\r\n  color: ${({ theme }) => theme.text.colors.error};\r\n`\r\n\r\nexport { ErrorDisplay }\r\n","export enum Feedback {\r\n  UNANSWERED = 0,\r\n  ANSWERED = 1,\r\n  NON_EXISTENT = 2,\r\n  NO_CALL = 3,\r\n  ANSWERING_MACHINE = 4,\r\n  POSTPONE = 5,\r\n  IGNORE = 6,\r\n}\r\n\r\nexport interface Phone {\r\n  answeredOn: null | string\r\n  answeringMachineDate: null | string\r\n  comentarios: string\r\n  commentedOn: null | string\r\n  direccion: string | null\r\n  fulfilledOn: null | string\r\n  id: number\r\n  noCall: boolean\r\n  nonExistent: boolean\r\n  postponedDays: number\r\n  telefono: string\r\n  unansweredCount: number\r\n  unansweredDate: null | string\r\n}\r\n\r\nexport type OriginalData = Pick<\r\n  Phone,\r\n  | 'answeredOn'\r\n  | 'fulfilledOn'\r\n  | 'noCall'\r\n  | 'nonExistent'\r\n  | 'postponedDays'\r\n  | 'unansweredCount'\r\n  | 'unansweredDate'\r\n>\r\n\r\nexport interface StoragePhone {\r\n  id: Phone['id']\r\n  status: null | Feedback\r\n  phone: Phone['telefono']\r\n  savedOn: number\r\n  restore: OriginalData & {\r\n    lastStatus: null | Feedback\r\n  }\r\n}\r\n","import React from 'react'\nimport { Breadcrumb as BBreadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { RouterLink } from '.'\n\ninterface BreadcrumbProps {\n  items: Array<{\n    title: string\n    linkTo?: string\n    onClick?: () => void\n  }>\n}\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => (\n  <BBreadcrumb>\n    {items.map(({ title, linkTo, onClick }, index) => (\n      <BreadcrumbItem\n        key={title}\n        onClick={onClick}\n        active={index === items.length - 1}\n      >\n        {linkTo ? (\n          <RouterLink to={linkTo} noPadding>\n            {title}\n          </RouterLink>\n        ) : (\n          title\n        )}\n      </BreadcrumbItem>\n    ))}\n  </BBreadcrumb>\n)\n\nexport { Breadcrumb }\n","import { useAlerts } from 'components'\r\nimport { useEffect, useRef, useCallback } from 'react'\r\n\r\nconst useThrottle = <T extends (...args: any) => any>(\r\n  cb: T,\r\n  timeout: number\r\n) => {\r\n  const timeoutRef = useRef<number | undefined>(undefined)\r\n  const readyRef = useRef<boolean>(true)\r\n\r\n  useEffect(() => () => clearTimeout(timeoutRef.current), [])\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useCallback(\r\n    ((...args: any) => {\r\n      if (readyRef.current === false) {\r\n        AlertManager.show('not-so-fast', { timeout: 3000 })\r\n        return\r\n      }\r\n      cb(...args)\r\n      readyRef.current = false\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        readyRef.current = true\r\n      }, timeout)\r\n    }) as T,\r\n    [cb, timeout]\r\n  )\r\n}\r\n\r\nexport { useThrottle }\r\n","import { useCallback } from 'react'\r\nimport { Fetch } from 'services'\r\nimport { useConfig } from '.'\r\n\r\nconst useFetch = () => {\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const FetchFunction = useCallback(\r\n    (useToken: boolean = true) => new Fetch(testModeEnabled, useToken),\r\n    [testModeEnabled]\r\n  )\r\n\r\n  return FetchFunction\r\n}\r\n\r\nexport { useFetch }\r\n","import React, { createContext, useState, FunctionComponent } from 'react'\r\nimport { LOCAL_STORAGE } from 'consts'\r\nimport { useFetch } from 'hooks'\r\nimport { useAlerts } from 'components'\r\n\r\ninterface AuthType {\r\n  isAuth: boolean\r\n  isLoading: boolean\r\n  isAdmin: boolean\r\n  doLogin: (userName: string, password: string) => void\r\n  doLogout: () => void\r\n}\r\n\r\ninterface LoginPayload {\r\n  username: string\r\n  password: string\r\n}\r\n\r\ninterface LoginResponse {\r\n  accessToken: string\r\n  isAdmin: boolean\r\n}\r\n\r\nexport const AuthContext = createContext<AuthType>({} as AuthType)\r\n\r\nexport const AuthProvider: FunctionComponent = ({ children }) => {\r\n  const authValue = useAuth()\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>{children}</AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = (): AuthType => {\r\n  const [isAuth, setIsAuth] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.TOKEN)\r\n  )\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.IS_ADMIN)\r\n  )\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const doLogin = async (username: string, password: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, response] = await Fetch(false).post<\r\n        LoginPayload,\r\n        LoginResponse\r\n      >('login', {\r\n        username,\r\n        password,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      localStorage.setItem(LOCAL_STORAGE.TOKEN, response.accessToken)\r\n      response.isAdmin\r\n        ? localStorage.setItem(LOCAL_STORAGE.IS_ADMIN, '1')\r\n        : localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n\r\n      setIsAdmin(response.isAdmin)\r\n      setIsAuth(true)\r\n    } catch (e) {\r\n      e.status === 401 && AlertManager.show('wrong-login-credentials')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const doLogout = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE.TOKEN)\r\n    localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n    setIsAuth(false)\r\n    setIsAdmin(false)\r\n  }\r\n\r\n  return {\r\n    isAuth,\r\n    isLoading,\r\n    isAdmin: isAuth && isAdmin,\r\n    doLogin,\r\n    doLogout,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ConfigContext, ConfigProvider } from './config'\r\nimport { AuthContext, AuthProvider } from './auth'\r\nimport { AlertProvider } from 'components/Alert'\r\n\r\nconst ContextProviders: React.FC = ({ children }) => {\r\n  return (\r\n    <AlertProvider>\r\n      <ConfigProvider>\r\n        <AuthProvider>{children}</AuthProvider>\r\n      </ConfigProvider>\r\n    </AlertProvider>\r\n  )\r\n}\r\n\r\n// Provider\r\nexport { ContextProviders }\r\n\r\n// Contexts\r\nexport { ConfigContext }\r\nexport { AuthContext }\r\n","type Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\r\n\r\nconst sizes: Record<Size, string> = {\r\n  xs: '0px',\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1150px',\r\n  xl: '1920px',\r\n}\r\n\r\nconst theme = (darkMode: boolean) => ({\r\n  darkMode,\r\n  navbarHeight: 56,\r\n  text: {\r\n    colors: {\r\n      secondary: '#999',\r\n      error: '#ff5e5e',\r\n      green: '#28a745',\r\n      blue: '#2000d4',\r\n      black: '#222',\r\n      white: '#fff',\r\n      lightgreen: 'lightgreen',\r\n      info: '#007bff',\r\n      red: '#dc3545',\r\n    },\r\n  },\r\n  breakpoints: {\r\n    up: (size: Size): string => `@media (min-width: ${sizes[size]})`,\r\n    down: (size: Size): string => `@media (max-width: ${sizes[size]})`,\r\n    between: (from: Size, to: Size): string =>\r\n      `@media (min-width: ${sizes[from]}) and (max-width: ${sizes[to]})`,\r\n  },\r\n})\r\n\r\nexport type Theme = ReturnType<typeof theme>\r\n\r\nexport { theme }\r\n","import React, { useContext } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { ConfigContext } from 'contexts'\r\nimport { theme } from './theme'\r\n\r\nconst Provider: React.FC = ({ children }) => {\r\n  const { darkModeEnabled } = useContext(ConfigContext)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme(darkModeEnabled)}>{children}</ThemeProvider>\r\n  )\r\n}\r\n\r\nexport { Provider as ThemeProvider }\r\n","import React, { KeyboardEvent, useState } from 'react'\r\nimport {\r\n  Input,\r\n  Label,\r\n  Container,\r\n  FormGroup,\r\n  Button,\r\n  Jumbotron,\r\n} from 'reactstrap'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Alert, Spinner } from 'components'\r\nimport { useAuth } from 'hooks'\r\n\r\nconst Login: React.FC = () => {\r\n  const [username, setUsername] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n\r\n  const { doLogin, isLoading } = useAuth()\r\n\r\n  const submit = () => {\r\n    if (!username || !password) return\r\n    doLogin(username, password)\r\n  }\r\n\r\n  const onKeyDown = (e: KeyboardEvent<HTMLInputElement>) =>\r\n    e.key === 'Enter' && submit()\r\n\r\n  if (isLoading) return <Spinner fulfill container />\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica Login</title>\r\n      </Helmet>\r\n      <Alert name=\"wrong-login-credentials\" position=\"bottom\">\r\n        Usuario o contraseña incorrectos.\r\n      </Alert>\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1 className=\"display-5\">Iniciar sesión</h1>\r\n          <p className=\"lead\">\r\n            Solicite los datos de ingreso a su superintendente de servicio.\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <FormGroup>\r\n          <Label for=\"username\">Usuario</Label>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Contraseña</Label>\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyDown={onKeyDown}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          <Button color=\"success\" onClick={submit}>\r\n            Ingresar\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Login }\r\n","import { Feedback } from 'types'\n\nexport const colors = {\n  0: 'danger',\n  1: 'success',\n  2: 'dark',\n  3: 'warning',\n  4: 'primary',\n  5: 'info',\n  6: 'secondary',\n}\n\nexport const labels: Record<Feedback, string> = {\n  [Feedback.UNANSWERED]: 'No en casa',\n  [Feedback.ANSWERED]: 'Atendió',\n  [Feedback.NON_EXISTENT]: 'No existe',\n  [Feedback.NO_CALL]: 'No visitar',\n  [Feedback.ANSWERING_MACHINE]: 'Contestador',\n  [Feedback.POSTPONE]: 'Aplazar',\n  [Feedback.IGNORE]: 'Ignorar',\n}\n","import React, { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalFooter } from 'reactstrap'\nimport { Feedback, StoragePhone } from 'types'\nimport { colors, labels } from '../constants'\n\nconst useConfirmationModal = () => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\n\n  const [feedbackToConfirm, setFeedbackToConfirm] = useState<Feedback | null>(\n    null\n  )\n\n  const toggleModal = () => setIsModalOpen(!isModalOpen)\n\n  const [data, setData] = useState<StoragePhone | null>(null)\n\n  const askEditConfirmation = (f: Feedback, data?: any) => {\n    toggleModal()\n    setFeedbackToConfirm(f)\n    data && setData(data)\n  }\n\n  const reset = () => {\n    setIsModalOpen(false)\n    setFeedbackToConfirm(null)\n    setData(null)\n  }\n\n  return {\n    isModalOpen,\n    feedbackToConfirm,\n    data,\n    askEditConfirmation,\n    toggleModal,\n    reset,\n  }\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  toggleModal: () => void\n  onConfirm: () => void\n  feedbackToConfirm: Feedback\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  isOpen,\n  toggleModal,\n  onConfirm,\n  feedbackToConfirm,\n}) => (\n  <Modal centered isOpen={isOpen} toggle={toggleModal}>\n    <ModalHeader toggle={toggleModal}>¿Seguro?</ModalHeader>\n    <ModalFooter>\n      {feedbackToConfirm !== null && (\n        <Button color={colors[feedbackToConfirm]} onClick={onConfirm}>\n          {labels[feedbackToConfirm]}\n        </Button>\n      )}\n    </ModalFooter>\n  </Modal>\n)\n\nexport { ConfirmationModal, useConfirmationModal }\n","import React, { useEffect, useState } from 'react'\n\ninterface PhoneLinkProps {\n  phone: string\n}\n\nconst PhoneLink: React.FC<PhoneLinkProps> = ({ phone }) => {\n  const [touchedCount, setTouchedCount] = useState<number>(0)\n\n  const addTouched = () => setTouchedCount(touchedCount + 1)\n\n  useEffect(() => {\n    setTouchedCount(0)\n  }, [phone])\n\n  return (\n    <>\n      <a\n        style={{ textDecoration: 'underline' }}\n        href={`tel:${phone}`}\n        onClick={addTouched}\n      >\n        {phone}\n      </a>\n      {Array(touchedCount)\n        .fill(null)\n        .map((_) => (\n          <span className=\"d-block text-success\">¡Tocado!</span>\n        ))}\n    </>\n  )\n}\n\nexport { PhoneLink }\n","import { useConfig } from 'hooks'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Feedback, Phone } from 'types'\r\nimport { ConfirmationModal, useConfirmationModal } from './ConfirmationModal'\r\nimport { PhoneLink } from './PhoneLink'\r\n\r\ninterface PhoneDetailsProps {\r\n  phone: Phone\r\n  comments: string\r\n  handleComments: (comments: string) => void\r\n  openHelpSection: () => void\r\n  handlePhoneFeedback: (n: Feedback) => void\r\n}\r\n\r\nconst PhoneDetails: React.FC<PhoneDetailsProps> = ({\r\n  phone,\r\n  comments,\r\n  handleComments,\r\n  openHelpSection,\r\n  handlePhoneFeedback,\r\n}) => {\r\n  const { advancedModeEnabled } = useConfig()\r\n\r\n  const {\r\n    isModalOpen,\r\n    feedbackToConfirm,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal()\r\n\r\n  const handleGeneric = (feedback: Feedback) => () => {\r\n    if (advancedModeEnabled) askEditConfirmation(feedback)\r\n    else handlePhoneFeedback(feedback)\r\n  }\r\n\r\n  const doConfirm = () => {\r\n    if (feedbackToConfirm === null) return\r\n    handlePhoneFeedback(feedbackToConfirm)\r\n    reset()\r\n  }\r\n\r\n  const handleAnswered = handleGeneric(Feedback.ANSWERED)\r\n  const handleUnanswered = handleGeneric(Feedback.UNANSWERED)\r\n  const handleNonExistent = handleGeneric(Feedback.NON_EXISTENT)\r\n  const handleNoCall = handleGeneric(Feedback.NO_CALL)\r\n  const handleAnsweringMachine = handleGeneric(Feedback.ANSWERING_MACHINE)\r\n  const handlePostpone = handleGeneric(Feedback.POSTPONE)\r\n  const handleIgnore = handleGeneric(Feedback.IGNORE)\r\n\r\n  const DesktopTable = (\r\n    <div className=\"table-responsive d-none d-sm-block\">\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Teléfono</th>\r\n            <th>Dirección</th>\r\n            {phone.comentarios ? <th>Comentarios</th> : null}\r\n            <th>Última fecha que atendió</th>\r\n            <th>Última fecha que se lo llamó</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <PhoneLink phone={phone.telefono} />\r\n            </td>\r\n            <td>{phone.direccion}</td>\r\n            {phone.comentarios ? <td>{phone.comentarios}</td> : null}\r\n            <td>{phone.answeredOn ?? 'Nunca'}</td>\r\n            <td>\r\n              {phone.unansweredDate ? (\r\n                phone.unansweredDate\r\n              ) : phone.fulfilledOn ? (\r\n                <>\r\n                  {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n                  {phone.fulfilledOn}\r\n                </>\r\n              ) : (\r\n                'Nunca'\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n  const MobileTable = (\r\n    <div className=\"d-block d-sm-none text-center\">\r\n      <span>Teléfono:</span>\r\n      <div>\r\n        <PhoneLink phone={phone.telefono} />\r\n      </div>\r\n      <br />\r\n\r\n      <span>Dirección:</span>\r\n      <div>{phone.direccion}</div>\r\n      <br />\r\n\r\n      {phone.comentarios && (\r\n        <>\r\n          <span>Comentarios:</span>\r\n          <div>{phone.comentarios}</div>\r\n          <br />\r\n        </>\r\n      )}\r\n\r\n      <span>Última fecha que atendió:</span>\r\n      <div>{phone.answeredOn ?? 'Nunca'}</div>\r\n      <br />\r\n\r\n      <span>Última fecha que se lo llamó:</span>\r\n      <div>\r\n        {phone.unansweredDate ? (\r\n          phone.unansweredDate\r\n        ) : phone.fulfilledOn ? (\r\n          <>\r\n            {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n            {phone.fulfilledOn}\r\n          </>\r\n        ) : (\r\n          'Nunca'\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const HelpButton = (\r\n    <div className=\"mt-3 mr-3 d-flex justify-content-end\">\r\n      <button\r\n        className=\"text-secondary mb-0 border-0\"\r\n        style={{ textDecoration: 'underline', background: 'none' }}\r\n        onClick={openHelpSection}\r\n      >\r\n        ¿Qué hace cada botón?\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  const CommentsSection = (\r\n    <div className=\"row my-4\">\r\n      <div className=\"col-12\">\r\n        <span className=\"text-secondary d-inline-block mb-2\">\r\n          Comentarios (opcional):\r\n        </span>\r\n        <Input\r\n          autoFocus\r\n          placeholder=\"Sus comentarios acá...\"\r\n          type=\"text\"\r\n          value={comments}\r\n          onChange={(e) => handleComments(e.target.value)}\r\n          readOnly={!advancedModeEnabled}\r\n        />\r\n\r\n        {phone.commentedOn && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Comentado el:{' '}\r\n            <span className=\"text-success\">{phone.commentedOn}</span>\r\n          </span>\r\n        )}\r\n\r\n        {phone.answeringMachineDate && (\r\n          <span className=\"d-block input-helper text-secondary\">\r\n            Último mensaje en el contestador:{' '}\r\n            <span className=\"text-success\">{phone.answeringMachineDate}</span>\r\n          </span>\r\n        )}\r\n\r\n        {!phone.commentedOn && !phone.answeringMachineDate && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Ej.: lugar de trabajo, no habla español, etc.\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const ButtonGroup = !advancedModeEnabled ? (\r\n    <div className=\"my-3 row d-flex justify-content-center\">\r\n      <div className=\"col-6 mb-3 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-success btn-lg mx-auto mx-md-0 d-block w-100\"\r\n          onClick={handleAnswered}\r\n        >\r\n          Atendió\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-3 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-danger btn-lg mx-auto mx-md-0 d-block w-100\"\r\n          onClick={handleUnanswered}\r\n        >\r\n          No en casa\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-warning btn-lg mx-auto mx-md-0 d-block w-100\"\r\n          onClick={handleNoCall}\r\n        >\r\n          No visitar\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-dark btn-lg mx-auto mx-md-0 d-block w-100\"\r\n          onClick={handleNonExistent}\r\n        >\r\n          No existe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"my-3 row d-flex justify-content-center\">\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-success btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleAnswered}\r\n        >\r\n          Atendió\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-danger btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleUnanswered}\r\n        >\r\n          No en casa\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-primary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleAnsweringMachine}\r\n        >\r\n          Contestador\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-info btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handlePostpone}\r\n        >\r\n          Aplazar\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-secondary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleIgnore}\r\n        >\r\n          Ignorar\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 mb-2 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-warning btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleNoCall}\r\n        >\r\n          No visitar\r\n        </button>\r\n      </div>\r\n      <div className=\"col-6 col-md-auto\">\r\n        <button\r\n          className=\"btn btn-dark btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n          onClick={handleNonExistent}\r\n        >\r\n          No existe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"container py-4\">\r\n        {DesktopTable}\r\n        {MobileTable}\r\n        {advancedModeEnabled && HelpButton}\r\n        {CommentsSection}\r\n        {ButtonGroup}\r\n        {feedbackToConfirm !== null && (\r\n          <ConfirmationModal\r\n            isOpen={isModalOpen}\r\n            toggleModal={toggleModal}\r\n            onConfirm={doConfirm}\r\n            feedbackToConfirm={feedbackToConfirm}\r\n          />\r\n        )}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border-top: none;\r\n  border-right: none;\r\n  border-left: none;\r\n  border-image: initial;\r\n  border-bottom: 2px solid ${({ theme }) => theme.text.colors.secondary};\r\n  outline: none;\r\n  transition: border-bottom-color 0.25s;\r\n  margin-bottom: 0.5em;\r\n  border-radius: 5px;\r\n  padding: 0 10px;\r\n\r\n  :focus {\r\n    border-bottom-color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.black};\r\n  }\r\n`\r\n\r\nexport { PhoneDetails }\r\n","import { useConfig } from 'hooks'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface HelpSectionProps {\r\n  close: () => void\r\n}\r\n\r\nconst HelpSection: React.FC<HelpSectionProps> = ({ close }) => {\r\n  const { advancedModeEnabled } = useConfig()\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"text-center\">\r\n        <h6>\r\n          ¿Qué hace el botón de <span className=\"text-success\">atendió</span>?\r\n        </h6>\r\n        <p>\r\n          Manda el número al final de la cola y registra la fecha en que se\r\n          atendió.\r\n        </p>\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <h6>\r\n          ¿Qué hace el botón de <span className=\"text-danger\">no atendió</span>?\r\n        </h6>\r\n        <p>\r\n          Guarda el número para llamarlo de vuelta mañana, hasta un máximo de 3\r\n          días. Al tercer día, si no atendió, se lo manda al final de la cola.\r\n        </p>\r\n      </div>\r\n      {advancedModeEnabled && (\r\n        <>\r\n          <div className=\"text-center\">\r\n            <h6>\r\n              ¿Qué hace el botón de{' '}\r\n              <span className=\"text-primary\">contestador</span>?\r\n            </h6>\r\n            <p>\r\n              Congela el número por 10 días para darle una segunda oportunidad,\r\n              luego lo manda al final de la cola obligatoriamente. En el caso de\r\n              que el número ya fuera una rellamada (ej.: si ayer se le puso \"no\r\n              en casa\"), este botón lo manda directamenet al final de la cola\r\n              dado que ya tuve 2 oportunidades y se dejo ahora un mensaje.\r\n            </p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <h6>\r\n              ¿Qué hace el botón de <span className=\"text-info\">aplazar</span>?\r\n            </h6>\r\n            <p>Congela el número para que se lo llame dentro de 3 días.</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <h6>\r\n              ¿Qué hace el botón de{' '}\r\n              <span className=\"text-secondary\">ignorar</span>?\r\n            </h6>\r\n            <p>Manda el número directamente al final de la cola.</p>\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className=\"text-center\">\r\n        <h6>\r\n          ¿Qué hace el botón de <span className=\"text-warning\">no visitar</span>\r\n          ?\r\n        </h6>\r\n        <p>\r\n          Quita el número de la cola. No se lo borra pero tampoco se lo volverá\r\n          a llamar.\r\n        </p>\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <h6>\r\n          ¿Qué hace el botón de{' '}\r\n          <span className=\"text-secondary\">no existe</span>?\r\n        </h6>\r\n        <p>\r\n          Suspende el número durante 6 meses. Luego vuelve a la cola porque\r\n          existe la posibilidad de que se haya reactivado.\r\n        </p>\r\n      </div>\r\n\r\n      <p className=\"text-center\">\r\n        Nota: en ningún caso se borran los números. Si correspondiera (por ej.\r\n        por estar fuera del territorio), por favor, comunicarse con el siervo de\r\n        territorios.\r\n      </p>\r\n\r\n      <Button className=\"btn btn-secondary\" onClick={close}>\r\n        Volver\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - ${({ theme }) => theme.navbarHeight}px);\r\n  justify-content: space-evenly;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n`\r\n\r\nexport { HelpSection }\r\n","import React, { useState } from 'react'\r\nimport { Collapse } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { usePhoneStorage } from 'hooks'\r\nimport { Feedback, StoragePhone } from 'types'\r\nimport { isToday } from 'utils'\r\nimport { colors, labels } from '../constants'\r\nimport { useConfirmationModal, ConfirmationModal } from './'\r\n\r\ninterface PhonesInStorageProps {\r\n  currentPhoneId: number\r\n  onEditRequest: (storagePhone: StoragePhone, newStatus: Feedback) => void\r\n  PhoneStorage: ReturnType<typeof usePhoneStorage>\r\n}\r\n\r\nconst PhonesInStorage: React.FC<PhonesInStorageProps> = ({\r\n  currentPhoneId,\r\n  onEditRequest,\r\n  PhoneStorage,\r\n}) => {\r\n  const [collapsed, setCollapsed] = useState<number | null>(null)\r\n  const {\r\n    isModalOpen,\r\n    feedbackToConfirm,\r\n    data: storagePhoneToConfirm,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal()\r\n\r\n  const resetStates = () => {\r\n    setCollapsed(null)\r\n    reset()\r\n  }\r\n\r\n  const handleCollapsed = (i: number) =>\r\n    collapsed !== i ? setCollapsed(i) : setCollapsed(null)\r\n\r\n  const doConfirm = () => {\r\n    if (!storagePhoneToConfirm || feedbackToConfirm === null) return\r\n    onEditRequest(storagePhoneToConfirm, feedbackToConfirm)\r\n    resetStates()\r\n  }\r\n\r\n  const phones = PhoneStorage.getAll()\r\n\r\n  const rows = phones.reverse().map((p, i) => {\r\n    if (p.id === currentPhoneId) return null\r\n\r\n    const phoneIsFromToday = isToday(p.savedOn)\r\n    const color = p.status !== null ? colors[p.status] : ''\r\n\r\n    const statusLabel =\r\n      !phoneIsFromToday && p.status === null\r\n        ? 'Asignado a otro publicador'\r\n        : p.status !== null\r\n        ? labels[p.status]\r\n        : 'Sin respuesta'\r\n\r\n    const isCollapsed = i === collapsed\r\n\r\n    return (\r\n      <tr key={p.id} style={{ position: 'relative' }}>\r\n        <td>{p.phone}</td>\r\n        <td>\r\n          <span className={`text-${color}`}>{statusLabel}</span>\r\n        </td>\r\n        <td>\r\n          {phoneIsFromToday && (\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => handleCollapsed(i)}\r\n            >\r\n              Editar\r\n            </button>\r\n          )}\r\n          <CollapseButtons isOpen={isCollapsed}>\r\n            {p.status !== Feedback.ANSWERED && (\r\n              <button\r\n                className=\"btn btn-success btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.ANSWERED, p)}\r\n              >\r\n                Atendió\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.UNANSWERED && (\r\n              <button\r\n                className=\"btn btn-danger btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.UNANSWERED, p)}\r\n              >\r\n                No en casa\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.ANSWERING_MACHINE && (\r\n              <button\r\n                className=\"btn btn-primary btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() =>\r\n                  askEditConfirmation(Feedback.ANSWERING_MACHINE, p)\r\n                }\r\n              >\r\n                Contestador\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.POSTPONE && (\r\n              <button\r\n                className=\"btn btn-info btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.POSTPONE, p)}\r\n              >\r\n                Aplazar\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.IGNORE && (\r\n              <button\r\n                className=\"btn btn-secondary btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.IGNORE, p)}\r\n              >\r\n                Ignorar\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.NO_CALL && (\r\n              <button\r\n                className=\"btn btn-warning btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.NO_CALL, p)}\r\n              >\r\n                No visitar\r\n              </button>\r\n            )}\r\n            {p.status !== Feedback.NON_EXISTENT && (\r\n              <button\r\n                className=\"btn btn-dark btn-sm d-inline-block mr-1 mb-2\"\r\n                onClick={() => askEditConfirmation(Feedback.NON_EXISTENT, p)}\r\n              >\r\n                No existe\r\n              </button>\r\n            )}\r\n          </CollapseButtons>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  const dataInStorage: boolean = rows.filter((r) => !!r).length > 0\r\n\r\n  if (!dataInStorage) return null\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"container mb-3\">\r\n        Números anteriores en este dispositivo:\r\n      </h6>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Teléfono</th>\r\n              <th>Estado</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{rows}</tbody>\r\n        </table>\r\n      </div>\r\n      {feedbackToConfirm !== null && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={doConfirm}\r\n          feedbackToConfirm={feedbackToConfirm}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CollapseButtons = styled(Collapse)`\r\n  position: absolute;\r\n  left: 0px;\r\n  background: rgb(34, 34, 34);\r\n  width: 100%;\r\n  border: 1px solid rgb(102, 102, 102);\r\n  padding: ${({ isOpen }) => (isOpen ? '20px' : '0')} 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  transition: padding 0.3s, height 0.3s;\r\n`\r\n\r\nexport { PhonesInStorage }\r\n","export const isToday = (date: number) => {\r\n  const inputDate = new Date(date)\r\n  const todaysDate = new Date()\r\n\r\n  return inputDate.setHours(0, 0, 0, 0) === todaysDate.setHours(0, 0, 0, 0)\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, ErrorDisplay, Spinner, useAlerts } from 'components'\r\nimport { PhoneResponse } from './types'\r\nimport { HelpSection, PhoneDetails, PhonesInStorage } from './components'\r\nimport { Route, Switch, useHistory } from 'react-router'\r\nimport { css } from 'styled-components'\r\nimport { useConfig, usePhoneStorage, useFetch } from 'hooks'\r\nimport { Feedback, StoragePhone } from 'types'\r\nimport { useThrottle } from 'hooks/utils'\r\n\r\nconst Telefonica: React.FC = () => {\r\n  const [phone, setPhone] = useState<PhoneResponse['phone'] | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const [error, setError] = useState<boolean>(false)\r\n  const [comments, setComments] = useState<string>('')\r\n\r\n  const PhoneStorage = usePhoneStorage()\r\n\r\n  const { advancedModeEnabled } = useConfig()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const fetchPhone = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      setError(false)\r\n      const [err, newPhone] = await Fetch().get<PhoneResponse>('next')\r\n\r\n      if (err) throw err\r\n\r\n      setPhone(newPhone.phone)\r\n      setComments(newPhone.phone.comentarios)\r\n      AlertManager.show('new-phone-received', {\r\n        timeout: 5000,\r\n      })\r\n      PhoneStorage.add({\r\n        id: newPhone.phone.id,\r\n        status: null,\r\n        phone: newPhone.phone.telefono,\r\n        savedOn: Date.now(),\r\n        restore: {\r\n          ...newPhone.original,\r\n          lastStatus: null,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.log({ e })\r\n      setError(true)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [AlertManager, PhoneStorage, Fetch])\r\n\r\n  useEffect(() => {\r\n    fetchPhone()\r\n  }, [fetchPhone])\r\n\r\n  const onFeedback = async (feedback: Feedback) => {\r\n    if (!phone) return\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: phone.id,\r\n        answered: feedback,\r\n        comments: comments,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      fetchPhone()\r\n      PhoneStorage.update(phone.id, feedback)\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const onEditRequest = async (\r\n    storagePhone: StoragePhone,\r\n    newStatus: Feedback\r\n  ) => {\r\n    try {\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: storagePhone.id,\r\n        answered: newStatus,\r\n        restore: storagePhone.restore,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      PhoneStorage.update(storagePhone.id, newStatus)\r\n      AlertManager.show('edit-success')\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n    }\r\n  }\r\n\r\n  const sendFeedback = useThrottle(onFeedback, 5000)\r\n  const editNumber = useThrottle(onEditRequest, 5000)\r\n\r\n  const history = useHistory()\r\n\r\n  const openHelpSection = () => history.push('/telefonica/help')\r\n  const closeHelpSection = () => history.goBack()\r\n\r\n  const handleComments = (c: string) => setComments(c)\r\n\r\n  if (error) return <ErrorDisplay />\r\n\r\n  if (isLoading || !phone) return <Spinner fulfill container />\r\n\r\n  const Main = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica</title>\r\n      </Helmet>\r\n      <Alert name=\"new-phone-received\" position=\"top\" containerCSS={AlertCss}>\r\n        <div className=\"text-center\">✨ ¡Nuevo número recibido! ✨🎉</div>\r\n      </Alert>\r\n      <Alert\r\n        name=\"feedback-failed\"\r\n        position=\"top\"\r\n        containerCSS={FailedAlertCss}\r\n      >\r\n        <div className=\"text-center\">No se pudo enviar su feedback 😢</div>\r\n      </Alert>\r\n      <Alert name=\"edit-success\" position=\"bottom\" containerCSS={AlertCss}>\r\n        <div className=\"text-center\">Número actualizado.</div>\r\n      </Alert>\r\n      <PhoneDetails\r\n        phone={phone}\r\n        comments={comments}\r\n        handleComments={handleComments}\r\n        openHelpSection={openHelpSection}\r\n        handlePhoneFeedback={sendFeedback}\r\n      />\r\n      {advancedModeEnabled && (\r\n        <PhonesInStorage\r\n          PhoneStorage={PhoneStorage}\r\n          currentPhoneId={phone.id}\r\n          onEditRequest={editNumber}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n\r\n  const Help = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica Ayuda</title>\r\n      </Helmet>\r\n      <HelpSection close={closeHelpSection} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path=\"/telefonica\" exact render={Main} />\r\n        <Route path=\"/telefonica/help\" exact component={Help} />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst AlertCss = css`\r\n  background: #444;\r\n  border-bottom: #28a745 5px solid;\r\n  height: 76px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst FailedAlertCss = css`\r\n  ${AlertCss}\r\n  border-bottom: ${({ theme }) => theme.text.colors.error} 5px solid;\r\n`\r\n\r\nexport { Telefonica }\r\n","import { useMemo } from 'react'\r\nimport { PhoneStorage as PhoneStorageConstructor } from 'services'\r\nimport { useConfig } from '.'\r\nimport { useReactive } from './utils'\r\n\r\nconst usePhoneStorage = () => {\r\n  const { reactive } = useReactive()\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const PhoneStorage = useMemo(\r\n    () => new PhoneStorageConstructor(testModeEnabled),\r\n    [testModeEnabled]\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      getAll: PhoneStorage.getAll.bind(PhoneStorage),\r\n      add: reactive(PhoneStorage.add.bind(PhoneStorage)),\r\n      update: reactive(PhoneStorage.update.bind(PhoneStorage)),\r\n    }),\r\n    [PhoneStorage, reactive]\r\n  )\r\n}\r\n\r\nexport { usePhoneStorage }\r\n","import { RouterLink } from 'components'\r\nimport React from 'react'\r\nimport { Container, Jumbotron } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst AdminPanel: React.FC = () => (\r\n  <>\r\n    <Jumbotron fluid>\r\n      <Container>\r\n        <h1 className=\"display-5\">Panel de Administración</h1>\r\n      </Container>\r\n    </Jumbotron>\r\n    <Container>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/statistics\" background=\"dark\">\r\n          <span>📚</span> Estadísticas\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/add-phones\" background=\"dark\">\r\n          <span>➕</span> Agregar números a la base de datos\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/search-and-edit\" background=\"dark\">\r\n          <span>🔎</span> Buscador inteligente\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/settings\" background=\"dark\">\r\n          <span>🛠</span> Configuración de la App\r\n        </RouterLink>\r\n      </Item>\r\n    </Container>\r\n  </>\r\n)\r\n\r\nconst Item = styled.div`\r\n  margin: 1em 0;\r\n  background: #343a40 !important;\r\n  padding: 0 1em;\r\n  border-radius: 10px;\r\n\r\n  > a {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport { AdminPanel }\r\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useFetch } from 'hooks'\nimport { Breadcrumb, ErrorDisplay, Spinner } from 'components'\nimport { Statistics } from './types'\n\nconst breadcrumbItems = [\n  {\n    title: 'Panel de Administración',\n    linkTo: '/admin-panel',\n  },\n  {\n    title: 'Estadísticas',\n  },\n]\n\nconst StatisticsPanel: React.FC = () => {\n  const [data, setData] = useState<Statistics | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [error, setError] = useState<boolean>(false)\n\n  const Fetch = useFetch()\n\n  const fetchData = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      setError(false)\n      const [err, statistics] = await Fetch().get<Statistics>('statistics')\n\n      if (err) throw err\n\n      setData(statistics)\n    } catch (e) {\n      console.log({ e })\n      setError(true)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [Fetch])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  if (error) return <ErrorDisplay />\n\n  if (isLoading || !data) return <Spinner fulfill container />\n\n  const { calls, generalData, perMonthData, perDayData } = data\n\n  const formatDecimals = (n: number) => n.toFixed(2)\n\n  return (\n    <div className=\"container pt-3\">\n      <Breadcrumb items={breadcrumbItems} />\n      <h4 className=\"mb-4\">General</h4>\n\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Números guardados</th>\n              <th>No visitar</th>\n              <th>Inexistentes</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{generalData.totalNumbers}</td>\n              <td>\n                {generalData.noCall} (\n                {formatDecimals(\n                  (generalData.noCall * 100) / generalData.totalNumbers\n                )}\n                %)\n              </td>\n              <td>\n                {generalData.nonExistent} (\n                {formatDecimals(\n                  (generalData.nonExistent * 100) / generalData.totalNumbers\n                )}\n                %)\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <h4 className=\"mb-4\">Llamadas</h4>\n\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Llamados hoy</th>\n              <th>Ayer</th>\n              <th>Esta semana</th>\n              <th>Semana pasada</th>\n              <th>Este mes</th>\n              <th>Mes pasado</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{calls.today}</td>\n              <td>{calls.yesterday}</td>\n              <td>{calls.thisWeek}</td>\n              <td>{calls.lastWeek}</td>\n              <td>{calls.thisMonth}</td>\n              <td>{calls.lastMonth}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <h4 className=\"mb-4\">Estadísticas por mes</h4>\n\n      <small>\n        El TA se calcula haciendo: Números únicos existentes / Números totales\n        existentes.\n      </small>\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Mes</th>\n              <th>Llamadas</th>\n              <th>Números únicos</th>\n              <th>Números únicos existentes</th>\n              <th>Atendieron</th>\n              <th>Territorio abarcado</th>\n            </tr>\n          </thead>\n          <tbody>\n            {perMonthData.months.map((row, i) =>\n              row.date === '07/2020' ? (\n                <tr key={i}>\n                  <td>{row.date}</td>\n                  <td>{row.total + 2088}</td>\n                  <td>{row.different + 2088}</td>\n                  <td>{row.different + 2088 - row.inexistent}</td>\n                  <td>\n                    {row.answered} (\n                    {formatDecimals(\n                      (row.answered * 100) /\n                        (row.different + 2088 - row.inexistent)\n                    )}\n                    %)\n                  </td>\n                  <td>\n                    {formatDecimals(\n                      ((row.different + 2088 - row.inexistent) * 100) /\n                        perMonthData.totalValidNumbers\n                    )}\n                    %\n                  </td>\n                </tr>\n              ) : (\n                <tr key={i}>\n                  <td>{row.date}</td>\n                  <td>{row.total}</td>\n                  <td>{row.different}</td>\n                  <td>{row.different - row.inexistent}</td>\n                  <td>\n                    {row.answered} (\n                    {formatDecimals(\n                      (row.answered * 100) / (row.different - row.inexistent)\n                    )}\n                    %)\n                  </td>\n                  <td>\n                    {formatDecimals(\n                      ((row.different - row.inexistent) * 100) /\n                        perMonthData.totalValidNumbers\n                    )}\n                    %\n                  </td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <h4 className=\"mb-4\">Estadísticas por día</h4>\n\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Fecha</th>\n              <th>Total de llamadas</th>\n              <th>Números únicos</th>\n              <th>Atendieron</th>\n              <th>No visitar</th>\n              <th>Números inexistentes</th>\n              <th>Porcentaje de inexistentes</th>\n            </tr>\n          </thead>\n          <tbody>\n            {perDayData.map((row, i) => (\n              <tr key={i}>\n                <td>{row.date ?? 'Nunca llamados'}</td>\n                <td>{row.totalCalls}</td>\n                <td>{row.different}</td>\n                <td>{row.answered}</td>\n                <td>{row.noCall ?? '-'}</td>\n                <td>{row.nonExistent ?? '-'}</td>\n                <td>\n                  {row.date\n                    ? Math.round((row.nonExistent * 100) / row.different) + '%'\n                    : '-'}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport { StatisticsPanel }\n","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 400;\r\n  margin-bottom: 0.75em;\r\n\r\n  > span {\r\n    font-size: 0.7em;\r\n  }\r\n`\r\nexport const Description = styled.p`\r\n  > span {\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  > button:not(:nth-of-type(1)) {\r\n    margin-left: 1em;\r\n  }\r\n`\r\n","const getRandomNumber = (): number =>\r\n  parseInt(Math.random().toFixed(1).slice(-1))\r\n\r\nexport const generateRandomNumber = (): string => {\r\n  const numbers = Array(8)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n  numbers.splice(4, 0, '-')\r\n  return numbers.join('')\r\n}\r\n\r\nexport const generateRandomInfo = (): string => {\r\n  const names = [\r\n    'Alicia Gertrudis',\r\n    'Popeye Elmarino',\r\n    'Gervasio Garcia',\r\n    'Francisco Lopez',\r\n  ]\r\n  const addresses = ['Av. San Martín', 'Pozos', 'San Fernando', 'El Jaguar']\r\n\r\n  const randomName = names[Math.floor(Math.random() * names.length)]\r\n  const randomAddress = addresses[Math.floor(Math.random() * names.length)]\r\n\r\n  const randomNumber = Array(3)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n    .join('')\r\n\r\n  return `${randomName}, ${randomAddress} ${randomNumber}`\r\n}\r\n","import { useConfig } from 'hooks'\r\nimport React, { forwardRef, useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Row } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\nimport { generateRandomInfo, generateRandomNumber } from '../utils'\r\n\r\nconst LineIndicator: React.ForwardRefExoticComponent<\r\n  {\r\n    lines: number\r\n  } & React.RefAttributes<unknown>\r\n> = forwardRef(({ lines }, ref) => (\r\n  // @ts-ignore\r\n  <LineIndicatorContainer ref={ref}>\r\n    {Array(lines)\r\n      .fill(1)\r\n      .map((_, i) => (\r\n        <li key={i}>{i + 1}-</li>\r\n      ))}\r\n  </LineIndicatorContainer>\r\n))\r\n\r\ninterface EntryDataProps {\r\n  onNextStep: () => void\r\n  handleSetEntrydata: (data: NewPhone[]) => void\r\n}\r\n\r\nconst EntryData: React.FC<EntryDataProps> = ({\r\n  onNextStep,\r\n  handleSetEntrydata,\r\n}) => {\r\n  const [numbers, setNumbers] = useState<string>('')\r\n  const [additional, setAdditional] = useState<string>('')\r\n  const numberLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n  const additionalLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const setRandomData = () => {\r\n    if (!testModeEnabled) return\r\n    const numbers = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomNumber())\r\n      .join('\\n')\r\n    const info = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomInfo())\r\n      .join('\\n')\r\n\r\n    setNumbers((prev) => prev + numbers + '\\n')\r\n    setAdditional((prev) => prev + info + '\\n')\r\n  }\r\n\r\n  const handleIndicatorsScroll = (type: 'number' | 'additional') => (\r\n    e: React.UIEvent<HTMLTextAreaElement, UIEvent>\r\n  ) => {\r\n    const position: number =\r\n      // @ts-ignore\r\n      e.target.scrollTop\r\n    const el =\r\n      type === 'number'\r\n        ? numberLineIndicatorRef?.current\r\n        : additionalLineIndicatorRef?.current\r\n    if (!el) return\r\n    el.scroll(0, position)\r\n  }\r\n\r\n  const onNumberScroll = handleIndicatorsScroll('number')\r\n  const onAdditionalScroll = handleIndicatorsScroll('additional')\r\n\r\n  const numberLines = numbers.split('\\n').length\r\n  const additionalLines = additional.split('\\n').length\r\n\r\n  useEffect(() => {\r\n    if (numberLines === additionalLines) return\r\n    const missing = numberLines > additionalLines\r\n    const difference = Math.abs(numberLines - additionalLines)\r\n    if (missing) {\r\n      setAdditional((additional) => additional + '\\n'.repeat(difference))\r\n    } else {\r\n      setAdditional((additional) => {\r\n        let lines = additional.split('\\n')\r\n        let pending = difference\r\n        while (lines[lines.length - 1] === '' && pending > 0) {\r\n          lines.pop()\r\n          pending--\r\n        }\r\n        return lines.join('\\n')\r\n      })\r\n    }\r\n  }, [numberLines, additionalLines, numbers])\r\n\r\n  const haveSameAmountOfLines = numberLines === additionalLines\r\n  const haveEmptyNumberLines = numbers\r\n    .split('\\n')\r\n    .some((line) => line.trim() === '')\r\n\r\n  const disableNextStep = !haveSameAmountOfLines || haveEmptyNumberLines\r\n\r\n  const onDone = () => {\r\n    handleSetEntrydata(\r\n      numbers.split('\\n').map((number, index) => ({\r\n        number,\r\n        address: additional.split('\\n')[index],\r\n      }))\r\n    )\r\n    onNextStep()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Paso 1: <span>Ingresar datos</span>\r\n      </Title>\r\n      <Description>\r\n        Ingrese una lista de números en la caja de la izquierda.{' '}\r\n        <span>Separe cada número con un nuevo salto de línea (Enter)</span>.\r\n      </Description>\r\n      <Description>\r\n        Repita lo mismo en la caja de la derecha con la{' '}\r\n        <span>información adicional</span> -dirección, nombre de la persona,\r\n        etc.- que deba acompañar a cada número\r\n        <span> que se corresponda en la misma posición de ordenamiento</span>.\r\n      </Description>\r\n      <Description>\r\n        La información adicional de la caja de la derecha es{' '}\r\n        <span>opcional</span>, puede omitirla. Si desea omitir esa información\r\n        solamente para una fila (número), deje un espacio en blanco en la\r\n        posición de esa línea.\r\n      </Description>\r\n      <Description>\r\n        No se preocupe por comenter errores,{' '}\r\n        <span>podrá revisar la información</span> antes de enviarla{' '}\r\n        <span>en el siguiente paso</span>.\r\n      </Description>\r\n      <Description>\r\n        <span>Consejo:</span> puede copiar y pegar una columna entera de excel\r\n        en cada caja.\r\n      </Description>\r\n      {testModeEnabled && (\r\n        <Button color=\"info\" onClick={setRandomData}>\r\n          Generar datos aleatorios\r\n        </Button>\r\n      )}\r\n      <Row className=\"mt-3\">\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Teléfonos:</h5>\r\n          <LineIndicator lines={numberLines} ref={numberLineIndicatorRef} />\r\n          <TextArea\r\n            value={numbers}\r\n            onChange={(e) => setNumbers(e.target.value)}\r\n            onScroll={onNumberScroll}\r\n            placeholder=\"Ej.: (011) 4754-7845\"\r\n          ></TextArea>\r\n        </Col>\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Información adicional:</h5>\r\n          <LineIndicator\r\n            lines={additionalLines}\r\n            ref={additionalLineIndicatorRef}\r\n          />\r\n          <TextArea\r\n            value={additional}\r\n            onChange={(e) => setAdditional(e.target.value)}\r\n            onScroll={onAdditionalScroll}\r\n            placeholder=\"Ej.: Pepe Mujica - Av. Gral Rodríguez 2084\"\r\n          ></TextArea>\r\n        </Col>\r\n      </Row>\r\n      <Validations>\r\n        <h4>Para avanzar al siguiente paso, se debe cumplir con:</h4>\r\n        <div>\r\n          <Rule valid={!haveEmptyNumberLines}>\r\n            No debe haber filas vacías de números\r\n          </Rule>\r\n          <Rule valid={haveSameAmountOfLines}>\r\n            Números e información adicional deben tener la misma cantidad de\r\n            líneas\r\n          </Rule>\r\n        </div>\r\n      </Validations>\r\n      <Buttons>\r\n        <Button color=\"success\" onClick={onDone} disabled={disableNextStep}>\r\n          Siguiente paso\r\n        </Button>\r\n      </Buttons>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LineIndicatorContainer = styled.ul`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  left: 1.5em;\r\n  margin: 0;\r\n  padding: 0;\r\n  padding-top: 1px;\r\n  line-height: 20px;\r\n  height: 400px;\r\n  width: 3em;\r\n  overflow-y: hidden;\r\n  border-right: 1px dashed #999;\r\n\r\n  li {\r\n    list-style: none;\r\n    font-weight: 500;\r\n    color: #666;\r\n  }\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 400px;\r\n  padding: 0 1em 0 4em;\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst Validations = styled.div`\r\n  margin-top: 2em;\r\n  padding-bottom: 5em;\r\n\r\n  div {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1em;\r\n\r\n    span {\r\n      margin-top: 1em;\r\n    }\r\n  }\r\n`\r\n\r\nconst Rule = styled.span<{ valid: boolean }>`\r\n  color: ${({ theme, valid }) =>\r\n    valid ? theme.text.colors.green : theme.text.colors.red};\r\n\r\n  ::before {\r\n    content: '${({ valid }) => (valid ? '✅' : '❗')}';\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nexport { EntryData }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\n\r\ninterface ReviewProps {\r\n  entryData: NewPhone[]\r\n  onGoBack: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Review: React.FC<ReviewProps> = ({ entryData, onGoBack, onConfirm }) => (\r\n  <Container>\r\n    <Title>\r\n      Segundo paso: <span>Confirmar</span>\r\n    </Title>\r\n    <Description>\r\n      Por favor, revise bien la información y confirme si es correcta.\r\n    </Description>\r\n    <Info>\r\n      {entryData.map(({ number, address }, i) => (\r\n        <>\r\n          <span key={number + i}>\r\n            <span>Número:</span> {number}{' '}\r\n            <span className=\"separator\">{'->'}</span> <span>Info:</span>{' '}\r\n            {address}\r\n          </span>\r\n          <br />\r\n        </>\r\n      ))}\r\n    </Info>\r\n    <Buttons>\r\n      <Button color=\"info\" outline onClick={onGoBack}>\r\n        Volver\r\n      </Button>\r\n      <Button color=\"success\" onClick={onConfirm}>\r\n        Confirmar y guardar\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nconst Info = styled.p`\r\n  width: 100%;\r\n  height: 400px;\r\n  background: ${({ theme }) =>\r\n    theme.darkMode ? '#fff' : theme.text.colors.black};\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  span {\r\n    color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.black : '#fff'};\r\n    display: inline-block;\r\n    margin-bottom: 0.1em;\r\n\r\n    span:not(.separator) {\r\n      background-color: #999;\r\n      padding: 2px 10px;\r\n      border-radius: 3px;\r\n    }\r\n\r\n    .separator {\r\n      display: inline-block;\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Review }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { AddPhoneResponse } from '../types'\r\n\r\ninterface ResultProps {\r\n  response: AddPhoneResponse\r\n  onAddMore: () => void\r\n  onBackToAdminPanel: () => void\r\n}\r\n\r\nconst Result: React.FC<ResultProps> = ({\r\n  response,\r\n  onAddMore,\r\n  onBackToAdminPanel,\r\n}) => (\r\n  <Container>\r\n    <Title>¡Listo! 🌟</Title>\r\n    <h4>Números agregados: {response.successCount}</h4>\r\n    <h4>Números que no se agregaron(*): {response.failureCount}</h4>\r\n    <Description className=\"mt-3\">\r\n      * Cuando un número no se agrega, por lo general se debe a que es\r\n      duplicado.\r\n    </Description>\r\n    <Buttons className=\"mt-5\">\r\n      <Button color=\"info\" onClick={onAddMore}>\r\n        Agregar más números\r\n      </Button>\r\n      <Button color=\"success\" onClick={onBackToAdminPanel}>\r\n        Volver al panel de administrador\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nexport { Result }\r\n","import React, { useState } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\r\nimport { AddPhonePayload, AddPhoneResponse, NewPhone } from './types'\r\nimport { EntryData, Result, Review } from './components'\r\nimport { useFetch } from 'hooks'\r\nimport { css } from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Agregar Números',\r\n  },\r\n]\r\n\r\nconst AddPhones: React.FC = () => {\r\n  const [step, setStep] = useState<number>(1)\r\n  const [entryData, setEntryData] = useState<NewPhone[]>([])\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [serverResponse, setServerResponse] = useState<AddPhoneResponse | null>(\r\n    null\r\n  )\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const history = useHistory()\r\n\r\n  const handleNextStep = () => setStep(step + 1)\r\n\r\n  const handleSetEntrydata = (data: NewPhone[]) => setEntryData(data)\r\n\r\n  const handleBackToStepOne = () => setStep(1)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const [err, response] = await Fetch().post<\r\n        AddPhonePayload,\r\n        AddPhoneResponse\r\n      >('add_numbers', { phones: entryData })\r\n\r\n      if (err) throw err\r\n\r\n      setServerResponse(response)\r\n      setStep(3)\r\n    } catch {\r\n      AlertManager.show('add-phones-error', { timeout: 13000 })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setStep(1)\r\n    setEntryData([])\r\n    setServerResponse(null)\r\n  }\r\n\r\n  const handleBackToAdmin = () => {\r\n    history.push('/admin-panel')\r\n  }\r\n\r\n  if (isLoading) return <Spinner container fulfill />\r\n\r\n  return (\r\n    <Container className=\"pt-3 pb-5\">\r\n      <Alert\r\n        name=\"add-phones-error\"\r\n        position=\"bottom\"\r\n        containerCSS={FailAlertCss}\r\n      >\r\n        Hubo un error guardando los nuevos números. Por favor, revise los datos\r\n        e intente de nuevo. Si el problema persiste, contacte al desarrollador\r\n        para solucionarlo.{' '}\r\n      </Alert>\r\n      <Breadcrumb items={breadcrumbItems} />\r\n      {step === 1 && (\r\n        <EntryData\r\n          onNextStep={handleNextStep}\r\n          handleSetEntrydata={handleSetEntrydata}\r\n        />\r\n      )}\r\n      {step === 2 && (\r\n        <Review\r\n          entryData={entryData}\r\n          onGoBack={handleBackToStepOne}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      )}\r\n      {step === 3 && serverResponse && (\r\n        <Result\r\n          response={serverResponse}\r\n          onAddMore={reset}\r\n          onBackToAdminPanel={handleBackToAdmin}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst FailAlertCss = css`\r\n  background-color: ${({ theme }) => theme.text.colors.red};\r\n`\r\n\r\nexport { AddPhones }\r\n","import React, { useLayoutEffect } from 'react'\r\nimport {\r\n  BrowserRouter as RouterProvider,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\nimport { Redirect, RouteProps, useHistory, useLocation } from 'react-router'\r\nimport { ThemeProvider } from 'theme'\r\nimport { ContextProviders } from 'contexts'\r\nimport { useAuth } from 'hooks'\r\nimport { Layout } from './components'\r\nimport {\r\n  AdminPanel,\r\n  Login,\r\n  Telefonica,\r\n  StatisticsPanel,\r\n  AddPhones,\r\n} from './features'\r\nimport './app.css'\r\n\r\ninterface ProtectedRouteProps extends RouteProps {\r\n  condition: boolean\r\n}\r\n\r\nconst DummyComponent = () => null\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  component,\r\n  condition,\r\n  ...restProps\r\n}) => (\r\n  <Route {...restProps} component={condition ? component : DummyComponent} />\r\n)\r\n\r\nconst MainRouter: React.FC = () => {\r\n  const { isAuth, isAdmin } = useAuth()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isAuth && !location.pathname.includes('/login')) history.push('/login')\r\n    if (isAuth && location.pathname.includes('/login'))\r\n      isAdmin ? history.push('/admin-panel') : history.push('/telefonica')\r\n  }, [isAuth, isAdmin, location.pathname, history])\r\n\r\n  return (\r\n    <Switch>\r\n      {/* Common */}\r\n      <Route path=\"/login\" exact component={Login} />\r\n\r\n      {/* User */}\r\n      <ProtectedRoute\r\n        path=\"/telefonica\"\r\n        component={Telefonica}\r\n        condition={isAuth}\r\n      />\r\n\r\n      {/* Admin */}\r\n      <ProtectedRoute\r\n        path=\"/admin-panel\"\r\n        exact\r\n        component={AdminPanel}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/statistics\"\r\n        exact\r\n        component={StatisticsPanel}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/add-phones\"\r\n        exact\r\n        component={AddPhones}\r\n        condition={isAdmin}\r\n      />\r\n\r\n      {/* Misc */}\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst App: React.FC = () => (\r\n  <ContextProviders>\r\n    <ThemeProvider>\r\n      <RouterProvider>\r\n        <Layout>\r\n          <MainRouter />\r\n        </Layout>\r\n      </RouterProvider>\r\n    </ThemeProvider>\r\n  </ContextProviders>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}