{"version":3,"sources":["features/Telefonica/components/PhoneLink.tsx","features/Telefonica/components/PhoneOptions.tsx","features/Telefonica/components/PhoneDetails.tsx","features/Telefonica/components/HelpSection.tsx","features/Telefonica/components/PhonesInStorage.tsx","utils/index.ts","features/Telefonica/Telefonica.tsx","../node_modules/reactstrap/es/Jumbotron.js","../node_modules/reactstrap/es/Table.js"],"names":["PhoneLink","phone","useState","touchedCount","setTouchedCount","useEffect","style","textDecoration","href","onClick","Array","fill","map","_","className","PhoneOptions","phoneId","initialNoCallOnWeekends","showPhoneOptions","setShowPhoneOptions","noCallOnWeekends","setNoCallOnWeekends","AlertManager","useAlerts","Fetch","useFetch","handleOptionChanged","option","newVal","a","revert","backendValue","put","err","show","hideAll","name","position","variant","PhoneOptionsContainer","Collapse","isOpen","label","checked","onChange","styled","div","PhoneDetails","comments","handleComments","openHelpSection","handlePhoneFeedback","useConfig","advancedModeEnabled","configurations","campaignMode","isAllowed","f","hiddenButtons","split","includes","toString","useConfirmationModal","isModalOpen","feedbackToConfirm","data","askEditConfirmation","toggleModal","reset","handleGeneric","feedback","handleAnswered","Feedback","ANSWERED","handleUnanswered","UNANSWERED","handleNonExistent","NON_EXISTENT","handleNoCall","NO_CALL","handleAnsweringMachine","ANSWERING_MACHINE","handlePostpone","POSTPONE","handleIgnore","IGNORE","DesktopTable","info","answeredOn","unansweredDate","fulfilledOn","MobileTable","fontWeight","helpButton","MiniSection","HelpButton","CommentsSection","Input","autoFocus","placeholder","type","value","e","target","readOnly","commentedOn","answeringMachineDate","ButtonGroup","Button","color","block","CampaignFeedback","RUSHED","Container","Jumbotron","fluid","id","noWeekends","onConfirm","title","buttonColor","colors","confirmationLabel","labels","input","theme","text","secondary","darkMode","white","black","button","HelpSection","close","unansweredMaxAttemps","answeringMachineMaxAttemps","answeringMachinePostponedDays","postponedButtonDays","nonExistentPostponedDays","navbarHeight","PhonesInStorage","currentPhoneId","onEditRequest","PhoneStorage","collapsed","setCollapsed","storagePhoneToConfirm","onAskEditConfirmation","rows","getAll","reverse","p","i","phoneIsFromToday","date","inputDate","Date","todaysDate","setHours","isToday","savedOn","status","statusLabel","isCollapsed","handleCollapsed","CollapseButtons","filter","r","length","Table","responsive","Telefonica","setPhone","isLoading","setIsLoading","error","setError","setComments","usePhoneStorage","fetchPhone","useCallback","get","newPhone","timeout","add","now","restore","original","lastStatus","console","log","onFeedback","answered","update","storagePhone","newStatus","sendFeedback","useThrottle","editNumber","history","useHistory","push","closeHelpSection","goBack","c","fulfill","container","path","exact","render","Helmet","process","component","propTypes","tag","tagPropType","PropTypes","bool","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","size","bordered","borderless","striped","dark","hover","oneOfType","responsiveTag","innerRef","func","ResponsiveTag","table","ref","responsiveClassName"],"mappings":"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","file":"static/js/6.fd431983.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\ninterface PhoneLinkProps {\n  phone: string\n}\n\nconst PhoneLink: React.FC<PhoneLinkProps> = ({ phone }) => {\n  const [touchedCount, setTouchedCount] = useState<number>(0)\n\n  const addTouched = () => setTouchedCount(touchedCount + 1)\n\n  useEffect(() => {\n    setTouchedCount(0)\n  }, [phone])\n\n  return (\n    <>\n      <a\n        style={{ textDecoration: 'underline' }}\n        href={`tel:${phone}`}\n        onClick={addTouched}\n      >\n        {phone}\n      </a>\n      {Array(touchedCount)\n        .fill(null)\n        .map((_) => (\n          <span className=\"d-block text-success\">¡Tocado!</span>\n        ))}\n    </>\n  )\n}\n\nexport { PhoneLink }\n","import React, { FunctionComponent, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Collapse } from 'reactstrap'\r\nimport { useFetch } from 'hooks'\r\nimport { Alert, useAlerts, Switch } from 'components'\r\nimport { PhoneOptionsType } from 'types'\r\n\r\ninterface PhoneOptionsProps {\r\n  phoneId: number\r\n  initialNoCallOnWeekends: boolean\r\n}\r\n\r\nconst PhoneOptions: FunctionComponent<PhoneOptionsProps> = ({\r\n  phoneId,\r\n  initialNoCallOnWeekends,\r\n}) => {\r\n  const [showPhoneOptions, setShowPhoneOptions] = useState<boolean>(false)\r\n  const [noCallOnWeekends, setNoCallOnWeekends] = useState<boolean>(\r\n    initialNoCallOnWeekends\r\n  )\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const togglePhoneOptions = () => setShowPhoneOptions(!showPhoneOptions)\r\n\r\n  const handleOptionChanged = async <K extends keyof PhoneOptionsType>(\r\n    option: K,\r\n    newVal: PhoneOptionsType[K]\r\n  ) => {\r\n    let revert: () => void = () => {}\r\n    let backendValue: PhoneOptionsType[K] = newVal\r\n\r\n    if (option === 'callOnWeekends') {\r\n      revert = () => setNoCallOnWeekends(noCallOnWeekends)\r\n      setNoCallOnWeekends(newVal)\r\n      // In the case of callOnWeekends, we are handling the opposite case on the back\r\n      backendValue = !newVal\r\n    }\r\n\r\n    try {\r\n      const [err] = await Fetch().put<Partial<PhoneOptionsType>>(\r\n        `phones/${phoneId}/options`,\r\n        {\r\n          [option]: backendValue,\r\n        }\r\n      )\r\n\r\n      if (err) throw err\r\n\r\n      AlertManager.show('phone-option-update-success')\r\n    } catch {\r\n      revert()\r\n      AlertManager.hideAll()\r\n      AlertManager.show('phone-option-update-failed')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        name=\"phone-option-update-success\"\r\n        position=\"top\"\r\n        variant=\"success\"\r\n      >\r\n        Opción de teléfono actualizada con éxito.\r\n      </Alert>\r\n      <Alert\r\n        name=\"phone-option-update-failed\"\r\n        position=\"bottom\"\r\n        variant=\"failure\"\r\n      >\r\n        No se pudo actualizar opción de teléfono.\r\n      </Alert>\r\n\r\n      <PhoneOptionsContainer>\r\n        <div className=\"title\" onClick={togglePhoneOptions}>\r\n          Opciones de teléfono\r\n          <span>{showPhoneOptions ? '-' : '+'}</span>\r\n        </div>\r\n        <Collapse isOpen={showPhoneOptions}>\r\n          <div className=\"inner\">\r\n            <span>No llamar los fin de semana:</span>\r\n            <Switch\r\n              label=\"\"\r\n              checked={noCallOnWeekends}\r\n              onChange={(checked) =>\r\n                handleOptionChanged('callOnWeekends', checked)\r\n              }\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </PhoneOptionsContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PhoneOptionsContainer = styled.div`\r\n  .title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-weight: 500;\r\n\r\n    span {\r\n      font-weight: 800;\r\n    }\r\n  }\r\n\r\n  .inner {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 0.5em;\r\n  }\r\n`\r\n\r\nexport { PhoneOptions }\r\n","import React from 'react'\r\nimport { useConfig } from 'hooks'\r\nimport styled from 'styled-components'\r\nimport { CampaignFeedback, Feedback, FeedbackExtended, Phone } from 'types'\r\nimport { ConfirmationModal, useConfirmationModal } from 'components'\r\nimport { PhoneLink } from './PhoneLink'\r\nimport { PhoneOptions } from './PhoneOptions'\r\nimport { colors, labels } from 'consts'\r\nimport { Button, Container, Jumbotron } from 'reactstrap'\r\n\r\ninterface PhoneDetailsProps {\r\n  phone: Phone\r\n  comments: string\r\n  handleComments: (comments: string) => void\r\n  openHelpSection: () => void\r\n  handlePhoneFeedback: (n: FeedbackExtended) => void\r\n}\r\n\r\nconst PhoneDetails: React.FC<PhoneDetailsProps> = ({\r\n  phone,\r\n  comments,\r\n  handleComments,\r\n  openHelpSection,\r\n  handlePhoneFeedback,\r\n}) => {\r\n  const { advancedModeEnabled, configurations } = useConfig()\r\n  const { campaignMode } = configurations\r\n\r\n  const isAllowed = (f: Feedback) =>\r\n    !configurations.hiddenButtons.split(',').includes(f.toString())\r\n\r\n  const {\r\n    isModalOpen,\r\n    data: feedbackToConfirm,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal<Feedback>()\r\n\r\n  const handleGeneric = (feedback: Feedback) => () => {\r\n    if (advancedModeEnabled) askEditConfirmation(feedback)\r\n    else handlePhoneFeedback(feedback)\r\n  }\r\n\r\n  const doConfirm = () => {\r\n    if (feedbackToConfirm === null) return\r\n    handlePhoneFeedback(feedbackToConfirm)\r\n    reset()\r\n  }\r\n\r\n  const handleAnswered = handleGeneric(Feedback.ANSWERED)\r\n  const handleUnanswered = handleGeneric(Feedback.UNANSWERED)\r\n  const handleNonExistent = handleGeneric(Feedback.NON_EXISTENT)\r\n  const handleNoCall = handleGeneric(Feedback.NO_CALL)\r\n  const handleAnsweringMachine = handleGeneric(Feedback.ANSWERING_MACHINE)\r\n  const handlePostpone = handleGeneric(Feedback.POSTPONE)\r\n  const handleIgnore = handleGeneric(Feedback.IGNORE)\r\n  const handleRushed = () => handlePhoneFeedback(CampaignFeedback.RUSHED)\r\n\r\n  const DesktopTable = (\r\n    <div className=\"table-responsive d-none d-sm-block\">\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Teléfono</th>\r\n            <th>Otros datos</th>\r\n            {phone.comments ? <th>Comentarios</th> : null}\r\n            <th>Última fecha que atendió</th>\r\n            <th>Última fecha que se lo llamó</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <PhoneLink phone={phone.phone} />\r\n            </td>\r\n            <td>{phone.info}</td>\r\n            {phone.comments ? <td>{phone.comments}</td> : null}\r\n            <td>{phone.answeredOn ?? 'Nunca'}</td>\r\n            <td>\r\n              {phone.unansweredDate ? (\r\n                phone.unansweredDate\r\n              ) : phone.fulfilledOn ? (\r\n                <>\r\n                  {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n                  {phone.fulfilledOn}\r\n                </>\r\n              ) : (\r\n                'Nunca'\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n  const MobileTable = (\r\n    <div className=\"d-block d-sm-none text-center\">\r\n      <span style={{ fontWeight: 500 }}>Teléfono:</span>\r\n      <div>\r\n        <PhoneLink phone={phone.phone} />\r\n      </div>\r\n      <br />\r\n\r\n      <span style={{ fontWeight: 500 }}>Otros datos:</span>\r\n      <div>{phone.info}</div>\r\n      <br />\r\n\r\n      {phone.comments && (\r\n        <>\r\n          <span style={{ fontWeight: 500 }}>Comentarios:</span>\r\n          <div>{phone.comments}</div>\r\n          <br />\r\n        </>\r\n      )}\r\n\r\n      <span style={{ fontWeight: 500 }}>Última fecha que atendió:</span>\r\n      <div>{phone.answeredOn ?? 'Nunca'}</div>\r\n      <br />\r\n\r\n      <span style={{ fontWeight: 500 }}>Última fecha que se lo llamó:</span>\r\n      <div>\r\n        {phone.unansweredDate ? (\r\n          phone.unansweredDate\r\n        ) : phone.fulfilledOn ? (\r\n          <>\r\n            {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n            {phone.fulfilledOn}\r\n          </>\r\n        ) : (\r\n          'Nunca'\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const helpButton = (\r\n    <MiniSection>\r\n      <HelpButton onClick={openHelpSection}>¿Qué hace cada botón?</HelpButton>\r\n    </MiniSection>\r\n  )\r\n\r\n  const CommentsSection = (\r\n    <div className=\"row my-4\">\r\n      <div className=\"col-12\">\r\n        <span className=\"text-secondary d-inline-block mb-2\">\r\n          Comentarios (opcional):\r\n        </span>\r\n        <Input\r\n          autoFocus\r\n          placeholder=\"Sus comentarios acá...\"\r\n          type=\"text\"\r\n          value={comments}\r\n          onChange={(e) => handleComments(e.target.value)}\r\n          readOnly={!advancedModeEnabled}\r\n        />\r\n\r\n        {phone.commentedOn && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Comentado el:{' '}\r\n            <span className=\"text-success\">{phone.commentedOn}</span>\r\n          </span>\r\n        )}\r\n\r\n        {phone.answeringMachineDate && (\r\n          <span className=\"d-block input-helper text-secondary\">\r\n            Último mensaje en el contestador:{' '}\r\n            <span className=\"text-success\">{phone.answeringMachineDate}</span>\r\n          </span>\r\n        )}\r\n\r\n        {!phone.commentedOn && !phone.answeringMachineDate && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Ej.: lugar de trabajo, no habla español, etc.\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const ButtonGroup = campaignMode ? (\r\n    <div className=\"my-4\">\r\n      <Button color=\"success\" block onClick={handleRushed}>\r\n        Siguiente\r\n      </Button>\r\n    </div>\r\n  ) : !advancedModeEnabled ? (\r\n    <div className=\"my-4 row d-flex justify-content-center\">\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"col-6 mb-3 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-success btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleAnswered}\r\n          >\r\n            Atendió\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"col-6 mb-3 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-danger btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleUnanswered}\r\n          >\r\n            No en casa\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-warning btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleNoCall}\r\n          >\r\n            No visitar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-dark btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleNonExistent}\r\n          >\r\n            No existe\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div className=\"my-4 row d-flex justify-content-center\">\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-success btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleAnswered}\r\n          >\r\n            Atendió\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-danger btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleUnanswered}\r\n          >\r\n            No en casa\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.ANSWERING_MACHINE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleAnsweringMachine}\r\n          >\r\n            Contestador\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.POSTPONE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-info btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handlePostpone}\r\n          >\r\n            Aplazar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.IGNORE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-secondary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleIgnore}\r\n          >\r\n            Ignorar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-warning btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleNoCall}\r\n          >\r\n            No visitar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-dark btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleNonExistent}\r\n          >\r\n            No existe\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      {DesktopTable}\r\n      {MobileTable}\r\n      {CommentsSection}\r\n      {campaignMode && (\r\n        <Jumbotron fluid className=\"my-2\">\r\n          <Container>\r\n            <h6>¡Estamos en campaña!</h6>\r\n            <small>\r\n              Durante la campaña, solo habrá un botón de \"siguiente\".\r\n            </small>\r\n          </Container>\r\n        </Jumbotron>\r\n      )}\r\n      {advancedModeEnabled && !campaignMode && (\r\n        <MiniSection>\r\n          <PhoneOptions\r\n            phoneId={phone.id}\r\n            initialNoCallOnWeekends={phone.noWeekends}\r\n          />\r\n        </MiniSection>\r\n      )}\r\n      {ButtonGroup}\r\n      {advancedModeEnabled && !campaignMode && helpButton}\r\n      {feedbackToConfirm !== null && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={doConfirm}\r\n          title=\"¿Seguro?\"\r\n          buttonColor={colors[feedbackToConfirm]}\r\n          confirmationLabel={labels[feedbackToConfirm]}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border-top: none;\r\n  border-right: none;\r\n  border-left: none;\r\n  border-image: initial;\r\n  border-bottom: 2px solid ${({ theme }) => theme.text.colors.secondary};\r\n  outline: none;\r\n  transition: border-bottom-color 0.25s;\r\n  margin-bottom: 0.5em;\r\n  border-radius: 5px;\r\n  padding: 0 10px;\r\n\r\n  :focus {\r\n    border-bottom-color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.black};\r\n  }\r\n`\r\n\r\nconst MiniSection = styled.div`\r\n  border-top: 1px solid\r\n    ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.secondary};\r\n  border-bottom: 1px solid\r\n    ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.secondary};\r\n  padding: 10px 0;\r\n  margin-top: 2em;\r\n  display: flex;\r\n\r\n  > div {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst HelpButton = styled.button`\r\n  margin-bottom: 0;\r\n  border: none;\r\n  color: ${({ theme }) => (theme.darkMode ? theme.text.colors.white : '#555')};\r\n  text-decoration: underline;\r\n  background: none;\r\n  margin: auto;\r\n`\r\n\r\nexport { PhoneDetails }\r\n","import { useConfig } from 'hooks'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Feedback } from 'types'\r\n\r\ninterface HelpSectionProps {\r\n  close: () => void\r\n}\r\n\r\nconst HelpSection: React.FC<HelpSectionProps> = ({ close }) => {\r\n  const { advancedModeEnabled, configurations } = useConfig()\r\n\r\n  const isAllowed = (f: Feedback) =>\r\n    !configurations.hiddenButtons.split(',').includes(f.toString())\r\n\r\n  return (\r\n    <Container>\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de <span className=\"text-success\">atendió</span>?\r\n          </h6>\r\n          <p>\r\n            Manda el número al final de la cola y registra la fecha en que se\r\n            atendió.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-danger\">no en casa</span>?\r\n          </h6>\r\n          <p>\r\n            Guarda el número para llamarlo de vuelta mañana, hasta un máximo de{' '}\r\n            {configurations.unansweredMaxAttemps} intentos. Luego, si no\r\n            atendió, se lo manda al final de la cola.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {advancedModeEnabled && (\r\n        <>\r\n          {isAllowed(Feedback.ANSWERING_MACHINE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de{' '}\r\n                <span className=\"text-primary\">contestador</span>?\r\n              </h6>\r\n              <p>\r\n                Registra la última vez que se le dejó un mensaje en el\r\n                contestador al amo de casa.&nbsp;\r\n                {configurations.answeringMachineMaxAttemps > 1 && (\r\n                  <span>\r\n                    Además, congela el número durante{' '}\r\n                    {configurations.answeringMachinePostponedDays} días para\r\n                    darle un máximo de{' '}\r\n                    {configurations.answeringMachineMaxAttemps} oportunidades.\r\n                    Estas oportunidades se computan junto a las que ya se le dio\r\n                    con el botón \"no en casa\" si ha sido el caso.\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {isAllowed(Feedback.POSTPONE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de <span className=\"text-info\">aplazar</span>\r\n                ?\r\n              </h6>\r\n              <p>\r\n                Congela el número para que se lo llame dentro de{' '}\r\n                {configurations.postponedButtonDays}{' '}\r\n                {configurations.postponedButtonDays > 1 ? 'días' : 'día'}.\r\n              </p>\r\n            </div>\r\n          )}\r\n          {isAllowed(Feedback.IGNORE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de{' '}\r\n                <span className=\"text-secondary\">ignorar</span>?\r\n              </h6>\r\n              <p>Manda el número directamente al final de la cola.</p>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-warning\">no visitar</span>?\r\n          </h6>\r\n          <p>\r\n            Quita el número de la cola. No se lo borra pero tampoco se lo\r\n            volverá a llamar.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-secondary\">no existe</span>?\r\n          </h6>\r\n          <p>\r\n            Suspende el número durante {configurations.nonExistentPostponedDays}{' '}\r\n            días. Luego vuelve a la cola porque existe la posibilidad de que se\r\n            haya reactivado.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <p className=\"text-center\">\r\n        Nota: en ningún caso se borran los números. Si correspondiera (por ej.\r\n        por estar fuera del territorio), por favor, comunicarse con el siervo de\r\n        territorios.\r\n      </p>\r\n\r\n      <Button className=\"btn btn-secondary\" onClick={close}>\r\n        Volver\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - ${({ theme }) => theme.navbarHeight}px);\r\n  justify-content: space-evenly;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n`\r\n\r\nexport { HelpSection }\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Table } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { useConfig, usePhoneStorage } from 'hooks'\r\nimport { Feedback, StoragePhone } from 'types'\r\nimport { isToday } from 'utils'\r\nimport { colors, labels } from 'consts'\r\nimport { useConfirmationModal, ConfirmationModal } from 'components'\r\n\r\ninterface PhonesInStorageProps {\r\n  currentPhoneId: number\r\n  onEditRequest: (storagePhone: StoragePhone, newStatus: Feedback) => void\r\n  PhoneStorage: ReturnType<typeof usePhoneStorage>\r\n}\r\n\r\nconst PhonesInStorage: React.FC<PhonesInStorageProps> = ({\r\n  currentPhoneId,\r\n  onEditRequest,\r\n  PhoneStorage,\r\n}) => {\r\n  const [collapsed, setCollapsed] = useState<number | null>(null)\r\n  const {\r\n    isModalOpen,\r\n    data,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal<{\r\n    storagePhoneToConfirm: StoragePhone\r\n    feedbackToConfirm: Feedback\r\n  }>()\r\n\r\n  const {\r\n    configurations: { campaignMode },\r\n  } = useConfig()\r\n\r\n  const feedbackToConfirm = data?.feedbackToConfirm || null\r\n  const storagePhoneToConfirm = data?.storagePhoneToConfirm || null\r\n\r\n  const resetStates = () => {\r\n    setCollapsed(null)\r\n    reset()\r\n  }\r\n\r\n  const onAskEditConfirmation = (\r\n    feedbackToConfirm: Feedback,\r\n    storagePhoneToConfirm: StoragePhone\r\n  ) => askEditConfirmation({ storagePhoneToConfirm, feedbackToConfirm })\r\n\r\n  const handleCollapsed = (i: number) =>\r\n    collapsed !== i ? setCollapsed(i) : setCollapsed(null)\r\n\r\n  const doConfirm = () => {\r\n    if (!storagePhoneToConfirm || typeof feedbackToConfirm !== 'number') return\r\n    onEditRequest(storagePhoneToConfirm, feedbackToConfirm)\r\n    resetStates()\r\n  }\r\n\r\n  const phones = PhoneStorage.getAll()\r\n\r\n  const rows = phones.reverse().map((p, i) => {\r\n    if (p.id === currentPhoneId) return null\r\n\r\n    const phoneIsFromToday = isToday(p.savedOn)\r\n    const color = p.status !== null ? colors[p.status] : ''\r\n\r\n    const statusLabel =\r\n      !phoneIsFromToday && p.status === null\r\n        ? 'Asignado a otro publicador'\r\n        : p.status !== null\r\n        ? labels[p.status]\r\n        : 'Sin respuesta'\r\n\r\n    const isCollapsed = i === collapsed\r\n\r\n    return (\r\n      <tr key={p.id} style={{ position: 'relative' }}>\r\n        <td>{p.phone}</td>\r\n        {!campaignMode && (\r\n          <td>\r\n            <span className={`text-${color}`}>{statusLabel}</span>\r\n          </td>\r\n        )}\r\n        {!campaignMode && (\r\n          <td>\r\n            {phoneIsFromToday && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => handleCollapsed(i)}\r\n              >\r\n                Editar\r\n              </button>\r\n            )}\r\n            <CollapseButtons isOpen={isCollapsed}>\r\n              {p.status !== Feedback.ANSWERED && (\r\n                <button\r\n                  className=\"btn btn-success btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.ANSWERED, p)}\r\n                >\r\n                  Atendió\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.UNANSWERED && (\r\n                <button\r\n                  className=\"btn btn-danger btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.UNANSWERED, p)}\r\n                >\r\n                  No en casa\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.ANSWERING_MACHINE && (\r\n                <button\r\n                  className=\"btn btn-primary btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() =>\r\n                    onAskEditConfirmation(Feedback.ANSWERING_MACHINE, p)\r\n                  }\r\n                >\r\n                  Contestador\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.POSTPONE && (\r\n                <button\r\n                  className=\"btn btn-info btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.POSTPONE, p)}\r\n                >\r\n                  Aplazar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.IGNORE && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.IGNORE, p)}\r\n                >\r\n                  Ignorar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.NO_CALL && (\r\n                <button\r\n                  className=\"btn btn-warning btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.NO_CALL, p)}\r\n                >\r\n                  No visitar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.NON_EXISTENT && (\r\n                <button\r\n                  className=\"btn btn-dark btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() =>\r\n                    onAskEditConfirmation(Feedback.NON_EXISTENT, p)\r\n                  }\r\n                >\r\n                  No existe\r\n                </button>\r\n              )}\r\n            </CollapseButtons>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  const dataInStorage: boolean = rows.filter((r) => !!r).length > 0\r\n\r\n  if (!dataInStorage) return null\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"container mb-3\">\r\n        Números anteriores en este dispositivo:\r\n      </h6>\r\n      <Table responsive className=\"text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Teléfono</th>\r\n            {!campaignMode && <th>Estado</th>}\r\n            {!campaignMode && <th>Acciones</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n      {feedbackToConfirm !== null && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={doConfirm}\r\n          title=\"¿Seguro?\"\r\n          buttonColor={colors[feedbackToConfirm]}\r\n          confirmationLabel={labels[feedbackToConfirm]}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CollapseButtons = styled(Collapse)`\r\n  position: absolute;\r\n  left: 0px;\r\n  background: rgb(34, 34, 34);\r\n  width: 100%;\r\n  border: 1px solid rgb(102, 102, 102);\r\n  padding: ${({ isOpen }) => (isOpen ? '20px' : '0')} 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  transition: padding 0.3s, height 0.3s;\r\n`\r\n\r\nexport { PhonesInStorage }\r\n","export const isToday = (date: number) => {\r\n  const inputDate = new Date(date)\r\n  const todaysDate = new Date()\r\n\r\n  return inputDate.setHours(0, 0, 0, 0) === todaysDate.setHours(0, 0, 0, 0)\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, ErrorDisplay, Spinner, useAlerts } from 'components'\r\nimport { PhoneResponse } from './types'\r\nimport { HelpSection, PhoneDetails, PhonesInStorage } from './components'\r\nimport { Route, Switch, useHistory } from 'react-router'\r\nimport { useConfig, usePhoneStorage, useFetch } from 'hooks'\r\nimport {\r\n  CampaignFeedback,\r\n  Feedback,\r\n  FeedbackExtended,\r\n  StoragePhone,\r\n} from 'types'\r\nimport { useThrottle } from 'hooks/utils'\r\n\r\nconst Telefonica: React.FC = () => {\r\n  const [phone, setPhone] = useState<PhoneResponse['phone'] | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const [error, setError] = useState<boolean>(false)\r\n  const [comments, setComments] = useState<string>('')\r\n\r\n  const PhoneStorage = usePhoneStorage()\r\n\r\n  const { advancedModeEnabled } = useConfig()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const fetchPhone = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      setError(false)\r\n      const [err, newPhone] = await Fetch().get<PhoneResponse>('next')\r\n\r\n      if (err) throw err\r\n\r\n      setPhone(newPhone.phone)\r\n      setComments(newPhone.phone.comments)\r\n      AlertManager.show('new-phone-received', {\r\n        timeout: 5000,\r\n      })\r\n      PhoneStorage.add({\r\n        id: newPhone.phone.id,\r\n        status: null,\r\n        phone: newPhone.phone.phone,\r\n        savedOn: Date.now(),\r\n        restore: {\r\n          ...newPhone.original,\r\n          lastStatus: null,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.log({ e })\r\n      setError(true)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [AlertManager, PhoneStorage, Fetch])\r\n\r\n  useEffect(() => {\r\n    fetchPhone()\r\n  }, [fetchPhone])\r\n\r\n  const onFeedback = async (feedback: FeedbackExtended) => {\r\n    if (!phone) return\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: phone.id,\r\n        answered: feedback,\r\n        comments: comments,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      fetchPhone()\r\n      // We store rushed phones on front end as though they answered\r\n      // It doesn't really matter because we don't allow editing those anyway\r\n      PhoneStorage.update(\r\n        phone.id,\r\n        feedback === CampaignFeedback.RUSHED ? Feedback.ANSWERED : feedback\r\n      )\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const onEditRequest = async (\r\n    storagePhone: StoragePhone,\r\n    newStatus: Feedback\r\n  ) => {\r\n    try {\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: storagePhone.id,\r\n        answered: newStatus,\r\n        restore: storagePhone.restore,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      PhoneStorage.update(storagePhone.id, newStatus)\r\n      AlertManager.show('edit-success')\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n    }\r\n  }\r\n\r\n  const sendFeedback = useThrottle(onFeedback, 5000)\r\n  const editNumber = useThrottle(onEditRequest, 5000)\r\n\r\n  const history = useHistory()\r\n\r\n  const openHelpSection = () => history.push('/telefonica/help')\r\n  const closeHelpSection = () => history.goBack()\r\n\r\n  const handleComments = (c: string) => setComments(c)\r\n\r\n  if (error) return <ErrorDisplay />\r\n\r\n  if (isLoading || !phone) return <Spinner fulfill container />\r\n\r\n  const Main = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica</title>\r\n      </Helmet>\r\n      <Alert name=\"new-phone-received\" position=\"top\" variant=\"success\">\r\n        <div className=\"text-center\">✨ ¡Nuevo número recibido! ✨🎉</div>\r\n      </Alert>\r\n      <Alert name=\"feedback-failed\" position=\"top\" variant=\"failure\">\r\n        <div className=\"text-center\">No se pudo enviar su feedback 😢</div>\r\n      </Alert>\r\n      <Alert name=\"edit-success\" position=\"bottom\" variant=\"success\">\r\n        <div className=\"text-center\">Número actualizado.</div>\r\n      </Alert>\r\n      <PhoneDetails\r\n        phone={phone}\r\n        comments={comments}\r\n        handleComments={handleComments}\r\n        openHelpSection={openHelpSection}\r\n        handlePhoneFeedback={sendFeedback}\r\n      />\r\n      {advancedModeEnabled && (\r\n        <PhonesInStorage\r\n          PhoneStorage={PhoneStorage}\r\n          currentPhoneId={phone.id}\r\n          onEditRequest={editNumber}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n\r\n  const Help = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica Ayuda</title>\r\n      </Helmet>\r\n      <HelpSection close={closeHelpSection} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path=\"/telefonica\" exact render={Main} />\r\n        <Route path=\"/telefonica/help\" exact component={Help} />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport { Telefonica }\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Jumbotron = function Jumbotron(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      fluid = props.fluid,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"fluid\"]);\n\n  var classes = mapToCssModules(classNames(className, 'jumbotron', fluid ? 'jumbotron-fluid' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nJumbotron.propTypes = propTypes;\nJumbotron.defaultProps = defaultProps;\nexport default Jumbotron;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}