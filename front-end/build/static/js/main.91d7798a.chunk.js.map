{"version":3,"sources":["consts/index.ts","hooks/useConfig.ts","hooks/useAuth.ts","services/Fetch.ts","services/PhoneStorage.ts","hooks/usePhoneStorage.ts","hooks/useFetch.ts","components/Navbar.tsx","components/TestingLabel.tsx","components/Layout.tsx","components/TerritoryVerifier.tsx","components/Spinner.tsx","components/ErrorDisplay.tsx","components/Breadcrumb.tsx","components/Switch.tsx","components/ConfirmationModal.tsx","components/TerritorySelector.tsx","types/index.ts","hooks/utils/useOnClickOutside.ts","hooks/utils/useRerender.ts","hooks/utils/useReactive.ts","hooks/utils/useThrottle.ts","hooks/utils/usePreviousValue.ts","contexts/config.tsx","contexts/auth.tsx","contexts/index.tsx","components/Alert/useAlertInner.ts","components/Alert/Provider.tsx","components/Alert/animations.ts","components/Alert/utils.ts","components/Alert/Dismissable.tsx","components/Alert/Alert.tsx","components/Alert/useAlerts.ts","utils/index.ts","theme/theme.ts","theme/provider.tsx","App.tsx","index.tsx"],"names":["backendURL","window","location","origin","LOCAL_STORAGE","TOKEN","IS_ADMIN","TEST_MODE","DARK_MODE","ADVANCED_MODE","colors","0","1","2","3","4","5","6","7","labels","Feedback","UNANSWERED","ANSWERED","NON_EXISTENT","NO_CALL","ANSWERING_MACHINE","POSTPONE","IGNORE","CampaignFeedback","RUSHED","useConfig","useContext","ConfigContext","useAuth","AuthContext","Fetch","isTest","useToken","currentTerritoryId","token","localStorage","getItem","console","warn","this","url","method","body","URL","path","params","composeQueryParams","test","territory","toString","URI","options","JSON","stringify","decamelizeKeys","undefined","headers","Authorization","fetch","request","ok","contentType","get","includes","json","text","response","data","camelizeKeys","query","Object","keys","map","k","encodeURIComponent","decamelize","join","doRequest","generateFetchParams","PhoneStorage","phonesStorageKey","phones","parse","phone","getAll","find","p","id","length","popped","shift","push","setItem","newStatus","toUpdate","status","restore","lastStatus","usePhoneStorage","reactive","useReactive","testModeEnabled","useMemo","PhoneStorageConstructor","bind","add","update","useFetch","currentTerritory","useCallback","Navbar","useState","collapsed","setCollapsed","mobileNavRef","useRef","showInstallButton","setShowInstallButton","installEventRef","useOnClickOutside","toggleNavbar","AlertManager","useAlerts","darkModeEnabled","advancedModeEnabled","toggleAdvancedMode","toggleDarkMode","toggleTestMode","isAuth","isAdmin","doLogout","onLinkClicked","useEffect","addEventListener","e","preventDefault","current","isInWebAppiOS","navigator","standalone","isInWebAppChrome","matchMedia","matches","Alert","name","position","ref","color","dark","Container","NavbarBrand","className","process","Version","ml","NavbarToggler","onClick","Collapse","isOpen","navbar","MobileNav","NavItem","label","checked","onChange","show","hide","Separator","RouterLink","to","background","ButtonContainer","NavLink","Button","block","prompt","userChoice","then","choiceResult","outcome","styled","small","theme","secondary","breakpoints","down","css","Nav","div","Link","darkMode","lightgreen","info","noPadding","TestingLabel","TestingLabelContainer","Layout","children","Helmet","darkStyles","variant","TerritoryVerifier","territories","configsLoading","setCurrentTerritory","useLocation","territoryData","toLowerCase","isValid","fulfill","container","stripTerritory","pathname","search","Spinner","SpinnerContainer","Math","floor","random","style","width","height","navbarHeight","ErrorDisplay","message","ErrorContainer","error","Breadcrumb","items","index","title","linkTo","BreadcrumbItem","active","Switch","SwitchContainer","type","split","target","htmlFor","useConfirmationModal","isModalOpen","setIsModalOpen","toggleModal","reset","setData","askEditConfirmation","ConfirmationModal","onConfirm","buttonColor","confirmationLabel","Modal","centered","toggle","ModalHeader","ModalBody","ModalFooter","TerritorySelector","React","forwardRef","defaultValue","excludeCurrent","noEmptyValue","Input","value","innerRef","t","handler","listener","event","el","contains","document","removeEventListener","useRerender","setDummy","forceUpdate","cb","returnData","useThrottle","timeout","timeoutRef","readyRef","clearTimeout","setTimeout","usePreviousValue","prev","createContext","ConfigProvider","configValue","Provider","setDarkModeEnabled","setAdvancedModeEnabled","setTestModeEnabled","configurations","setConfigurations","setTerritories","setConfigsLoading","configsError","setConfigsError","getConfigs","a","err","configs","updateTerritories","potentialTerritory","inferTerritory","removeItem","updateConfigs","AuthProvider","authValue","setIsAuth","setIsAdmin","isLoading","setIsLoading","doLogin","username","password","post","accessToken","ContextProviders","emptyState","permanent","AlertContext","AlertProvider","alertValue","state","setState","showHandler","opts","hideHandler","hideAllHandler","getByName","hideAll","useAlertInner","popUp","isDesktop","keyframes","popDown","popUpCentered","popDownCentered","getPositionalCSS","animationDuration","commonPositionalStyle","getDesktopScackbarAnimation","getMobileSnackbarStyle","endsWith","pd","pu","startsWith","enter","exit","Dismissable","InnerDismissable","dismiss","cloneElement","onClose","enterAnimation","exitAnimation","animationTimingFunction","noStyle","containerCSS","isShowing","setIsShowing","storedData","setStoredData","hideTimeoutRef","handleHide","doHide","Promise","r","useLayoutEffect","processedChildren","Snack","animation","role","Children","child","isValidElement","props","ReactDOM","createPortal","querySelector","animationProps","variantCss","SuccessVariant","FailureVariant","isToday","date","inputDate","Date","todaysDate","setHours","slice","sizes","xs","sm","md","lg","xl","green","blue","black","white","red","yellow","up","size","between","from","AdminPanel","lazy","Login","Telefonica","StatisticsPanel","AddPhones","AddNewPhones","ImportPhones","SearchAndEdit","Configurations","Passwords","ManageTerritories","ProtectedRoute","component","condition","fallbackURL","restProps","WithTerritoryVerifier","render","match","MainRouter","history","useHistory","returnTo","URLSearchParams","prevTestModeEnabled","fallback","exact","App","getElementById"],"mappings":"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","file":"static/js/main.91d7798a.chunk.js","sourcesContent":["import { Feedback, CampaignFeedback, FeedbackExtended } from 'types'\r\n\r\nexport const backendURL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'https://telefonicatesting.pythonanywhere.com/'\r\n    : window.location.origin + '/'\r\n\r\nexport const LOCAL_STORAGE = {\r\n  TOKEN: 'token',\r\n  IS_ADMIN: 'is_admin',\r\n  TEST_MODE: 'test-mode',\r\n  DARK_MODE: 'dark-mode',\r\n  ADVANCED_MODE: 'advanced-mode',\r\n}\r\n\r\nexport const colors = {\r\n  0: 'danger',\r\n  1: 'success',\r\n  2: 'dark',\r\n  3: 'warning',\r\n  4: 'primary',\r\n  5: 'info',\r\n  6: 'secondary',\r\n  7: 'success',\r\n}\r\n\r\nexport const labels: Record<FeedbackExtended, string> = {\r\n  [Feedback.UNANSWERED]: 'No en casa',\r\n  [Feedback.ANSWERED]: 'Atendió',\r\n  [Feedback.NON_EXISTENT]: 'No existe',\r\n  [Feedback.NO_CALL]: 'No visitar',\r\n  [Feedback.ANSWERING_MACHINE]: 'Contestador',\r\n  [Feedback.POSTPONE]: 'Aplazar',\r\n  [Feedback.IGNORE]: 'Ignorar',\r\n  [CampaignFeedback.RUSHED]: 'Completado',\r\n}\r\n","import { useContext } from 'react'\r\nimport { ConfigContext } from 'contexts'\r\n\r\nexport const useConfig = () => useContext(ConfigContext)\r\n","import { AuthContext } from 'contexts'\r\nimport { useContext } from 'react'\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n","import { backendURL, LOCAL_STORAGE } from 'consts'\r\nimport { camelizeKeys, decamelizeKeys, decamelize } from 'humps'\r\n\r\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'\r\n\r\ntype ReturnStatement<T> = [Record<string, unknown> | null, T]\r\n\r\ntype URLObject =\r\n  | string\r\n  | {\r\n      path: string\r\n      params: Record<string, string>\r\n    }\r\n\r\nclass Fetch {\r\n  private token: string\r\n  private useToken: boolean\r\n  private isTest: boolean\r\n  private currentTerritoryId: number | undefined\r\n\r\n  constructor(\r\n    isTest: boolean,\r\n    useToken: boolean,\r\n    currentTerritoryId: number | undefined\r\n  ) {\r\n    const token = localStorage.getItem(LOCAL_STORAGE.TOKEN) ?? ''\r\n    if (useToken && !token)\r\n      console.warn(\r\n        'Warning, trying to use token when there is none in storage.'\r\n      )\r\n\r\n    this.token = token\r\n    this.useToken = useToken\r\n    this.isTest = isTest\r\n    this.currentTerritoryId = currentTerritoryId\r\n  }\r\n\r\n  private generateFetchParams(\r\n    url: URLObject,\r\n    method: Method = 'GET',\r\n    body?: object\r\n  ) {\r\n    const URL: string = typeof url === 'string' ? url : url.path\r\n\r\n    const params: string = `${this.composeQueryParams({\r\n      ...(typeof url !== 'string' ? url.params : {}),\r\n      ...(this.isTest ? { test: '1' } : {}),\r\n      ...(this.currentTerritoryId\r\n        ? { territory: this.currentTerritoryId.toString() }\r\n        : {}),\r\n    })}`\r\n\r\n    const URI = `${backendURL}${URL}${params}`\r\n    const options = {\r\n      method,\r\n      body: body ? JSON.stringify(decamelizeKeys(body)) : undefined,\r\n      headers: {\r\n        Authorization: this.useToken ? `Bearer ${this.token}` : undefined,\r\n        'content-type': 'application/json',\r\n      },\r\n    }\r\n    return [URI, options] as [string, Parameters<typeof window.fetch>[1]]\r\n  }\r\n\r\n  private async doRequest<T>(\r\n    fetch: ReturnType<typeof window.fetch>\r\n  ): Promise<ReturnStatement<T>> {\r\n    try {\r\n      const request = await fetch\r\n      if (!request.ok) throw request\r\n      const contentType = request.headers.get('content-type')\r\n      const response = contentType?.includes('application/json')\r\n        ? await request.json()\r\n        : await request.text()\r\n      const data = response && camelizeKeys(response)\r\n      if (process.env.NODE_ENV === 'development') console.log('response', data)\r\n      return ([null, data] as unknown) as ReturnStatement<T>\r\n    } catch (error) {\r\n      console.warn('Fetching error:', error)\r\n      return ([error, null] as unknown) as ReturnStatement<T>\r\n    }\r\n  }\r\n\r\n  private composeQueryParams(params: Record<string, string>): string {\r\n    const query = Object.keys(params)\r\n      .map(\r\n        (k) =>\r\n          encodeURIComponent(decamelize(k)) +\r\n          '=' +\r\n          encodeURIComponent(params[k])\r\n      )\r\n      .join('&')\r\n    return query && '?' + query\r\n  }\r\n\r\n  async get<T>(url: URLObject): Promise<ReturnStatement<T>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url)))\r\n  }\r\n\r\n  async post<Payload extends object, Response>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'POST', body)))\r\n  }\r\n\r\n  async put<Payload extends object, Response = undefined>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'PUT', body)))\r\n  }\r\n\r\n  async delete<Payload extends object, Response = void>(\r\n    url: URLObject,\r\n    body?: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(\r\n      fetch(...this.generateFetchParams(url, 'DELETE', body))\r\n    )\r\n  }\r\n}\r\n\r\nexport { Fetch }\r\n","import { FeedbackExtended, StoragePhone } from 'types'\r\n\r\nclass PhoneStorage {\r\n  private phonesStorageKey: string\r\n\r\n  constructor(isTest: boolean) {\r\n    this.phonesStorageKey = 'phones' + (isTest ? '_test' : '')\r\n  }\r\n\r\n  public getAll(): StoragePhone[] {\r\n    const phones = localStorage.getItem(this.phonesStorageKey)\r\n    return phones ? JSON.parse(phones) : []\r\n  }\r\n\r\n  public add(phone: StoragePhone): StoragePhone | null {\r\n    const phones = this.getAll()\r\n    if (phones.find((p) => p.id === phone.id)) return null\r\n\r\n    // TODO: maybe max number should come from backend\r\n    if (phones.length >= 6) {\r\n      const popped = phones.shift()\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return popped ?? null\r\n    } else {\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return null\r\n    }\r\n  }\r\n\r\n  public update(id: number, newStatus: FeedbackExtended) {\r\n    const phones = this.getAll()\r\n    const toUpdate = phones.find((p) => p.id === id)\r\n    if (!toUpdate) return\r\n    toUpdate.status = newStatus\r\n    toUpdate.restore.lastStatus = newStatus\r\n    localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n  }\r\n}\r\n\r\nexport { PhoneStorage }\r\n","import { useMemo } from 'react'\r\nimport { PhoneStorage as PhoneStorageConstructor } from 'services'\r\nimport { useConfig } from '.'\r\nimport { useReactive } from './utils'\r\n\r\nconst usePhoneStorage = () => {\r\n  const { reactive } = useReactive()\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const PhoneStorage = useMemo(\r\n    () => new PhoneStorageConstructor(testModeEnabled),\r\n    [testModeEnabled]\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      getAll: PhoneStorage.getAll.bind(PhoneStorage),\r\n      add: reactive(PhoneStorage.add.bind(PhoneStorage)),\r\n      update: reactive(PhoneStorage.update.bind(PhoneStorage)),\r\n    }),\r\n    [PhoneStorage, reactive]\r\n  )\r\n}\r\n\r\nexport { usePhoneStorage }\r\n","import { useCallback } from 'react'\r\nimport { Fetch } from 'services'\r\nimport { useConfig } from '.'\r\n\r\nconst useFetch = () => {\r\n  const { testModeEnabled, currentTerritory } = useConfig()\r\n\r\n  const FetchFunction = useCallback(\r\n    (useToken: boolean = true) =>\r\n      new Fetch(testModeEnabled, useToken, currentTerritory?.id),\r\n    [testModeEnabled, currentTerritory?.id]\r\n  )\r\n\r\n  return FetchFunction\r\n}\r\n\r\nexport { useFetch }\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar as BNavbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Button,\r\n} from 'reactstrap'\r\nimport styled, { css } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth, useConfig } from 'hooks'\r\nimport { useOnClickOutside } from 'hooks/utils'\r\nimport { Alert, useAlerts, Switch } from '.'\r\n\r\nconst Navbar: React.FC<{ territory?: string }> = ({ territory }) => {\r\n  const [collapsed, setCollapsed] = useState(true)\r\n  const mobileNavRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const [showInstallButton, setShowInstallButton] = useState<boolean>(true)\r\n  const installEventRef = useRef<any>(null)\r\n\r\n  useOnClickOutside(mobileNavRef, () => !collapsed && setCollapsed(true))\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    currentTerritory,\r\n    toggleAdvancedMode,\r\n    toggleDarkMode,\r\n    toggleTestMode,\r\n  } = useConfig()\r\n\r\n  const { isAuth, isAdmin, doLogout } = useAuth()\r\n\r\n  const onLogout = () => {\r\n    doLogout()\r\n    onLinkClicked()\r\n  }\r\n\r\n  const onLinkClicked = () => toggleNavbar()\r\n\r\n  const onTestModeClick = (checked: boolean) => {\r\n    checked\r\n      ? AlertManager.show('test-mode-alert')\r\n      : AlertManager.hide('test-mode-alert')\r\n    toggleTestMode(checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeinstallprompt', (e) => {\r\n      e.preventDefault()\r\n      installEventRef.current = e\r\n    })\r\n    // @ts-ignore\r\n    const isInWebAppiOS = window.navigator.standalone === true\r\n    const isInWebAppChrome = window.matchMedia('(display-mode: standalone)')\r\n      .matches\r\n\r\n    if (isInWebAppiOS || isInWebAppChrome) setShowInstallButton(false)\r\n  }, [])\r\n\r\n  const installApp = () => {\r\n    installEventRef.current?.prompt()\r\n    installEventRef.current?.userChoice.then((choiceResult: any) => {\r\n      choiceResult.outcome === 'accepted' && setShowInstallButton(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"test-mode-alert\" position=\"bottom\">\r\n        En el modo de prueba, todo funciona con un duplicado de la app real.\r\n      </Alert>\r\n      <div ref={mobileNavRef}>\r\n        <BNavbar color=\"dark\" dark>\r\n          <Container>\r\n            <NavbarBrand className=\"mr-auto\">\r\n              {process.env.REACT_APP_CONG_INITIALS} Telefónica\r\n              {territory && (\r\n                <Version ml>\r\n                  <span>Territorio actual: </span>({territory})\r\n                </Version>\r\n              )}\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n            <Collapse isOpen={!collapsed} navbar>\r\n              <MobileNav navbar>\r\n                <NavItem>\r\n                  <Switch\r\n                    label=\"Modo oscuro\"\r\n                    checked={darkModeEnabled}\r\n                    onChange={toggleDarkMode}\r\n                  />\r\n                </NavItem>\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo avanzado\"\r\n                      checked={advancedModeEnabled}\r\n                      onChange={toggleAdvancedMode}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo de prueba\"\r\n                      checked={testModeEnabled}\r\n                      onChange={onTestModeClick}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <Separator>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink\r\n                        to={`/${currentTerritory?.name}/admin-panel`}\r\n                        background=\"dark\"\r\n                      >\r\n                        Ir al Panel de administración\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink\r\n                        to={`/${currentTerritory?.name}/telefonica`}\r\n                        background=\"dark\"\r\n                      >\r\n                        Ir a Telefónica\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                  </Separator>\r\n                )}\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <ButtonContainer>\r\n                      <NavLink onClick={onLogout}>Cerrar sesión</NavLink>\r\n                    </ButtonContainer>\r\n                  </NavItem>\r\n                )}\r\n                {showInstallButton && (\r\n                  <Separator>\r\n                    <Button\r\n                      block\r\n                      className=\"my-2\"\r\n                      color=\"info\"\r\n                      onClick={installApp}\r\n                    >\r\n                      Instalar App\r\n                    </Button>\r\n                  </Separator>\r\n                )}\r\n                <Version>v{process.env.REACT_APP_VERSION}</Version>\r\n              </MobileNav>\r\n            </Collapse>\r\n          </Container>\r\n        </BNavbar>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Version = styled.small<{ ml?: boolean }>`\r\n  color: ${({ theme }) => theme.text.colors.secondary};\r\n\r\n  > span {\r\n    ${({ theme }) => theme.breakpoints.down('sm')} {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  ${({ ml }) =>\r\n    ml &&\r\n    css`\r\n      margin-left: 0.3em;\r\n    `}\r\n`\r\n\r\nconst MobileNav = styled(Nav)`\r\n  justify-content: right;\r\n  text-align: right;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n\r\n  > a {\r\n    cursor: pointer;\r\n    display: inline-block;\r\n  }\r\n`\r\n\r\nconst RouterLink = styled(Link)<{ noPadding?: boolean; background?: 'dark' }>`\r\n  color: ${({ theme, background }) =>\r\n    background === 'dark' || theme.darkMode\r\n      ? theme.text.colors.lightgreen\r\n      : theme.text.colors.info};\r\n  display: inline-block;\r\n  padding: ${({ noPadding }) => (noPadding ? 0 : 0.5)}rem 0rem;\r\n`\r\n\r\nconst Separator = styled.div`\r\n  border-top: 1px solid gray;\r\n`\r\n\r\nexport { Navbar, RouterLink }\r\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TestingLabel: React.FC = () => (\n  <TestingLabelContainer>\n    <span>Modo de Prueba</span>\n  </TestingLabelContainer>\n)\n\nconst TestingLabelContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n  background: darkred;\n  color: white;\n  padding: 5px 10px;\n  border-top: 2px solid orange;\n  border-bottom: 2px solid orange;\n  width: 400px;\n  text-align: center;\n  transform: rotate(-45deg) translateX(-185px) translateY(73px);\n  transform-origin: left;\n`\n\nexport { TestingLabel }\n","import React from 'react'\r\nimport { useConfig } from 'hooks'\r\nimport { Alert } from '.'\r\nimport { Navbar } from './Navbar'\r\nimport { TestingLabel } from './TestingLabel'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  const { testModeEnabled, darkModeEnabled, currentTerritory } = useConfig()\r\n\r\n  return (\r\n    <>\r\n      {darkModeEnabled && <Helmet>{darkStyles}</Helmet>}\r\n      {testModeEnabled && <TestingLabel />}\r\n      <Navbar territory={currentTerritory?.name} />\r\n      {children}\r\n      <Alert name=\"not-so-fast\" position=\"bottom\" variant=\"failure\">\r\n        ¡No tan rápido! No es recomendable tocar un botón tan seguido.\r\n      </Alert>\r\n    </>\r\n  )\r\n}\r\n\r\nconst darkStyles = (\r\n  <style>{`\r\n    body {\r\n      background: #222 !important;\r\n      color: white !important;\r\n    }\r\n\r\n    table {\r\n      color: white !important;\r\n    }\r\n\r\n    .table-striped thead tr {\r\n      background-color: rgba(0,0,0,.95)\r\n    }\r\n\r\n    .table-striped tbody tr:nth-of-type(even) {\r\n      background-color: rgba(0,0,0,.5)\r\n    }\r\n\r\n    .text-secondary {\r\n      color: #999 !important;\r\n    }\r\n\r\n    .modal-content {\r\n      background-color: #222 !important;\r\n    }\r\n\r\n    .close {\r\n      color: white !important;\r\n    }\r\n\r\n    .jumbotron {\r\n      background: #454b4f !important;\r\n    }\r\n\r\n    input {\r\n      border-top-style: hidden;\r\n      border-right-style: hidden;\r\n      border-left-style: hidden;\r\n      border-bottom-style: groove;\r\n      background-color: white;\r\n    }\r\n\r\n    input::placeholder {\r\n      color: #777 !important;\r\n    }\r\n\r\n    .breadcrumb {\r\n      background-color: #333;\r\n    }\r\n\r\n    .breadcrumb-item.active {\r\n      color: #ddd;\r\n    }\r\n`}</style>\r\n)\r\n\r\nexport { Layout }\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect, useLocation } from 'react-router'\r\nimport { useConfig } from 'hooks'\r\nimport { Spinner } from '.'\r\nimport { stripTerritory } from 'utils'\r\n\r\ninterface TerritoryVerifierProps {\r\n  territory: string\r\n}\r\n\r\nconst TerritoryVerifier: React.FC<TerritoryVerifierProps> = ({\r\n  children,\r\n  territory,\r\n}) => {\r\n  const { territories, configsLoading, setCurrentTerritory } = useConfig()\r\n  const location = useLocation()\r\n\r\n  const territoryData = territories.find(\r\n    ({ name }) => name.toLowerCase() === territory.toLowerCase()\r\n  )\r\n  const isValid = !!territoryData\r\n\r\n  useEffect(() => {\r\n    if (isValid) setCurrentTerritory(territoryData!)\r\n  }, [territoryData, isValid, setCurrentTerritory])\r\n\r\n  if (configsLoading && !territories.length)\r\n    return <Spinner fulfill container />\r\n\r\n  return isValid ? (\r\n    <>{children}</>\r\n  ) : (\r\n    <Redirect\r\n      to={`/base/${stripTerritory(location.pathname)}${location.search}`}\r\n    />\r\n  )\r\n}\r\n\r\nexport { TerritoryVerifier }\r\n","import React from 'react'\r\nimport { Spinner as RSSpinner, Container } from 'reactstrap'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst colors = ['success', 'danger', 'warning', 'info']\r\nconst getRandomColor = () => colors[Math.floor(Math.random() * colors.length)]\r\n\r\ninterface SpinnerProps {\r\n  fulfill?: boolean\r\n  container?: boolean\r\n}\r\n\r\nconst Spinner: React.FC<SpinnerProps> = ({\r\n  fulfill = false,\r\n  container = false,\r\n}) => (\r\n  <Container className=\"h-100\">\r\n    <SpinnerContainer\r\n      fulfill={fulfill}\r\n      container={container}\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n    >\r\n      <RSSpinner\r\n        color={getRandomColor()}\r\n        style={{ width: '3rem', height: '3rem' }}\r\n      />\r\n    </SpinnerContainer>\r\n  </Container>\r\n)\r\n\r\nconst SpinnerContainer = styled.div<Required<SpinnerProps>>`\r\n  ${({ fulfill, container, theme }) =>\r\n    fulfill &&\r\n    css`\r\n      width: 100%;\r\n      height: ${container ? `calc(100vh - ${theme.navbarHeight}px)` : '100%'};\r\n    `}\r\n`\r\n\r\nexport { Spinner }\r\n","import React, { ReactNode } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\ninterface ErrorDisplayProps {\r\n  message?: ReactNode\r\n}\r\n\r\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({ message }) => (\r\n  <ErrorContainer className=\"d-flex justify-content-center align-items-center h-100 text-center\">\r\n    <h4>\r\n      {message ?? (\r\n        <>\r\n          Hubo un problema :( <br /> <br /> Intentá recargando la página.\r\n        </>\r\n      )}\r\n    </h4>\r\n  </ErrorContainer>\r\n)\r\n\r\nconst ErrorContainer = styled(Container)`\r\n  margin-top: 3rem;\r\n  color: ${({ theme }) => theme.text.colors.error};\r\n`\r\n\r\nexport { ErrorDisplay }\r\n","import React from 'react'\r\nimport { Breadcrumb as BBreadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { RouterLink } from '.'\r\nimport { useConfig } from 'hooks'\r\n\r\ninterface BreadcrumbProps {\r\n  items: Array<{\r\n    title: string\r\n    linkTo?: string\r\n    onClick?: () => void\r\n  }>\r\n}\r\n\r\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => {\r\n  const { currentTerritory } = useConfig()\r\n\r\n  return (\r\n    <BBreadcrumb>\r\n      {items.map(({ title, linkTo, onClick }, index) => (\r\n        <BreadcrumbItem\r\n          key={title}\r\n          onClick={onClick}\r\n          active={index === items.length - 1}\r\n        >\r\n          {linkTo ? (\r\n            <RouterLink to={`/${currentTerritory.name}${linkTo}`} noPadding>\r\n              {title}\r\n            </RouterLink>\r\n          ) : (\r\n            title\r\n          )}\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </BBreadcrumb>\r\n  )\r\n}\r\n\r\nexport { Breadcrumb }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface SwitchProps {\r\n  label?: string\r\n  onChange: (checked: boolean) => void\r\n  checked: boolean\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = ({ label = '', onChange, checked }) => (\r\n  <SwitchContainer>\r\n    <input\r\n      type=\"checkbox\"\r\n      id={`${label.split(' ').join('-')}-check`}\r\n      checked={checked}\r\n      onChange={(e) => onChange(e.target.checked)}\r\n    />\r\n    <label htmlFor={`${label.split(' ').join('-')}-check`}>\r\n      {label || <span>&nbsp;</span>}\r\n    </label>\r\n  </SwitchContainer>\r\n)\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n\r\n  input {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 36px;\r\n    height: 20px;\r\n    opacity: 0;\r\n    z-index: 0;\r\n\r\n    :checked + label:before {\r\n      background-color: rgba(63, 81, 181, 0.5);\r\n    }\r\n\r\n    :checked + label:after {\r\n      left: 16px;\r\n      background-color: cornflowerblue;\r\n      border-color: cornflowerblue;\r\n    }\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    padding: 0 0 0 44px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n\r\n    ::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 5px;\r\n      left: 0;\r\n      width: 36px;\r\n      height: 14px;\r\n      background-color: #999;\r\n      border-radius: 14px;\r\n      z-index: 1;\r\n      transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n\r\n    ::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 0;\r\n      width: 20px;\r\n      height: 20px;\r\n      background-color: #fff;\r\n      border: 1px solid #ededed;\r\n      border-radius: 14px;\r\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\r\n      z-index: 2;\r\n      transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n      transition-property: left, background-color, border-color;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Switch }\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody } from 'reactstrap'\r\n\r\nconst useConfirmationModal = <Data extends {}>() => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\r\n\r\n  const toggleModal = () => {\r\n    isModalOpen ? reset() : setIsModalOpen(!isModalOpen)\r\n  }\r\n\r\n  const [data, setData] = useState<Data | null>(null)\r\n\r\n  const askEditConfirmation = (data: Data) => {\r\n    toggleModal()\r\n    setData(data)\r\n  }\r\n\r\n  const reset = useCallback(() => {\r\n    setIsModalOpen(false)\r\n    setData(null)\r\n  }, [])\r\n\r\n  return {\r\n    isModalOpen,\r\n    data,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  }\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean\r\n  toggleModal: () => void\r\n  onConfirm: () => void\r\n  buttonColor: string\r\n  title: React.ReactNode\r\n  body?: React.ReactNode\r\n  confirmationLabel: React.ReactNode\r\n}\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\r\n  isOpen,\r\n  toggleModal,\r\n  onConfirm,\r\n  buttonColor,\r\n  confirmationLabel,\r\n  title,\r\n  body,\r\n}) => (\r\n  <Modal centered isOpen={isOpen} toggle={toggleModal}>\r\n    <ModalHeader toggle={toggleModal}>{title}</ModalHeader>\r\n    {body && <ModalBody>{body}</ModalBody>}\r\n    <ModalFooter>\r\n      <Button color={buttonColor} onClick={onConfirm}>\r\n        {confirmationLabel}\r\n      </Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n)\r\n\r\nexport { ConfirmationModal, useConfirmationModal }\r\n","import { useConfig } from 'hooks'\r\nimport React from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\ntype TerritorySelectorProps = {\r\n  onChange?: (name: string) => void\r\n  defaultValue?: 'current' | 'none'\r\n  excludeCurrent?: boolean\r\n  name?: string\r\n  noEmptyValue?: boolean\r\n}\r\n\r\nconst TerritorySelector = React.forwardRef<\r\n  HTMLInputElement,\r\n  TerritorySelectorProps\r\n>(\r\n  (\r\n    {\r\n      onChange,\r\n      defaultValue = 'none',\r\n      excludeCurrent = false,\r\n      name,\r\n      noEmptyValue = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { currentTerritory, territories } = useConfig()\r\n\r\n    return (\r\n      <Input\r\n        type=\"select\"\r\n        onChange={(e) => onChange?.(e.target.value)}\r\n        defaultValue={\r\n          defaultValue === 'current'\r\n            ? currentTerritory.name\r\n            : noEmptyValue\r\n            ? undefined\r\n            : ''\r\n        }\r\n        innerRef={ref}\r\n        name={name}\r\n      >\r\n        {defaultValue === 'none' && !noEmptyValue && <option value=\"\"></option>}\r\n        {territories.map((t) =>\r\n          t.id === currentTerritory.id && excludeCurrent ? null : (\r\n            <option key={t.id} value={t.name}>\r\n              {t.name}\r\n            </option>\r\n          )\r\n        )}\r\n      </Input>\r\n    )\r\n  }\r\n)\r\n\r\nexport { TerritorySelector }\r\n","export enum Feedback {\r\n  UNANSWERED = 0,\r\n  ANSWERED = 1,\r\n  NON_EXISTENT = 2,\r\n  NO_CALL = 3,\r\n  ANSWERING_MACHINE = 4,\r\n  POSTPONE = 5,\r\n  IGNORE = 6,\r\n}\r\n\r\nexport enum CampaignFeedback {\r\n  RUSHED = 7,\r\n}\r\n\r\nexport type FeedbackExtended = Feedback | CampaignFeedback\r\n\r\nexport interface Phone {\r\n  answeredOn: null | string\r\n  answeringMachineDate: null | string\r\n  comments: string\r\n  commentedOn: null | string\r\n  info: string | null\r\n  fulfilledOn: null | string\r\n  id: number\r\n  noCall: boolean\r\n  nonExistent: boolean\r\n  postponedDays: number\r\n  phone: string\r\n  unansweredCount: number\r\n  unansweredDate: null | string\r\n  noWeekends: boolean\r\n  territoryId: number\r\n  campaignStatus: boolean\r\n}\r\n\r\nexport type OriginalData = Pick<\r\n  Phone,\r\n  | 'answeredOn'\r\n  | 'fulfilledOn'\r\n  | 'noCall'\r\n  | 'nonExistent'\r\n  | 'postponedDays'\r\n  | 'unansweredCount'\r\n  | 'unansweredDate'\r\n>\r\n\r\nexport interface StoragePhone {\r\n  id: Phone['id']\r\n  status: null | FeedbackExtended\r\n  phone: Phone['phone']\r\n  savedOn: number\r\n  restore: OriginalData & {\r\n    lastStatus: null | FeedbackExtended\r\n  }\r\n}\r\n\r\nexport interface PhoneOptionsType {\r\n  callOnWeekends: boolean\r\n}\r\n\r\nexport interface Configurations {\r\n  unansweredMaxAttemps: number\r\n  answeringMachineMaxAttemps: number\r\n  answeringMachinePostponedDays: number\r\n  postponedButtonDays: number\r\n  nonExistentPostponedDays: number\r\n  hiddenButtons: string\r\n  territoryId: number\r\n}\r\n\r\nexport interface Territory {\r\n  id: number\r\n  name: string\r\n  active: boolean\r\n  /**\r\n   * This should be a boolean, but BE is sending back a 0 | 1 for now, beware\r\n   */\r\n  campaignMode: number\r\n  completed: number\r\n  totalNumbers: number\r\n}\r\n","import { useEffect, RefObject } from 'react'\r\n\r\ntype Event = MouseEvent | TouchEvent\r\n\r\nconst useOnClickOutside = <T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: Event) => void\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: Event) => {\r\n      const el = ref?.current\r\n      if (!el || el.contains?.((event?.target as Node) || null)) {\r\n        return\r\n      }\r\n      handler(event)\r\n    }\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\nexport { useOnClickOutside }\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useRerender = () => {\r\n  const [, setDummy] = useState<any>()\r\n  const forceUpdate = useCallback(() => {\r\n    const newRef = {}\r\n    setDummy(newRef)\r\n  }, [])\r\n  return { forceUpdate }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useRerender } from '.'\r\n\r\nconst useReactive = () => {\r\n  const { forceUpdate } = useRerender()\r\n\r\n  const reactive = useCallback(\r\n    <T extends (...args: any[]) => any>(cb: T) =>\r\n      ((...args) => {\r\n        const returnData = cb(...args)\r\n        forceUpdate()\r\n        return returnData\r\n      }) as T,\r\n    [forceUpdate]\r\n  )\r\n\r\n  return { reactive }\r\n}\r\n\r\nexport { useReactive }\r\n","import { useAlerts } from 'components'\r\nimport { useEffect, useRef, useCallback } from 'react'\r\n\r\nconst useThrottle = <T extends (...args: any) => any>(\r\n  cb: T,\r\n  timeout: number\r\n) => {\r\n  const timeoutRef = useRef<number | undefined>(undefined)\r\n  const readyRef = useRef<boolean>(true)\r\n\r\n  useEffect(() => () => clearTimeout(timeoutRef.current), [])\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useCallback(\r\n    ((...args: any) => {\r\n      if (readyRef.current === false) {\r\n        AlertManager.show('not-so-fast', { timeout: 3000 })\r\n        return\r\n      }\r\n      cb(...args)\r\n      readyRef.current = false\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        readyRef.current = true\r\n      }, timeout)\r\n    }) as T,\r\n    [cb, timeout]\r\n  )\r\n}\r\n\r\nexport { useThrottle }\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const usePreviousValue = <T>(value: T): T => {\r\n  const prev = useRef<T>(value)\r\n  useEffect(() => {\r\n    prev.current = value\r\n  })\r\n  return prev.current\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  FunctionComponent,\r\n  useCallback,\r\n} from 'react'\r\nimport { useFetch } from 'hooks'\r\nimport { Configurations, Territory } from 'types'\r\nimport { LOCAL_STORAGE } from 'consts'\r\nimport { inferTerritory } from 'utils'\r\n\r\ninterface ConfigType {\r\n  darkModeEnabled: boolean\r\n  advancedModeEnabled: boolean\r\n  testModeEnabled: boolean\r\n  configurations: Configurations\r\n  territories: Territory[]\r\n  configsLoading: boolean\r\n  configsError: boolean\r\n  currentTerritory: Territory\r\n  potentialTerritory: string\r\n  toggleDarkMode: (checked: boolean) => void\r\n  toggleAdvancedMode: (checked: boolean) => void\r\n  toggleTestMode: (checked: boolean) => void\r\n  getConfigs: (Fetch: ReturnType<typeof useFetch>) => Promise<void>\r\n  updateConfigs: (configs: Configurations) => void\r\n  setCurrentTerritory: (territory: Territory) => void\r\n  updateTerritories: (territories: Territory[]) => void\r\n}\r\n\r\nexport const ConfigContext = createContext<ConfigType>({} as ConfigType)\r\n\r\nexport const ConfigProvider: FunctionComponent = ({ children }) => {\r\n  const configValue = useConfig()\r\n\r\n  return (\r\n    <ConfigContext.Provider value={configValue}>\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useConfig = (): ConfigType => {\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.DARK_MODE)\r\n  )\r\n  const [advancedModeEnabled, setAdvancedModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.ADVANCED_MODE)\r\n  )\r\n  const [testModeEnabled, setTestModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.TEST_MODE)\r\n  )\r\n\r\n  const [configurations, setConfigurations] = useState<\r\n    Configurations | undefined\r\n  >()\r\n  const [territories, setTerritories] = useState<Territory[]>([])\r\n  const [currentTerritory, setCurrentTerritory] = useState<\r\n    Territory | undefined\r\n  >()\r\n  const [configsLoading, setConfigsLoading] = useState<boolean>(true)\r\n  const [configsError, setConfigsError] = useState<boolean>(false)\r\n\r\n  const getConfigs = useCallback(async (Fetch: ReturnType<typeof useFetch>) => {\r\n    try {\r\n      setConfigsLoading(true)\r\n      const [err, response] = await Fetch().get<{\r\n        configs: Configurations\r\n        territories: Territory[]\r\n      }>('/configurations')\r\n\r\n      if (err) throw err\r\n\r\n      setConfigurations(response.configs)\r\n      setTerritories(response.territories)\r\n      setConfigsError(false)\r\n    } catch {\r\n      setConfigsError(true)\r\n    } finally {\r\n      setConfigsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const updateConfigs = (configs: Configurations) => setConfigurations(configs)\r\n\r\n  const updateTerritories = useCallback(\r\n    (territories: Territory[]) => setTerritories(territories),\r\n    []\r\n  )\r\n\r\n  const toggleDarkMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem(LOCAL_STORAGE.DARK_MODE, '1')\r\n      : localStorage.removeItem(LOCAL_STORAGE.DARK_MODE)\r\n    setDarkModeEnabled(checked)\r\n  }\r\n\r\n  const toggleAdvancedMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem(LOCAL_STORAGE.ADVANCED_MODE, '1')\r\n      : localStorage.removeItem(LOCAL_STORAGE.ADVANCED_MODE)\r\n    setAdvancedModeEnabled(checked)\r\n  }\r\n\r\n  const toggleTestMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem(LOCAL_STORAGE.TEST_MODE, '1')\r\n      : localStorage.removeItem(LOCAL_STORAGE.TEST_MODE)\r\n    setTestModeEnabled(checked)\r\n  }\r\n\r\n  const potentialTerritory = inferTerritory(window.location.pathname)\r\n\r\n  return {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    configurations: configurations!,\r\n    territories,\r\n    configsLoading,\r\n    configsError,\r\n    currentTerritory: currentTerritory!,\r\n    potentialTerritory,\r\n    toggleDarkMode,\r\n    toggleAdvancedMode,\r\n    toggleTestMode,\r\n    getConfigs,\r\n    updateConfigs,\r\n    setCurrentTerritory,\r\n    updateTerritories,\r\n  }\r\n}\r\n","import React, { createContext, useState, FunctionComponent } from 'react'\r\nimport { LOCAL_STORAGE } from 'consts'\r\nimport { useFetch } from 'hooks'\r\nimport { useAlerts } from 'components'\r\n\r\ninterface AuthType {\r\n  isAuth: boolean\r\n  isLoading: boolean\r\n  isAdmin: boolean\r\n  doLogin: (userName: string, password: string) => void\r\n  doLogout: () => void\r\n}\r\n\r\ninterface LoginPayload {\r\n  username: string\r\n  password: string\r\n}\r\n\r\ninterface LoginResponse {\r\n  accessToken: string\r\n  isAdmin: boolean\r\n}\r\n\r\nexport const AuthContext = createContext<AuthType>({} as AuthType)\r\n\r\nexport const AuthProvider: FunctionComponent = ({ children }) => {\r\n  const authValue = useAuth()\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>{children}</AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = (): AuthType => {\r\n  const [isAuth, setIsAuth] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.TOKEN)\r\n  )\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.IS_ADMIN)\r\n  )\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const doLogin = async (username: string, password: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, response] = await Fetch(false).post<\r\n        LoginPayload,\r\n        LoginResponse\r\n      >('login', {\r\n        username,\r\n        password,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      localStorage.setItem(LOCAL_STORAGE.TOKEN, response.accessToken)\r\n      response.isAdmin\r\n        ? localStorage.setItem(LOCAL_STORAGE.IS_ADMIN, '1')\r\n        : localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n\r\n      setIsAdmin(response.isAdmin)\r\n      setIsAuth(true)\r\n    } catch (e) {\r\n      e.status === 401 && AlertManager.show('wrong-login-credentials')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const doLogout = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE.TOKEN)\r\n    localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n    localStorage.removeItem(LOCAL_STORAGE.TEST_MODE)\r\n    setIsAuth(false)\r\n    setIsAdmin(false)\r\n  }\r\n\r\n  return {\r\n    isAuth,\r\n    isLoading,\r\n    isAdmin: isAuth && isAdmin,\r\n    doLogin,\r\n    doLogout,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ConfigContext, ConfigProvider } from './config'\r\nimport { AuthContext, AuthProvider } from './auth'\r\nimport { AlertProvider } from 'components/Alert'\r\n\r\nconst ContextProviders: React.FC = ({ children }) => {\r\n  return (\r\n    <AlertProvider>\r\n      <ConfigProvider>\r\n        <AuthProvider>{children}</AuthProvider>\r\n      </ConfigProvider>\r\n    </AlertProvider>\r\n  )\r\n}\r\n\r\n// Provider\r\nexport { ContextProviders }\r\n\r\n// Contexts\r\nexport { ConfigContext }\r\nexport { AuthContext }\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport {\r\n  NameState,\r\n  ReturnedNameState,\r\n  AlertOptions,\r\n  AlertProviderInterface,\r\n} from \"./types\";\r\n\r\nconst emptyState: ReturnedNameState = {\r\n  timeout: 0,\r\n  data: null,\r\n  show: false,\r\n  permanent: false,\r\n};\r\n\r\nexport const useAlertInner = (): AlertProviderInterface => {\r\n  const [state, setState] = useState<Record<string, NameState | undefined>>({});\r\n\r\n  const showHandler = useCallback((name: string, opts?: AlertOptions) => {\r\n    const { timeout = 4000, data, permanent = false } = opts || {};\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: {\r\n        timeout: timeout || 0,\r\n        data: data || null,\r\n        permanent,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const hideHandler = useCallback((name: string) => {\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: undefined,\r\n    }));\r\n  }, []);\r\n\r\n  const hideAllHandler = useCallback(() => {\r\n    setState({});\r\n  }, []);\r\n\r\n  const getByName = useCallback(\r\n    (name: string): ReturnedNameState => ({\r\n      show: true,\r\n      ...(state[name] || emptyState),\r\n    }),\r\n    [state]\r\n  );\r\n\r\n  const AlertManager = useMemo(\r\n    () => ({\r\n      show: showHandler,\r\n      hide: hideHandler,\r\n      hideAll: hideAllHandler,\r\n    }),\r\n    [showHandler, hideHandler, hideAllHandler]\r\n  );\r\n\r\n  return {\r\n    AlertManager,\r\n    getByName,\r\n  };\r\n};\r\n","import React, { FunctionComponent, createContext } from \"react\";\r\nimport { AlertProviderInterface } from \"./types\";\r\nimport { useAlertInner } from \"./useAlertInner\";\r\n\r\nexport const AlertContext = createContext<AlertProviderInterface>(\r\n  {} as AlertProviderInterface\r\n);\r\n\r\nexport const AlertProvider: FunctionComponent = ({ children }) => {\r\n  const alertValue = useAlertInner();\r\n\r\n  return (\r\n    <AlertContext.Provider value={alertValue}>{children}</AlertContext.Provider>\r\n  );\r\n};\r\n","import { keyframes } from \"styled-components\";\r\n\r\nexport const fadeIn = () => keyframes`\r\n  from { opacity: 0 }\r\n  to { opacity: 1 }\r\n`;\r\n\r\nexport const fadeOut = () => keyframes`\r\n  from { opacity: 1 }\r\n  to { opacity: 0 }\r\n`;\r\n\r\nexport const popUp = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(0) }\r\n  to { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDown = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translateY(0) }\r\n`;\r\n\r\nexport const popUpCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, 0) }\r\n  to { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDownCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translate(-50%, 0) }\r\n`;\r\n\r\nexport const customEnterAnimation = keyframes`\r\n  0% { transform: translateY(calc(-100% + 40px)) translateX(-50%) }\r\n  70% { transform: translateY(calc(-500%)) translateX(-50%) }\r\n  100% { transform: translateY(calc(-300%)) translateX(-50%) }\r\n`;\r\n\r\nexport const customExitAnimation = keyframes`\r\n  0% { transform: translateY(calc(-300%)) translateX(-50%); }\r\n  30% { transform: translateY(calc(-500%)) translateX(-50%); }\r\n  100% { transform: translateY(calc(-100% + 40px)) translateX(-50%); }\r\n`;\r\n","import { css } from 'styled-components'\r\nimport { AllowedPositions } from './types'\r\nimport { popUp, popDown, popUpCentered, popDownCentered } from './animations'\r\n\r\nexport const getPositionalCSS = (\r\n  position: AllowedPositions | undefined,\r\n  show: boolean,\r\n  animationDuration: number\r\n): ReturnType<typeof css> | string => {\r\n  if (!position) return ''\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top-centered', show, animationDuration)}\r\n        top: 10px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n    case 'top-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        left: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'top-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        right: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation(\r\n          'bottom-centered',\r\n          show,\r\n          animationDuration\r\n        )}\r\n        top: 100vh;\r\n        left: 50%;\r\n        transform: translate(-50%, calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        left: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        right: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nconst commonPositionalStyle = `\r\n    position: fixed;\r\n    z-index: 100000;\r\n`\r\n\r\nconst getDesktopScackbarAnimation = (\r\n  position: 'bottom' | 'top' | 'bottom-centered' | 'top-centered',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [pd, pu] = position.endsWith('centered')\r\n    ? [popDownCentered(true), popUpCentered(true)]\r\n    : [popDown(true), popUp(true)]\r\n\r\n  const [enter, exit] = position.startsWith('top') ? [pd, pu] : [pu, pd]\r\n\r\n  return css`\r\n    animation: ${show ? enter : exit} ${animationDuration}s\r\n      ${show ? 'ease-out' : 'ease-in'};\r\n  `\r\n}\r\n\r\nconst getMobileSnackbarStyle = (\r\n  position: 'bottom' | 'top',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [enter, exit] =\r\n    position === 'top' ? [popDown(), popUp()] : [popUp(), popDown()]\r\n\r\n  return css`\r\n    ${({ theme }) => theme.breakpoints.down('sm')} {\r\n      width: 100vw;\r\n      border-radius: 0;\r\n      left: 0;\r\n      right: 0;\r\n      ${position === 'top' ? 'top: 0;' : ''}\r\n      transform: ${position === 'bottom' ? 'translateY(-100%)' : 'none'};\r\n      animation: ${show ? enter : exit} ${animationDuration}s\r\n        ${show ? 'ease-out' : 'ease-in'};\r\n    }\r\n  `\r\n}\r\n","import {\r\n  FunctionComponent,\r\n  ReactElement,\r\n  useCallback,\r\n  cloneElement,\r\n  useContext,\r\n} from 'react'\r\nimport { AlertContext } from './Provider'\r\n\r\ninterface DismissableProps {\r\n  children: ReactElement\r\n}\r\n\r\ninterface InnerDismissableProps extends DismissableProps {\r\n  name: string\r\n}\r\n\r\nexport const Dismissable: FunctionComponent<DismissableProps> = () => null\r\n\r\nexport const InnerDismissable: FunctionComponent<InnerDismissableProps> = ({\r\n  name,\r\n  children,\r\n}) => {\r\n  const { AlertManager } = useContext(AlertContext)\r\n\r\n  const dismiss = useCallback(() => AlertManager.hide(name), [\r\n    name,\r\n    AlertManager,\r\n  ])\r\n\r\n  return cloneElement(children, { onClick: dismiss })\r\n}\r\n","import React, {\r\n  FunctionComponent,\r\n  useLayoutEffect,\r\n  useState,\r\n  useContext,\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  useRef,\r\n} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styled, { css, Keyframes } from 'styled-components'\r\nimport { AlertContext } from './Provider'\r\nimport { fadeIn, fadeOut } from './animations'\r\nimport { AllowedPositions } from './types'\r\nimport { getPositionalCSS } from './utils'\r\nimport { InnerDismissable, Dismissable } from './Dismissable'\r\n\r\ninterface AlertProps {\r\n  name: string\r\n  onClose?: () => void\r\n  enterAnimation?: Keyframes | 'none'\r\n  exitAnimation?: Keyframes | 'none'\r\n  animationDuration?: number\r\n  animationTimingFunction?: (show: boolean) => string\r\n  noStyle?: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  position?: AllowedPositions\r\n  id?: string\r\n  onClick?: () => void\r\n  variant?: 'success' | 'failure'\r\n}\r\n\r\nexport const Alert: FunctionComponent<AlertProps> = ({\r\n  name,\r\n  onClose,\r\n  enterAnimation,\r\n  exitAnimation,\r\n  animationDuration = 0.3,\r\n  animationTimingFunction = () => 'linear',\r\n  noStyle = false,\r\n  children,\r\n  containerCSS,\r\n  position,\r\n  id,\r\n  onClick,\r\n  variant,\r\n}) => {\r\n  const { getByName, AlertManager } = useContext(AlertContext)\r\n  const { show, timeout, data, permanent } = getByName(name)\r\n\r\n  const [isShowing, setIsShowing] = useState(false)\r\n  const [storedData, setStoredData] = useState<any>(null)\r\n  const hideTimeoutRef = useRef<number | undefined>(undefined)\r\n\r\n  const waitAnimation = () =>\r\n    new Promise((r) => setTimeout(r, animationDuration * 1000))\r\n\r\n  const handleHide = () => {\r\n    const doHide = () => {\r\n      clearTimeout(hideTimeoutRef.current)\r\n      setIsShowing(false)\r\n      setStoredData(null)\r\n      onClose?.()\r\n    }\r\n    if (exitAnimation !== 'none') waitAnimation().then(doHide)\r\n    else doHide()\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (show) {\r\n      setIsShowing(true)\r\n      data && setStoredData(data)\r\n      if (!permanent) {\r\n        hideTimeoutRef.current = setTimeout(\r\n          () => AlertManager.hide(name),\r\n          timeout\r\n        )\r\n      }\r\n    } else if (isShowing) {\r\n      handleHide()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [show])\r\n\r\n  if (!isShowing) return null\r\n\r\n  const processedChildren = (typeof children === 'function'\r\n    ? children(storedData)\r\n    : children) as ReactElement | ReactElement[] | string\r\n\r\n  const Snack = (\r\n    <Container\r\n      id={id || name}\r\n      noStyle={noStyle}\r\n      animation={show ? enterAnimation || fadeIn() : exitAnimation || fadeOut()}\r\n      animationDuration={animationDuration}\r\n      animationTimingFunction={animationTimingFunction(show)}\r\n      show={show}\r\n      containerCSS={containerCSS}\r\n      position={position}\r\n      onClick={onClick}\r\n      role=\"alert\"\r\n      variant={variant}\r\n    >\r\n      {Children.map(processedChildren, (child) => {\r\n        if (!child) return child\r\n\r\n        // @ts-ignore\r\n        if (isValidElement(child) && child.type.name === Dismissable.name) {\r\n          return (\r\n            <InnerDismissable name={name}>\r\n              <span>{child.props.children}</span>\r\n            </InnerDismissable>\r\n          )\r\n        }\r\n        return child\r\n      })}\r\n    </Container>\r\n  )\r\n\r\n  if (position)\r\n    return ReactDOM.createPortal(Snack, document.querySelector('body')!)\r\n\r\n  return Snack\r\n}\r\n\r\nconst Container = styled.div<{\r\n  animation: Keyframes | 'none'\r\n  noStyle: boolean\r\n  animationDuration: number\r\n  show: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  animationTimingFunction: string\r\n  position?: AllowedPositions\r\n  onClick?: () => void\r\n  variant?: AlertProps['variant']\r\n}>`\r\n  ${({\r\n    noStyle,\r\n    animation,\r\n    animationDuration,\r\n    show,\r\n    containerCSS,\r\n    animationTimingFunction,\r\n    position,\r\n    onClick,\r\n    variant,\r\n  }) => {\r\n    const animationProps = css`\r\n      animation: ${animation} ${animationDuration}s ${animationTimingFunction};\r\n      opacity: ${show ? 1 : 0};\r\n    `\r\n\r\n    const variantCss = variant\r\n      ? variant === 'success'\r\n        ? SuccessVariant\r\n        : FailureVariant\r\n      : ''\r\n\r\n    return noStyle\r\n      ? css`\r\n          ${animationProps}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n      : css`\r\n          box-sizing: border-box;\r\n          border-radius: 4px;\r\n          background-color: #333;\r\n          color: #eee;\r\n          padding: 15px 20px;\r\n          width: fit-content;\r\n          display: inline-block;\r\n          cursor: ${onClick ? 'pointer' : 'initial'};\r\n          ${animationProps}\r\n          ${variantCss}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n  }}\r\n`\r\n\r\nconst SuccessVariant = css`\r\n  background: #444;\r\n  border-bottom: #28a745 5px solid;\r\n  height: 76px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst FailureVariant = css`\r\n  ${SuccessVariant}\r\n  border-bottom: ${({ theme }) => theme.text.colors.error} 5px solid;\r\n`\r\n","import { useContext } from \"react\";\r\nimport { AlertContext } from \"./Provider\";\r\n\r\nexport const useAlerts = () => {\r\n  const { AlertManager } = useContext(AlertContext);\r\n\r\n  return { AlertManager };\r\n};\r\n","export const isToday = (date: number) => {\r\n  const inputDate = new Date(date)\r\n  const todaysDate = new Date()\r\n\r\n  return inputDate.setHours(0, 0, 0, 0) === todaysDate.setHours(0, 0, 0, 0)\r\n}\r\n\r\nexport const inferTerritory = (path: string) =>\r\n  (path.startsWith('/') ? path.slice(1) : path).split('/')[0]\r\n\r\nexport const stripTerritory = (path: string): string =>\r\n  (path.startsWith('/') ? path.slice(1) : path).split('/').slice(1).join('/')\r\n","type Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\r\n\r\nconst sizes: Record<Size, string> = {\r\n  xs: '0px',\r\n  sm: '500px',\r\n  md: '960px',\r\n  lg: '1150px',\r\n  xl: '1920px',\r\n}\r\n\r\nconst theme = (darkMode: boolean) => ({\r\n  darkMode,\r\n  navbarHeight: 56,\r\n  text: {\r\n    colors: {\r\n      secondary: '#999',\r\n      error: '#ff5e5e',\r\n      green: '#28a745',\r\n      blue: '#2000d4',\r\n      black: '#222',\r\n      white: '#fff',\r\n      lightgreen: 'lightgreen',\r\n      info: '#007bff',\r\n      red: '#dc3545',\r\n      yellow: 'gold',\r\n    },\r\n  },\r\n  breakpoints: {\r\n    up: (size: Size): string => `@media (min-width: ${sizes[size]})`,\r\n    down: (size: Size): string => `@media (max-width: ${sizes[size]})`,\r\n    between: (from: Size, to: Size): string =>\r\n      `@media (min-width: ${sizes[from]}) and (max-width: ${sizes[to]})`,\r\n  },\r\n})\r\n\r\nexport type Theme = ReturnType<typeof theme>\r\n\r\nexport { theme }\r\n","import React from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useConfig } from 'hooks'\r\nimport { theme } from './theme'\r\n\r\nconst Provider: React.FC = ({ children }) => {\r\n  const { darkModeEnabled } = useConfig()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme(darkModeEnabled)}>{children}</ThemeProvider>\r\n  )\r\n}\r\n\r\nexport { Provider as ThemeProvider }\r\n","import React, { lazy, Suspense, useEffect, useLayoutEffect } from 'react'\r\nimport {\r\n  BrowserRouter as RouterProvider,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\nimport { Redirect, RouteProps, useHistory, useLocation } from 'react-router'\r\nimport { ThemeProvider } from 'theme'\r\nimport { ContextProviders } from 'contexts'\r\nimport { useAuth, useConfig, useFetch } from 'hooks'\r\nimport { ErrorDisplay, Layout, Spinner, TerritoryVerifier } from './components'\r\nimport './app.css'\r\nimport { usePreviousValue } from 'hooks/utils'\r\n\r\nconst AdminPanel = lazy(() => import('./features/AdminPanel'))\r\nconst Login = lazy(() => import('./features/Login'))\r\nconst Telefonica = lazy(() => import('./features/Telefonica'))\r\nconst StatisticsPanel = lazy(() => import('./features/StatisticsPanel'))\r\nconst AddPhones = lazy(() => import('./features/AddPhones'))\r\nconst AddNewPhones = lazy(() => import('./features/AddPhones/AddNewPhones'))\r\nconst ImportPhones = lazy(() => import('./features/AddPhones/Import'))\r\nconst SearchAndEdit = lazy(() => import('./features/SearchAndEdit'))\r\nconst Configurations = lazy(() => import('./features/Configurations'))\r\nconst Passwords = lazy(() => import('./features/Passwords'))\r\nconst ManageTerritories = lazy(() => import('./features/ManageTerritories'))\r\n\r\ninterface ProtectedRouteProps extends RouteProps {\r\n  condition: boolean\r\n  fallbackURL: string\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  component,\r\n  condition,\r\n  fallbackURL,\r\n  ...restProps\r\n}) =>\r\n  condition ? (\r\n    <Route {...restProps} component={component} />\r\n  ) : (\r\n    <Redirect to={fallbackURL} />\r\n  )\r\n\r\nconst WithTerritoryVerifier: React.FC<{\r\n  children: (t: string) => React.ReactNode\r\n}> = ({ children }) => (\r\n  <Route\r\n    path=\"/:territory\"\r\n    render={({ match }) => (\r\n      <TerritoryVerifier territory={match.params.territory}>\r\n        {children(match.params.territory)}\r\n      </TerritoryVerifier>\r\n    )}\r\n  />\r\n)\r\n\r\nconst MainRouter: React.FC = () => {\r\n  const { isAuth, isAdmin } = useAuth()\r\n  const {\r\n    configsLoading,\r\n    configsError,\r\n    getConfigs,\r\n    configurations,\r\n    testModeEnabled,\r\n  } = useConfig()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const returnTo = new URLSearchParams(window.location.search).get('returnTo')\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isAuth && !location.pathname.includes('/login'))\r\n      history.push(`/login?returnTo=${window.location.pathname}`)\r\n    if (\r\n      isAuth &&\r\n      (location.pathname.includes('/login') || location.pathname === '/')\r\n    )\r\n      isAdmin\r\n        ? history.push(returnTo ?? '/base/admin-panel')\r\n        : history.push(returnTo ?? '/base/telefonica')\r\n  }, [isAuth, isAdmin, location.pathname, history, returnTo])\r\n\r\n  const prevTestModeEnabled = usePreviousValue(testModeEnabled)\r\n\r\n  useEffect(() => {\r\n    if (isAuth && (!configurations || testModeEnabled !== prevTestModeEnabled))\r\n      getConfigs(Fetch)\r\n  }, [\r\n    isAuth,\r\n    Fetch,\r\n    getConfigs,\r\n    configurations,\r\n    testModeEnabled,\r\n    prevTestModeEnabled,\r\n  ])\r\n\r\n  if (isAuth && configsLoading && !configurations)\r\n    return <Spinner container fulfill />\r\n\r\n  if (configsError) return <ErrorDisplay />\r\n\r\n  return (\r\n    <Suspense fallback={<Spinner container fulfill />}>\r\n      <Switch>\r\n        {/* Common */}\r\n        <Route path=\"/login\" exact component={Login} />\r\n\r\n        <WithTerritoryVerifier>\r\n          {(territory) => (\r\n            <Switch>\r\n              {/* User */}\r\n              <ProtectedRoute\r\n                path=\"/:territory/telefonica\"\r\n                component={Telefonica}\r\n                condition={isAuth}\r\n                fallbackURL={`/${territory}/login`}\r\n              />\r\n\r\n              {/* Admin */}\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel\"\r\n                exact\r\n                component={AdminPanel}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/statistics\"\r\n                exact\r\n                component={StatisticsPanel}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/add-phones\"\r\n                exact\r\n                component={AddPhones}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/add-phones/new-list\"\r\n                exact\r\n                component={AddNewPhones}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/add-phones/import\"\r\n                exact\r\n                component={ImportPhones}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/search-and-edit\"\r\n                exact\r\n                component={SearchAndEdit}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/configurations\"\r\n                exact\r\n                component={Configurations}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/passwords\"\r\n                exact\r\n                component={Passwords}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/:territory/admin-panel/territories\"\r\n                exact\r\n                component={ManageTerritories}\r\n                condition={isAdmin}\r\n                fallbackURL={`/${territory}/telefonica`}\r\n              />\r\n              <Redirect to={`/${territory}/admin-panel`} />\r\n            </Switch>\r\n          )}\r\n        </WithTerritoryVerifier>\r\n\r\n        {/* Misc */}\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nconst App: React.FC = () => (\r\n  <ContextProviders>\r\n    <ThemeProvider>\r\n      <RouterProvider>\r\n        <Layout>\r\n          <MainRouter />\r\n        </Layout>\r\n      </RouterProvider>\r\n    </ThemeProvider>\r\n  </ContextProviders>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}