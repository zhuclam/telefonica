{"version":3,"sources":["types/index.ts","contexts/config.tsx","consts/index.ts","hooks/useConfig.ts","hooks/useAuth.ts","services/Fetch.ts","services/PhoneStorage.ts","hooks/utils/useRerender.ts","components/Navbar.tsx","hooks/utils/useOnClickOutside.ts","components/TestingLabel.tsx","components/Layout.tsx","components/Spinner.tsx","components/ErrorDisplay.tsx","components/Alert/useAlertInner.ts","components/Alert/Provider.tsx","components/Alert/animations.ts","components/Alert/utils.ts","components/Alert/Dismissable.tsx","components/Alert/Alert.tsx","components/Alert/useAlerts.ts","components/Breadcrumb.tsx","components/Switch.tsx","components/ConfirmationModal.tsx","hooks/utils/useThrottle.ts","hooks/usePhoneStorage.ts","hooks/utils/useReactive.ts","hooks/useFetch.ts","contexts/auth.tsx","contexts/index.tsx","theme/theme.ts","theme/provider.tsx","features/Login/Login.tsx","features/Telefonica/components/PhoneLink.tsx","features/Telefonica/components/PhoneOptions.tsx","features/Telefonica/components/PhoneDetails.tsx","features/Telefonica/components/HelpSection.tsx","features/Telefonica/components/PhonesInStorage.tsx","utils/index.ts","features/Telefonica/Telefonica.tsx","features/AdminPanel/AdminPanel.tsx","features/StatisticsPanel/StatisticsPanel.tsx","features/AddPhones/styles.tsx","features/AddPhones/utils.ts","features/AddPhones/components/EntryData.tsx","features/AddPhones/components/Review.tsx","features/AddPhones/components/Result.tsx","features/AddPhones/AddPhones.tsx","features/SearchAndEdit/components/SearchForm.tsx","features/SearchAndEdit/components/SearchResult.tsx","features/SearchAndEdit/components/EditPhone.tsx","features/SearchAndEdit/SearchAndEdit.tsx","features/Configurations/Configurations.tsx","App.tsx","index.tsx"],"names":["Feedback","CampaignFeedback","ConfigContext","createContext","ConfigProvider","children","configValue","useConfig","Provider","value","useState","localStorage","getItem","darkModeEnabled","setDarkModeEnabled","advancedModeEnabled","setAdvancedModeEnabled","testModeEnabled","setTestModeEnabled","configurations","setConfigurations","configsLoading","setConfigsLoading","configsError","setConfigsError","toggleDarkMode","checked","setItem","removeItem","toggleAdvancedMode","toggleTestMode","getConfigs","useCallback","Fetch","a","get","err","configs","updateConfigs","LOCAL_STORAGE","colors","0","1","2","3","4","5","6","labels","UNANSWERED","ANSWERED","NON_EXISTENT","NO_CALL","ANSWERING_MACHINE","POSTPONE","IGNORE","useContext","useAuth","AuthContext","isTest","useToken","token","console","warn","this","url","method","body","URL","path","params","composeQueryParams","test","URI","options","JSON","stringify","decamelizeKeys","undefined","headers","Authorization","fetch","request","ok","contentType","includes","json","text","response","data","camelizeKeys","query","Object","keys","map","k","encodeURIComponent","join","doRequest","generateFetchParams","PhoneStorage","phonesStorageKey","phones","parse","phone","getAll","find","p","id","length","popped","shift","push","newStatus","toUpdate","status","restore","lastStatus","useRerender","setDummy","forceUpdate","Navbar","ref","handler","collapsed","setCollapsed","mobileNavRef","useRef","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","toggleNavbar","AlertManager","useAlerts","isAuth","isAdmin","doLogout","onLinkClicked","name","position","color","dark","Container","NavbarBrand","className","process","Version","NavbarToggler","onClick","Collapse","isOpen","navbar","MobileNav","NavItem","label","onChange","show","hide","LinkSection","RouterLink","to","background","ButtonContainer","Button","styled","small","theme","secondary","Nav","div","NavLink","Link","darkMode","lightgreen","info","noPadding","TestingLabel","TestingLabelContainer","Layout","Helmet","darkStyles","variant","Spinner","fulfill","container","SpinnerContainer","Math","floor","random","style","width","height","css","navbarHeight","ErrorDisplay","ErrorContainer","error","emptyState","timeout","permanent","AlertContext","AlertProvider","alertValue","state","setState","showHandler","opts","hideHandler","hideAllHandler","getByName","useMemo","hideAll","useAlertInner","popUp","isDesktop","keyframes","popDown","popUpCentered","popDownCentered","getPositionalCSS","animationDuration","commonPositionalStyle","getDesktopScackbarAnimation","getMobileSnackbarStyle","endsWith","pd","pu","startsWith","enter","exit","breakpoints","down","Dismissable","InnerDismissable","dismiss","cloneElement","Alert","onClose","enterAnimation","exitAnimation","animationTimingFunction","noStyle","containerCSS","isShowing","setIsShowing","storedData","setStoredData","hideTimeoutRef","handleHide","doHide","clearTimeout","Promise","r","setTimeout","then","useLayoutEffect","processedChildren","Snack","animation","role","Children","child","isValidElement","type","props","ReactDOM","createPortal","querySelector","animationProps","variantCss","SuccessVariant","FailureVariant","Breadcrumb","items","index","title","linkTo","BreadcrumbItem","active","Switch","SwitchContainer","split","e","htmlFor","useConfirmationModal","isModalOpen","setIsModalOpen","toggleModal","reset","setData","askEditConfirmation","ConfirmationModal","onConfirm","buttonColor","confirmationLabel","Modal","centered","toggle","ModalHeader","ModalBody","ModalFooter","useThrottle","cb","timeoutRef","readyRef","usePhoneStorage","reactive","returnData","useReactive","PhoneStorageConstructor","bind","add","update","useFetch","AuthProvider","authValue","setIsAuth","setIsAdmin","isLoading","setIsLoading","doLogin","username","password","post","accessToken","ContextProviders","sizes","xs","sm","md","lg","xl","green","blue","black","white","red","up","size","between","from","Login","setUsername","setPassword","submit","onKeyDown","key","Jumbotron","fluid","FormGroup","Label","for","Input","PhoneLink","touchedCount","setTouchedCount","textDecoration","href","Array","fill","_","PhoneOptions","phoneId","initialNoCallOnWeekends","showPhoneOptions","setShowPhoneOptions","noCallOnWeekends","setNoCallOnWeekends","handleOptionChanged","option","newVal","revert","backendValue","put","PhoneOptionsContainer","PhoneDetails","comments","handleComments","openHelpSection","handlePhoneFeedback","campaignMode","isAllowed","f","hiddenButtons","toString","feedbackToConfirm","handleGeneric","feedback","handleAnswered","handleUnanswered","handleNonExistent","handleNoCall","handleAnsweringMachine","handlePostpone","handleIgnore","DesktopTable","answeredOn","unansweredDate","fulfilledOn","MobileTable","fontWeight","helpButton","MiniSection","HelpButton","CommentsSection","autoFocus","placeholder","readOnly","commentedOn","answeringMachineDate","ButtonGroup","block","RUSHED","noWeekends","input","button","HelpSection","close","unansweredMaxAttemps","answeringMachineMaxAttemps","answeringMachinePostponedDays","postponedButtonDays","nonExistentPostponedDays","PhonesInStorage","currentPhoneId","onEditRequest","storagePhoneToConfirm","onAskEditConfirmation","rows","reverse","i","phoneIsFromToday","date","inputDate","Date","todaysDate","setHours","isToday","savedOn","statusLabel","isCollapsed","handleCollapsed","CollapseButtons","filter","Table","responsive","Telefonica","setPhone","setError","setComments","fetchPhone","newPhone","now","original","log","onFeedback","answered","storagePhone","sendFeedback","editNumber","history","useHistory","closeHelpSection","goBack","c","exact","render","component","AdminPanel","Item","breadcrumbItems","StatisticsPanel","fetchData","statistics","generalData","perMonthData","perDayData","formatDecimals","n","toFixed","totalNumbers","noCall","nonExistent","months","row","total","different","inexistent","totalValidNumbers","totalCalls","round","Title","h1","Description","Buttons","getRandomNumber","parseInt","slice","LineIndicator","forwardRef","lines","LineIndicatorContainer","EntryData","onNextStep","handleSetEntrydata","numbers","setNumbers","additional","setAdditional","numberLineIndicatorRef","additionalLineIndicatorRef","handleIndicatorsScroll","scrollTop","scroll","onNumberScroll","onAdditionalScroll","numberLines","additionalLines","missing","difference","abs","repeat","pending","pop","haveSameAmountOfLines","haveEmptyNumberLines","some","line","trim","disableNextStep","splice","generateRandomNumber","names","randomName","randomAddress","randomNumber","generateRandomInfo","prev","Row","Col","TextArea","onScroll","Validations","Rule","valid","number","disabled","ul","textarea","span","Review","entryData","onGoBack","Info","outline","Result","onAddMore","onBackToAdminPanel","successCount","failureCount","AddPhones","step","setStep","setEntryData","serverResponse","setServerResponse","handleConfirm","FailAlertCss","Error","delocalizeDateString","SearchForm","onSearch","useForm","mode","register","handleSubmit","errors","setValue","getValues","formState","isDirty","isSubmitting","isValid","Form","onSubmit","calledOn","filters","innerRef","autoComplete","pattern","check","SearchResult","entries","onDeleteRequest","striped","Thead","Tbody","PhoneCell","postponedDays","Boolean","ActionCell","thead","tbody","td","EditPhone","onBack","onUpdated","defaultValues","onSaveEdition","formData","updatedPhone","validate","d","SearchAndEdit","searchResult","setSearchResult","editingPhone","setEditingPhone","isDeleting","setIsDeleting","idToDelete","resetConfirmationModal","handleSearch","v","reduce","acc","confirmDeletion","delete","phoneToDelete","translations","FeedbackValues","values","x","Configurations","curr","saveConfig","payload","match","campaignModeActive","CampaignLabel","DummyComponent","ProtectedRoute","condition","restProps","MainRouter","location","useLocation","pathname","App","getElementById"],"mappings":"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","file":"static/js/main.aa37d6e9.chunk.js","sourcesContent":["export enum Feedback {\r\n  UNANSWERED = 0,\r\n  ANSWERED = 1,\r\n  NON_EXISTENT = 2,\r\n  NO_CALL = 3,\r\n  ANSWERING_MACHINE = 4,\r\n  POSTPONE = 5,\r\n  IGNORE = 6,\r\n}\r\n\r\nexport enum CampaignFeedback {\r\n  RUSHED = 7,\r\n}\r\n\r\nexport type FeedbackExtended = Feedback | CampaignFeedback\r\n\r\nexport interface Phone {\r\n  answeredOn: null | string\r\n  answeringMachineDate: null | string\r\n  comments: string\r\n  commentedOn: null | string\r\n  info: string | null\r\n  fulfilledOn: null | string\r\n  id: number\r\n  noCall: boolean\r\n  nonExistent: boolean\r\n  postponedDays: number\r\n  phone: string\r\n  unansweredCount: number\r\n  unansweredDate: null | string\r\n  noWeekends: boolean\r\n}\r\n\r\nexport type OriginalData = Pick<\r\n  Phone,\r\n  | 'answeredOn'\r\n  | 'fulfilledOn'\r\n  | 'noCall'\r\n  | 'nonExistent'\r\n  | 'postponedDays'\r\n  | 'unansweredCount'\r\n  | 'unansweredDate'\r\n>\r\n\r\nexport interface StoragePhone {\r\n  id: Phone['id']\r\n  status: null | Feedback\r\n  phone: Phone['phone']\r\n  savedOn: number\r\n  restore: OriginalData & {\r\n    lastStatus: null | Feedback\r\n  }\r\n}\r\n\r\nexport interface PhoneOptionsType {\r\n  callOnWeekends: boolean\r\n}\r\n\r\nexport interface Configurations {\r\n  campaignMode: boolean\r\n  unansweredMaxAttemps: number\r\n  answeringMachineMaxAttemps: number\r\n  answeringMachinePostponedDays: number\r\n  postponedButtonDays: number\r\n  nonExistentPostponedDays: number\r\n  hiddenButtons: string\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  FunctionComponent,\r\n  useCallback,\r\n} from 'react'\r\nimport { useFetch } from 'hooks'\r\nimport { Configurations } from 'types'\r\n\r\ninterface ConfigType {\r\n  darkModeEnabled: boolean\r\n  advancedModeEnabled: boolean\r\n  testModeEnabled: boolean\r\n  configurations: Configurations\r\n  configsLoading: boolean\r\n  configsError: boolean\r\n  toggleDarkMode: (checked: boolean) => void\r\n  toggleAdvancedMode: (checked: boolean) => void\r\n  toggleTestMode: (checked: boolean) => void\r\n  getConfigs: (Fetch: ReturnType<typeof useFetch>) => Promise<void>\r\n  updateConfigs: (configs: Configurations) => void\r\n}\r\n\r\nexport const ConfigContext = createContext<ConfigType>({} as ConfigType)\r\n\r\nexport const ConfigProvider: FunctionComponent = ({ children }) => {\r\n  const configValue = useConfig()\r\n\r\n  return (\r\n    <ConfigContext.Provider value={configValue}>\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useConfig = (): ConfigType => {\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('dark-mode')\r\n  )\r\n  const [advancedModeEnabled, setAdvancedModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('advanced-mode')\r\n  )\r\n  const [testModeEnabled, setTestModeEnabled] = useState<boolean>(\r\n    !!localStorage.getItem('test-mode')\r\n  )\r\n\r\n  const [configurations, setConfigurations] = useState<\r\n    Configurations | undefined\r\n  >()\r\n  const [configsLoading, setConfigsLoading] = useState<boolean>(true)\r\n  const [configsError, setConfigsError] = useState<boolean>(false)\r\n\r\n  const getConfigs = useCallback(async (Fetch: ReturnType<typeof useFetch>) => {\r\n    try {\r\n      setConfigsLoading(true)\r\n      const [err, configs] = await Fetch().get<{ configs: Configurations }>(\r\n        '/configurations'\r\n      )\r\n\r\n      if (err) throw err\r\n\r\n      setConfigurations(configs.configs)\r\n      setConfigsError(false)\r\n    } catch {\r\n      setConfigsError(true)\r\n    } finally {\r\n      setConfigsLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const updateConfigs = (configs: Configurations) => setConfigurations(configs)\r\n\r\n  const toggleDarkMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('dark-mode', '1')\r\n      : localStorage.removeItem('dark-mode')\r\n    setDarkModeEnabled(checked)\r\n  }\r\n\r\n  const toggleAdvancedMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('advanced-mode', '1')\r\n      : localStorage.removeItem('advanced-mode')\r\n    setAdvancedModeEnabled(checked)\r\n  }\r\n\r\n  const toggleTestMode = (checked: boolean) => {\r\n    checked\r\n      ? localStorage.setItem('test-mode', '1')\r\n      : localStorage.removeItem('test-mode')\r\n    setTestModeEnabled(checked)\r\n  }\r\n\r\n  return {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    configurations: configurations!,\r\n    configsLoading,\r\n    configsError,\r\n    toggleDarkMode,\r\n    toggleAdvancedMode,\r\n    toggleTestMode,\r\n    getConfigs,\r\n    updateConfigs,\r\n  }\r\n}\r\n","import { Feedback } from 'types'\r\n\r\nexport const backendURL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'https://telefonicatesting.pythonanywhere.com/'\r\n    : '/'\r\n\r\nexport const LOCAL_STORAGE = {\r\n  TOKEN: 'token',\r\n  IS_ADMIN: 'is_admin',\r\n}\r\n\r\nexport const colors = {\r\n  0: 'danger',\r\n  1: 'success',\r\n  2: 'dark',\r\n  3: 'warning',\r\n  4: 'primary',\r\n  5: 'info',\r\n  6: 'secondary',\r\n}\r\n\r\nexport const labels: Record<Feedback, string> = {\r\n  [Feedback.UNANSWERED]: 'No en casa',\r\n  [Feedback.ANSWERED]: 'Atendió',\r\n  [Feedback.NON_EXISTENT]: 'No existe',\r\n  [Feedback.NO_CALL]: 'No visitar',\r\n  [Feedback.ANSWERING_MACHINE]: 'Contestador',\r\n  [Feedback.POSTPONE]: 'Aplazar',\r\n  [Feedback.IGNORE]: 'Ignorar',\r\n}\r\n","import { useContext } from 'react'\r\nimport { ConfigContext } from 'contexts'\r\n\r\nexport const useConfig = () => useContext(ConfigContext)\r\n","import { AuthContext } from 'contexts'\r\nimport { useContext } from 'react'\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n","import { backendURL, LOCAL_STORAGE } from 'consts'\r\nimport { camelizeKeys, decamelizeKeys } from 'humps'\r\n\r\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'\r\n\r\ntype ReturnStatement<T> = [Record<string, unknown> | null, T]\r\n\r\ntype URLObject =\r\n  | string\r\n  | {\r\n      path: string\r\n      params: Record<string, string>\r\n    }\r\n\r\nclass Fetch {\r\n  private token: string\r\n  private useToken: boolean\r\n  private isTest: boolean\r\n\r\n  constructor(isTest: boolean, useToken: boolean) {\r\n    const token = localStorage.getItem(LOCAL_STORAGE.TOKEN) ?? ''\r\n    if (useToken && !token)\r\n      console.warn(\r\n        'Warning, trying to use token when there is none in storage.'\r\n      )\r\n\r\n    this.token = token\r\n    this.useToken = useToken\r\n    this.isTest = isTest\r\n  }\r\n\r\n  private generateFetchParams(\r\n    url: URLObject,\r\n    method: Method = 'GET',\r\n    body?: object\r\n  ) {\r\n    const URL: string = typeof url === 'string' ? url : url.path\r\n\r\n    const params: string = `${this.composeQueryParams({\r\n      ...(typeof url !== 'string' ? url.params : {}),\r\n      ...(this.isTest ? { test: '1' } : {}),\r\n    })}`\r\n\r\n    const URI = `${backendURL}${URL}${params}`\r\n    const options = {\r\n      method,\r\n      body: body ? JSON.stringify(decamelizeKeys(body)) : undefined,\r\n      headers: {\r\n        Authorization: this.useToken ? `Bearer ${this.token}` : undefined,\r\n        'content-type': 'application/json',\r\n      },\r\n    }\r\n    return [URI, options] as [string, Parameters<typeof window.fetch>[1]]\r\n  }\r\n\r\n  private async doRequest<T>(\r\n    fetch: ReturnType<typeof window.fetch>\r\n  ): Promise<ReturnStatement<T>> {\r\n    try {\r\n      const request = await fetch\r\n      if (!request.ok) throw request\r\n      const contentType = request.headers.get('content-type')\r\n      const response = contentType?.includes('application/json')\r\n        ? await request.json()\r\n        : await request.text()\r\n      const data = response && camelizeKeys(response)\r\n      if (process.env.NODE_ENV === 'development') console.log('response', data)\r\n      return ([null, data] as unknown) as ReturnStatement<T>\r\n    } catch (error) {\r\n      console.warn('Fetching error:', error)\r\n      return ([error, null] as unknown) as ReturnStatement<T>\r\n    }\r\n  }\r\n\r\n  private composeQueryParams(params: Record<string, string>): string {\r\n    const query = Object.keys(params)\r\n      .map((k) => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\r\n      .join('&')\r\n    return query && '?' + query\r\n  }\r\n\r\n  async get<T>(url: URLObject): Promise<ReturnStatement<T>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url)))\r\n  }\r\n\r\n  async post<Payload extends object, Response>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'POST', body)))\r\n  }\r\n\r\n  async put<Payload extends object, Response = undefined>(\r\n    url: URLObject,\r\n    body: Payload\r\n  ): Promise<ReturnStatement<Response>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'PUT', body)))\r\n  }\r\n\r\n  async delete<T = void>(url: URLObject): Promise<ReturnStatement<T>> {\r\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'DELETE')))\r\n  }\r\n}\r\n\r\nexport { Fetch }\r\n","import { Feedback, StoragePhone } from 'types'\r\n\r\nclass PhoneStorage {\r\n  private phonesStorageKey: string\r\n\r\n  constructor(isTest: boolean) {\r\n    this.phonesStorageKey = 'phones' + (isTest ? '_test' : '')\r\n  }\r\n\r\n  public getAll(): StoragePhone[] {\r\n    const phones = localStorage.getItem(this.phonesStorageKey)\r\n    return phones ? JSON.parse(phones) : []\r\n  }\r\n\r\n  public add(phone: StoragePhone): StoragePhone | null {\r\n    const phones = this.getAll()\r\n    if (phones.find((p) => p.id === phone.id)) return null\r\n\r\n    // TODO: maybe max number should come from backend\r\n    if (phones.length >= 6) {\r\n      const popped = phones.shift()\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return popped ?? null\r\n    } else {\r\n      phones.push(phone)\r\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n      return null\r\n    }\r\n  }\r\n\r\n  public update(id: number, newStatus: Feedback) {\r\n    const phones = this.getAll()\r\n    const toUpdate = phones.find((p) => p.id === id)\r\n    if (!toUpdate) return\r\n    toUpdate.status = newStatus\r\n    toUpdate.restore.lastStatus = newStatus\r\n    localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\r\n  }\r\n}\r\n\r\nexport { PhoneStorage }\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useRerender = () => {\r\n  const [, setDummy] = useState<any>()\r\n  const forceUpdate = useCallback(() => {\r\n    const newRef = {}\r\n    setDummy(newRef)\r\n  }, [])\r\n  return { forceUpdate }\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar as BNavbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n} from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth, useConfig } from 'hooks'\r\nimport { useOnClickOutside } from 'hooks/utils'\r\nimport { Alert, useAlerts, Switch } from '.'\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [collapsed, setCollapsed] = useState(true)\r\n  const mobileNavRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useOnClickOutside(mobileNavRef, () => !collapsed && setCollapsed(true))\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const {\r\n    darkModeEnabled,\r\n    advancedModeEnabled,\r\n    testModeEnabled,\r\n    toggleAdvancedMode,\r\n    toggleDarkMode,\r\n    toggleTestMode,\r\n  } = useConfig()\r\n\r\n  const { isAuth, isAdmin, doLogout } = useAuth()\r\n\r\n  const onLogout = () => {\r\n    doLogout()\r\n    onLinkClicked()\r\n  }\r\n\r\n  const onLinkClicked = () => toggleNavbar()\r\n\r\n  const onTestModeClick = (checked: boolean) => {\r\n    checked\r\n      ? AlertManager.show('test-mode-alert')\r\n      : AlertManager.hide('test-mode-alert')\r\n    toggleTestMode(checked)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"test-mode-alert\" position=\"bottom\">\r\n        En el modo de prueba, todo funciona con un duplicado de la app real.\r\n      </Alert>\r\n      <div ref={mobileNavRef}>\r\n        <BNavbar color=\"dark\" dark>\r\n          <Container>\r\n            <NavbarBrand className=\"mr-auto\">\r\n              {process.env.REACT_APP_CONG_INITIALS} Telefónica{' '}\r\n              <Version>v{process.env.REACT_APP_VERSION}</Version>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n            <Collapse isOpen={!collapsed} navbar>\r\n              <MobileNav navbar>\r\n                <NavItem>\r\n                  <Switch\r\n                    label=\"Modo oscuro\"\r\n                    checked={darkModeEnabled}\r\n                    onChange={toggleDarkMode}\r\n                  />\r\n                </NavItem>\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo avanzado\"\r\n                      checked={advancedModeEnabled}\r\n                      onChange={toggleAdvancedMode}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <NavItem>\r\n                    <Switch\r\n                      label=\"Modo de prueba\"\r\n                      checked={testModeEnabled}\r\n                      onChange={onTestModeClick}\r\n                    />\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin && (\r\n                  <LinkSection>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink to=\"/admin-panel\" background=\"dark\">\r\n                        Ir al Panel de administración\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                    <NavItem onClick={onLinkClicked}>\r\n                      <RouterLink to=\"/telefonica\" background=\"dark\">\r\n                        Ir a Telefónica\r\n                      </RouterLink>\r\n                    </NavItem>\r\n                  </LinkSection>\r\n                )}\r\n                {isAuth && (\r\n                  <NavItem>\r\n                    <ButtonContainer>\r\n                      <Button onClick={onLogout}>Cerrar sesión</Button>\r\n                    </ButtonContainer>\r\n                  </NavItem>\r\n                )}\r\n              </MobileNav>\r\n            </Collapse>\r\n          </Container>\r\n        </BNavbar>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Version = styled.small`\r\n  color: ${({ theme }) => theme.text.colors.secondary};\r\n`\r\n\r\nconst MobileNav = styled(Nav)`\r\n  justify-content: right;\r\n  text-align: right;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n`\r\n\r\nconst Button = styled(NavLink)`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n`\r\n\r\nconst RouterLink = styled(Link)<{ noPadding?: boolean; background?: 'dark' }>`\r\n  color: ${({ theme, background }) =>\r\n    background === 'dark' || theme.darkMode\r\n      ? theme.text.colors.lightgreen\r\n      : theme.text.colors.info};\r\n  display: inline-block;\r\n  padding: ${({ noPadding }) => (noPadding ? 0 : 0.5)}rem 0rem;\r\n`\r\n\r\nconst LinkSection = styled.div`\r\n  border-top: 1px solid gray;\r\n`\r\n\r\nexport { Navbar, RouterLink }\r\n","import { useEffect, RefObject } from 'react'\r\n\r\ntype Event = MouseEvent | TouchEvent\r\n\r\nconst useOnClickOutside = <T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: Event) => void\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: Event) => {\r\n      const el = ref?.current\r\n      if (!el || el.contains((event?.target as Node) || null)) {\r\n        return\r\n      }\r\n      handler(event)\r\n    }\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\nexport { useOnClickOutside }\r\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TestingLabel: React.FC = () => (\n  <TestingLabelContainer>\n    <span>Modo de Prueba</span>\n  </TestingLabelContainer>\n)\n\nconst TestingLabelContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n  background: darkred;\n  color: white;\n  padding: 5px 10px;\n  border-top: 2px solid orange;\n  border-bottom: 2px solid orange;\n  width: 400px;\n  text-align: center;\n  transform: rotate(-45deg) translateX(-185px) translateY(73px);\n  transform-origin: left;\n`\n\nexport { TestingLabel }\n","import React from 'react'\r\nimport { useConfig } from 'hooks'\r\nimport { Alert } from '.'\r\nimport { Navbar } from './Navbar'\r\nimport { TestingLabel } from './TestingLabel'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  const { testModeEnabled, darkModeEnabled } = useConfig()\r\n\r\n  return (\r\n    <>\r\n      {darkModeEnabled && <Helmet>{darkStyles}</Helmet>}\r\n      {testModeEnabled && <TestingLabel />}\r\n      <Navbar />\r\n      {children}\r\n      <Alert name=\"not-so-fast\" position=\"bottom\" variant=\"failure\">\r\n        ¡No tan rápido! No es recomendable tocar un botón tan seguido.\r\n      </Alert>\r\n    </>\r\n  )\r\n}\r\n\r\nconst darkStyles = (\r\n  <style>{`\r\n    body {\r\n      background: #222 !important;\r\n      color: white !important;\r\n    }\r\n\r\n    table {\r\n      color: white !important;\r\n    }\r\n\r\n    .table-striped thead tr {\r\n      background-color: rgba(0,0,0,.95)\r\n    }\r\n\r\n    .table-striped tbody tr:nth-of-type(even) {\r\n      background-color: rgba(0,0,0,.5)\r\n    }\r\n\r\n    .text-secondary {\r\n      color: #999 !important;\r\n    }\r\n\r\n    .modal-content {\r\n      background-color: #222 !important;\r\n    }\r\n\r\n    .close {\r\n      color: white !important;\r\n    }\r\n\r\n    .jumbotron {\r\n      background: #454b4f !important;\r\n    }\r\n\r\n    input {\r\n      border-top-style: hidden;\r\n      border-right-style: hidden;\r\n      border-left-style: hidden;\r\n      border-bottom-style: groove;\r\n      background-color: white;\r\n    }\r\n\r\n    input::placeholder {\r\n      color: #777 !important;\r\n    }\r\n\r\n    .breadcrumb {\r\n      background-color: #333;\r\n    }\r\n\r\n    .breadcrumb-item.active {\r\n      color: #ddd;\r\n    }\r\n`}</style>\r\n)\r\n\r\nexport { Layout }\r\n","import React from 'react'\r\nimport { Spinner as RSSpinner, Container } from 'reactstrap'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst colors = ['success', 'danger', 'warning', 'info']\r\nconst getRandomColor = () => colors[Math.floor(Math.random() * colors.length)]\r\n\r\ninterface SpinnerProps {\r\n  fulfill?: boolean\r\n  container?: boolean\r\n}\r\n\r\nconst Spinner: React.FC<SpinnerProps> = ({\r\n  fulfill = false,\r\n  container = false,\r\n}) => (\r\n  <Container className=\"h-100\">\r\n    <SpinnerContainer\r\n      fulfill={fulfill}\r\n      container={container}\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n    >\r\n      <RSSpinner\r\n        color={getRandomColor()}\r\n        style={{ width: '3rem', height: '3rem' }}\r\n      />\r\n    </SpinnerContainer>\r\n  </Container>\r\n)\r\n\r\nconst SpinnerContainer = styled.div<Required<SpinnerProps>>`\r\n  ${({ fulfill, container, theme }) =>\r\n    fulfill &&\r\n    css`\r\n      width: 100%;\r\n      height: ${container ? `calc(100vh - ${theme.navbarHeight}px)` : '100%'};\r\n    `}\r\n`\r\n\r\nexport { Spinner }\r\n","import React from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst ErrorDisplay: React.FC = () => (\r\n  <ErrorContainer className=\"d-flex justify-content-center align-items-center h-100 text-center\">\r\n    <h4>\r\n      Hubo un problema :( <br /> <br /> Intentá recargando la página.\r\n    </h4>\r\n  </ErrorContainer>\r\n)\r\n\r\nconst ErrorContainer = styled(Container)`\r\n  color: ${({ theme }) => theme.text.colors.error};\r\n`\r\n\r\nexport { ErrorDisplay }\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport {\r\n  NameState,\r\n  ReturnedNameState,\r\n  AlertOptions,\r\n  AlertProviderInterface,\r\n} from \"./types\";\r\n\r\nconst emptyState: ReturnedNameState = {\r\n  timeout: 0,\r\n  data: null,\r\n  show: false,\r\n  permanent: false,\r\n};\r\n\r\nexport const useAlertInner = (): AlertProviderInterface => {\r\n  const [state, setState] = useState<Record<string, NameState | undefined>>({});\r\n\r\n  const showHandler = useCallback((name: string, opts?: AlertOptions) => {\r\n    const { timeout = 4000, data, permanent = false } = opts || {};\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: {\r\n        timeout: timeout || 0,\r\n        data: data || null,\r\n        permanent,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const hideHandler = useCallback((name: string) => {\r\n    setState((state) => ({\r\n      ...state,\r\n      [name]: undefined,\r\n    }));\r\n  }, []);\r\n\r\n  const hideAllHandler = useCallback(() => {\r\n    setState({});\r\n  }, []);\r\n\r\n  const getByName = useCallback(\r\n    (name: string): ReturnedNameState => ({\r\n      show: true,\r\n      ...(state[name] || emptyState),\r\n    }),\r\n    [state]\r\n  );\r\n\r\n  const AlertManager = useMemo(\r\n    () => ({\r\n      show: showHandler,\r\n      hide: hideHandler,\r\n      hideAll: hideAllHandler,\r\n    }),\r\n    [showHandler, hideHandler, hideAllHandler]\r\n  );\r\n\r\n  return {\r\n    AlertManager,\r\n    getByName,\r\n  };\r\n};\r\n","import React, { FunctionComponent, createContext } from \"react\";\r\nimport { AlertProviderInterface } from \"./types\";\r\nimport { useAlertInner } from \"./useAlertInner\";\r\n\r\nexport const AlertContext = createContext<AlertProviderInterface>(\r\n  {} as AlertProviderInterface\r\n);\r\n\r\nexport const AlertProvider: FunctionComponent = ({ children }) => {\r\n  const alertValue = useAlertInner();\r\n\r\n  return (\r\n    <AlertContext.Provider value={alertValue}>{children}</AlertContext.Provider>\r\n  );\r\n};\r\n","import { keyframes } from \"styled-components\";\r\n\r\nexport const fadeIn = () => keyframes`\r\n  from { opacity: 0 }\r\n  to { opacity: 1 }\r\n`;\r\n\r\nexport const fadeOut = () => keyframes`\r\n  from { opacity: 1 }\r\n  to { opacity: 0 }\r\n`;\r\n\r\nexport const popUp = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(0) }\r\n  to { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDown = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translateY(calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translateY(0) }\r\n`;\r\n\r\nexport const popUpCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, 0) }\r\n  to { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n`;\r\n\r\nexport const popDownCentered = (isDesktop = false) => keyframes`\r\n  from { opacity: 1; transform: translate(-50%, calc(${\r\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\r\n  })) }\r\n  to { opacity: 1; transform: translate(-50%, 0) }\r\n`;\r\n\r\nexport const customEnterAnimation = keyframes`\r\n  0% { transform: translateY(calc(-100% + 40px)) translateX(-50%) }\r\n  70% { transform: translateY(calc(-500%)) translateX(-50%) }\r\n  100% { transform: translateY(calc(-300%)) translateX(-50%) }\r\n`;\r\n\r\nexport const customExitAnimation = keyframes`\r\n  0% { transform: translateY(calc(-300%)) translateX(-50%); }\r\n  30% { transform: translateY(calc(-500%)) translateX(-50%); }\r\n  100% { transform: translateY(calc(-100% + 40px)) translateX(-50%); }\r\n`;\r\n","import { css } from 'styled-components'\r\nimport { AllowedPositions } from './types'\r\nimport { popUp, popDown, popUpCentered, popDownCentered } from './animations'\r\n\r\nexport const getPositionalCSS = (\r\n  position: AllowedPositions | undefined,\r\n  show: boolean,\r\n  animationDuration: number\r\n): ReturnType<typeof css> | string => {\r\n  if (!position) return ''\r\n\r\n  switch (position) {\r\n    case 'top':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top-centered', show, animationDuration)}\r\n        top: 10px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n    case 'top-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        left: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'top-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\r\n        top: 10px;\r\n        right: 10px;\r\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation(\r\n          'bottom-centered',\r\n          show,\r\n          animationDuration\r\n        )}\r\n        top: 100vh;\r\n        left: 50%;\r\n        transform: translate(-50%, calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-left':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        left: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    case 'bottom-right':\r\n      return css`\r\n        ${commonPositionalStyle}\r\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\r\n        top: 100vh;\r\n        right: 10px;\r\n        transform: translateY(calc(-100% - 10px));\r\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\r\n      `\r\n\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nconst commonPositionalStyle = `\r\n    position: fixed;\r\n    z-index: 100000;\r\n`\r\n\r\nconst getDesktopScackbarAnimation = (\r\n  position: 'bottom' | 'top' | 'bottom-centered' | 'top-centered',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [pd, pu] = position.endsWith('centered')\r\n    ? [popDownCentered(true), popUpCentered(true)]\r\n    : [popDown(true), popUp(true)]\r\n\r\n  const [enter, exit] = position.startsWith('top') ? [pd, pu] : [pu, pd]\r\n\r\n  return css`\r\n    animation: ${show ? enter : exit} ${animationDuration}s\r\n      ${show ? 'ease-out' : 'ease-in'};\r\n  `\r\n}\r\n\r\nconst getMobileSnackbarStyle = (\r\n  position: 'bottom' | 'top',\r\n  show: boolean,\r\n  animationDuration: number\r\n) => {\r\n  const [enter, exit] =\r\n    position === 'top' ? [popDown(), popUp()] : [popUp(), popDown()]\r\n\r\n  return css`\r\n    ${({ theme }) => theme.breakpoints.down('sm')} {\r\n      width: 100vw;\r\n      border-radius: 0;\r\n      left: 0;\r\n      right: 0;\r\n      ${position === 'top' ? 'top: 0;' : ''}\r\n      transform: ${position === 'bottom' ? 'translateY(-100%)' : 'none'};\r\n      animation: ${show ? enter : exit} ${animationDuration}s\r\n        ${show ? 'ease-out' : 'ease-in'};\r\n    }\r\n  `\r\n}\r\n","import {\r\n  FunctionComponent,\r\n  ReactElement,\r\n  useCallback,\r\n  cloneElement,\r\n  useContext,\r\n} from 'react'\r\nimport { AlertContext } from './Provider'\r\n\r\ninterface DismissableProps {\r\n  children: ReactElement\r\n}\r\n\r\ninterface InnerDismissableProps extends DismissableProps {\r\n  name: string\r\n}\r\n\r\nexport const Dismissable: FunctionComponent<DismissableProps> = () => null\r\n\r\nexport const InnerDismissable: FunctionComponent<InnerDismissableProps> = ({\r\n  name,\r\n  children,\r\n}) => {\r\n  const { AlertManager } = useContext(AlertContext)\r\n\r\n  const dismiss = useCallback(() => AlertManager.hide(name), [\r\n    name,\r\n    AlertManager,\r\n  ])\r\n\r\n  return cloneElement(children, { onClick: dismiss })\r\n}\r\n","import React, {\r\n  FunctionComponent,\r\n  useLayoutEffect,\r\n  useState,\r\n  useContext,\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  useRef,\r\n} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styled, { css, Keyframes } from 'styled-components'\r\nimport { AlertContext } from './Provider'\r\nimport { fadeIn, fadeOut } from './animations'\r\nimport { AllowedPositions } from './types'\r\nimport { getPositionalCSS } from './utils'\r\nimport { InnerDismissable, Dismissable } from './Dismissable'\r\n\r\ninterface AlertProps {\r\n  name: string\r\n  onClose?: () => void\r\n  enterAnimation?: Keyframes | 'none'\r\n  exitAnimation?: Keyframes | 'none'\r\n  animationDuration?: number\r\n  animationTimingFunction?: (show: boolean) => string\r\n  noStyle?: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  position?: AllowedPositions\r\n  id?: string\r\n  onClick?: () => void\r\n  variant?: 'success' | 'failure'\r\n}\r\n\r\nexport const Alert: FunctionComponent<AlertProps> = ({\r\n  name,\r\n  onClose,\r\n  enterAnimation,\r\n  exitAnimation,\r\n  animationDuration = 0.3,\r\n  animationTimingFunction = () => 'linear',\r\n  noStyle = false,\r\n  children,\r\n  containerCSS,\r\n  position,\r\n  id,\r\n  onClick,\r\n  variant,\r\n}) => {\r\n  const { getByName, AlertManager } = useContext(AlertContext)\r\n  const { show, timeout, data, permanent } = getByName(name)\r\n\r\n  const [isShowing, setIsShowing] = useState(false)\r\n  const [storedData, setStoredData] = useState<any>(null)\r\n  const hideTimeoutRef = useRef<number | undefined>(undefined)\r\n\r\n  const waitAnimation = () =>\r\n    new Promise((r) => setTimeout(r, animationDuration * 1000))\r\n\r\n  const handleHide = () => {\r\n    const doHide = () => {\r\n      clearTimeout(hideTimeoutRef.current)\r\n      setIsShowing(false)\r\n      setStoredData(null)\r\n      onClose?.()\r\n    }\r\n    if (exitAnimation !== 'none') waitAnimation().then(doHide)\r\n    else doHide()\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (show) {\r\n      setIsShowing(true)\r\n      data && setStoredData(data)\r\n      if (!permanent) {\r\n        hideTimeoutRef.current = setTimeout(\r\n          () => AlertManager.hide(name),\r\n          timeout\r\n        )\r\n      }\r\n    } else if (isShowing) {\r\n      handleHide()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [show])\r\n\r\n  if (!isShowing) return null\r\n\r\n  const processedChildren = (typeof children === 'function'\r\n    ? children(storedData)\r\n    : children) as ReactElement | ReactElement[] | string\r\n\r\n  const Snack = (\r\n    <Container\r\n      id={id || name}\r\n      noStyle={noStyle}\r\n      animation={show ? enterAnimation || fadeIn() : exitAnimation || fadeOut()}\r\n      animationDuration={animationDuration}\r\n      animationTimingFunction={animationTimingFunction(show)}\r\n      show={show}\r\n      containerCSS={containerCSS}\r\n      position={position}\r\n      onClick={onClick}\r\n      role=\"alert\"\r\n      variant={variant}\r\n    >\r\n      {Children.map(processedChildren, (child) => {\r\n        if (!child) return child\r\n\r\n        // @ts-ignore\r\n        if (isValidElement(child) && child.type.name === Dismissable.name) {\r\n          return (\r\n            <InnerDismissable name={name}>\r\n              <span>{child.props.children}</span>\r\n            </InnerDismissable>\r\n          )\r\n        }\r\n        return child\r\n      })}\r\n    </Container>\r\n  )\r\n\r\n  if (position)\r\n    return ReactDOM.createPortal(Snack, document.querySelector('body')!)\r\n\r\n  return Snack\r\n}\r\n\r\nconst Container = styled.div<{\r\n  animation: Keyframes | 'none'\r\n  noStyle: boolean\r\n  animationDuration: number\r\n  show: boolean\r\n  containerCSS?: ReturnType<typeof css>\r\n  animationTimingFunction: string\r\n  position?: AllowedPositions\r\n  onClick?: () => void\r\n  variant?: AlertProps['variant']\r\n}>`\r\n  ${({\r\n    noStyle,\r\n    animation,\r\n    animationDuration,\r\n    show,\r\n    containerCSS,\r\n    animationTimingFunction,\r\n    position,\r\n    onClick,\r\n    variant,\r\n  }) => {\r\n    const animationProps = css`\r\n      animation: ${animation} ${animationDuration}s ${animationTimingFunction};\r\n      opacity: ${show ? 1 : 0};\r\n    `\r\n\r\n    const variantCss = variant\r\n      ? variant === 'success'\r\n        ? SuccessVariant\r\n        : FailureVariant\r\n      : ''\r\n\r\n    return noStyle\r\n      ? css`\r\n          ${animationProps}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n      : css`\r\n          box-sizing: border-box;\r\n          border-radius: 4px;\r\n          background-color: #333;\r\n          color: #eee;\r\n          padding: 15px 20px;\r\n          width: fit-content;\r\n          display: inline-block;\r\n          cursor: ${onClick ? 'pointer' : 'initial'};\r\n          ${animationProps}\r\n          ${variantCss}\r\n          ${containerCSS}\r\n          ${getPositionalCSS(position, show, animationDuration)}\r\n        `\r\n  }}\r\n`\r\n\r\nconst SuccessVariant = css`\r\n  background: #444;\r\n  border-bottom: #28a745 5px solid;\r\n  height: 76px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst FailureVariant = css`\r\n  ${SuccessVariant}\r\n  border-bottom: ${({ theme }) => theme.text.colors.error} 5px solid;\r\n`\r\n","import { useContext } from \"react\";\r\nimport { AlertContext } from \"./Provider\";\r\n\r\nexport const useAlerts = () => {\r\n  const { AlertManager } = useContext(AlertContext);\r\n\r\n  return { AlertManager };\r\n};\r\n","import React from 'react'\nimport { Breadcrumb as BBreadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { RouterLink } from '.'\n\ninterface BreadcrumbProps {\n  items: Array<{\n    title: string\n    linkTo?: string\n    onClick?: () => void\n  }>\n}\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => (\n  <BBreadcrumb>\n    {items.map(({ title, linkTo, onClick }, index) => (\n      <BreadcrumbItem\n        key={title}\n        onClick={onClick}\n        active={index === items.length - 1}\n      >\n        {linkTo ? (\n          <RouterLink to={linkTo} noPadding>\n            {title}\n          </RouterLink>\n        ) : (\n          title\n        )}\n      </BreadcrumbItem>\n    ))}\n  </BBreadcrumb>\n)\n\nexport { Breadcrumb }\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface SwitchProps {\r\n  label?: string\r\n  onChange: (checked: boolean) => void\r\n  checked: boolean\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = ({ label = '', onChange, checked }) => (\r\n  <SwitchContainer>\r\n    <input\r\n      type=\"checkbox\"\r\n      id={`${label.split(' ').join('-')}-check`}\r\n      checked={checked}\r\n      onChange={(e) => onChange(e.target.checked)}\r\n    />\r\n    <label htmlFor={`${label.split(' ').join('-')}-check`}>\r\n      {label || <span>&nbsp;</span>}\r\n    </label>\r\n  </SwitchContainer>\r\n)\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n\r\n  input {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 36px;\r\n    height: 20px;\r\n    opacity: 0;\r\n    z-index: 0;\r\n\r\n    :checked + label:before {\r\n      background-color: rgba(63, 81, 181, 0.5);\r\n    }\r\n\r\n    :checked + label:after {\r\n      left: 16px;\r\n      background-color: cornflowerblue;\r\n      border-color: cornflowerblue;\r\n    }\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    padding: 0 0 0 44px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n\r\n    ::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 5px;\r\n      left: 0;\r\n      width: 36px;\r\n      height: 14px;\r\n      background-color: #999;\r\n      border-radius: 14px;\r\n      z-index: 1;\r\n      transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n\r\n    ::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 0;\r\n      width: 20px;\r\n      height: 20px;\r\n      background-color: #fff;\r\n      border: 1px solid #ededed;\r\n      border-radius: 14px;\r\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\r\n      z-index: 2;\r\n      transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n      transition-property: left, background-color, border-color;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Switch }\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody } from 'reactstrap'\r\n\r\nconst useConfirmationModal = <Data extends {}>() => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\r\n\r\n  const toggleModal = () => {\r\n    isModalOpen ? reset() : setIsModalOpen(!isModalOpen)\r\n  }\r\n\r\n  const [data, setData] = useState<Data | null>(null)\r\n\r\n  const askEditConfirmation = (data: Data) => {\r\n    toggleModal()\r\n    setData(data)\r\n  }\r\n\r\n  const reset = () => {\r\n    setIsModalOpen(false)\r\n    setData(null)\r\n  }\r\n\r\n  return {\r\n    isModalOpen,\r\n    data,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  }\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean\r\n  toggleModal: () => void\r\n  onConfirm: () => void\r\n  buttonColor: string\r\n  title: React.ReactNode\r\n  body?: React.ReactNode\r\n  confirmationLabel: React.ReactNode\r\n}\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\r\n  isOpen,\r\n  toggleModal,\r\n  onConfirm,\r\n  buttonColor,\r\n  confirmationLabel,\r\n  title,\r\n  body,\r\n}) => (\r\n  <Modal centered isOpen={isOpen} toggle={toggleModal}>\r\n    <ModalHeader toggle={toggleModal}>{title}</ModalHeader>\r\n    {body && <ModalBody>{body}</ModalBody>}\r\n    <ModalFooter>\r\n      <Button color={buttonColor} onClick={onConfirm}>\r\n        {confirmationLabel}\r\n      </Button>\r\n    </ModalFooter>\r\n  </Modal>\r\n)\r\n\r\nexport { ConfirmationModal, useConfirmationModal }\r\n","import { useAlerts } from 'components'\r\nimport { useEffect, useRef, useCallback } from 'react'\r\n\r\nconst useThrottle = <T extends (...args: any) => any>(\r\n  cb: T,\r\n  timeout: number\r\n) => {\r\n  const timeoutRef = useRef<number | undefined>(undefined)\r\n  const readyRef = useRef<boolean>(true)\r\n\r\n  useEffect(() => () => clearTimeout(timeoutRef.current), [])\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useCallback(\r\n    ((...args: any) => {\r\n      if (readyRef.current === false) {\r\n        AlertManager.show('not-so-fast', { timeout: 3000 })\r\n        return\r\n      }\r\n      cb(...args)\r\n      readyRef.current = false\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        readyRef.current = true\r\n      }, timeout)\r\n    }) as T,\r\n    [cb, timeout]\r\n  )\r\n}\r\n\r\nexport { useThrottle }\r\n","import { useMemo } from 'react'\r\nimport { PhoneStorage as PhoneStorageConstructor } from 'services'\r\nimport { useConfig } from '.'\r\nimport { useReactive } from './utils'\r\n\r\nconst usePhoneStorage = () => {\r\n  const { reactive } = useReactive()\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const PhoneStorage = useMemo(\r\n    () => new PhoneStorageConstructor(testModeEnabled),\r\n    [testModeEnabled]\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      getAll: PhoneStorage.getAll.bind(PhoneStorage),\r\n      add: reactive(PhoneStorage.add.bind(PhoneStorage)),\r\n      update: reactive(PhoneStorage.update.bind(PhoneStorage)),\r\n    }),\r\n    [PhoneStorage, reactive]\r\n  )\r\n}\r\n\r\nexport { usePhoneStorage }\r\n","import { useCallback } from 'react'\r\nimport { useRerender } from '.'\r\n\r\nconst useReactive = () => {\r\n  const { forceUpdate } = useRerender()\r\n\r\n  const reactive = useCallback(\r\n    <T extends (...args: any[]) => any>(cb: T) =>\r\n      ((...args) => {\r\n        const returnData = cb(...args)\r\n        forceUpdate()\r\n        return returnData\r\n      }) as T,\r\n    [forceUpdate]\r\n  )\r\n\r\n  return { reactive }\r\n}\r\n\r\nexport { useReactive }\r\n","import { useCallback } from 'react'\r\nimport { Fetch } from 'services'\r\nimport { useConfig } from '.'\r\n\r\nconst useFetch = () => {\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const FetchFunction = useCallback(\r\n    (useToken: boolean = true) => new Fetch(testModeEnabled, useToken),\r\n    [testModeEnabled]\r\n  )\r\n\r\n  return FetchFunction\r\n}\r\n\r\nexport { useFetch }\r\n","import React, { createContext, useState, FunctionComponent } from 'react'\r\nimport { LOCAL_STORAGE } from 'consts'\r\nimport { useFetch } from 'hooks'\r\nimport { useAlerts } from 'components'\r\n\r\ninterface AuthType {\r\n  isAuth: boolean\r\n  isLoading: boolean\r\n  isAdmin: boolean\r\n  doLogin: (userName: string, password: string) => void\r\n  doLogout: () => void\r\n}\r\n\r\ninterface LoginPayload {\r\n  username: string\r\n  password: string\r\n}\r\n\r\ninterface LoginResponse {\r\n  accessToken: string\r\n  isAdmin: boolean\r\n}\r\n\r\nexport const AuthContext = createContext<AuthType>({} as AuthType)\r\n\r\nexport const AuthProvider: FunctionComponent = ({ children }) => {\r\n  const authValue = useAuth()\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>{children}</AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = (): AuthType => {\r\n  const [isAuth, setIsAuth] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.TOKEN)\r\n  )\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(\r\n    !!localStorage.getItem(LOCAL_STORAGE.IS_ADMIN)\r\n  )\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const doLogin = async (username: string, password: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, response] = await Fetch(false).post<\r\n        LoginPayload,\r\n        LoginResponse\r\n      >('login', {\r\n        username,\r\n        password,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      localStorage.setItem(LOCAL_STORAGE.TOKEN, response.accessToken)\r\n      response.isAdmin\r\n        ? localStorage.setItem(LOCAL_STORAGE.IS_ADMIN, '1')\r\n        : localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n\r\n      setIsAdmin(response.isAdmin)\r\n      setIsAuth(true)\r\n    } catch (e) {\r\n      e.status === 401 && AlertManager.show('wrong-login-credentials')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const doLogout = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE.TOKEN)\r\n    localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\r\n    setIsAuth(false)\r\n    setIsAdmin(false)\r\n  }\r\n\r\n  return {\r\n    isAuth,\r\n    isLoading,\r\n    isAdmin: isAuth && isAdmin,\r\n    doLogin,\r\n    doLogout,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ConfigContext, ConfigProvider } from './config'\r\nimport { AuthContext, AuthProvider } from './auth'\r\nimport { AlertProvider } from 'components/Alert'\r\n\r\nconst ContextProviders: React.FC = ({ children }) => {\r\n  return (\r\n    <AlertProvider>\r\n      <ConfigProvider>\r\n        <AuthProvider>{children}</AuthProvider>\r\n      </ConfigProvider>\r\n    </AlertProvider>\r\n  )\r\n}\r\n\r\n// Provider\r\nexport { ContextProviders }\r\n\r\n// Contexts\r\nexport { ConfigContext }\r\nexport { AuthContext }\r\n","type Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\r\n\r\nconst sizes: Record<Size, string> = {\r\n  xs: '0px',\r\n  sm: '600px',\r\n  md: '960px',\r\n  lg: '1150px',\r\n  xl: '1920px',\r\n}\r\n\r\nconst theme = (darkMode: boolean) => ({\r\n  darkMode,\r\n  navbarHeight: 56,\r\n  text: {\r\n    colors: {\r\n      secondary: '#999',\r\n      error: '#ff5e5e',\r\n      green: '#28a745',\r\n      blue: '#2000d4',\r\n      black: '#222',\r\n      white: '#fff',\r\n      lightgreen: 'lightgreen',\r\n      info: '#007bff',\r\n      red: '#dc3545',\r\n    },\r\n  },\r\n  breakpoints: {\r\n    up: (size: Size): string => `@media (min-width: ${sizes[size]})`,\r\n    down: (size: Size): string => `@media (max-width: ${sizes[size]})`,\r\n    between: (from: Size, to: Size): string =>\r\n      `@media (min-width: ${sizes[from]}) and (max-width: ${sizes[to]})`,\r\n  },\r\n})\r\n\r\nexport type Theme = ReturnType<typeof theme>\r\n\r\nexport { theme }\r\n","import React, { useContext } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { ConfigContext } from 'contexts'\r\nimport { theme } from './theme'\r\n\r\nconst Provider: React.FC = ({ children }) => {\r\n  const { darkModeEnabled } = useContext(ConfigContext)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme(darkModeEnabled)}>{children}</ThemeProvider>\r\n  )\r\n}\r\n\r\nexport { Provider as ThemeProvider }\r\n","import React, { KeyboardEvent, useState } from 'react'\r\nimport {\r\n  Input,\r\n  Label,\r\n  Container,\r\n  FormGroup,\r\n  Button,\r\n  Jumbotron,\r\n} from 'reactstrap'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Alert, Spinner } from 'components'\r\nimport { useAuth } from 'hooks'\r\n\r\nconst Login: React.FC = () => {\r\n  const [username, setUsername] = useState<string>('')\r\n  const [password, setPassword] = useState<string>('')\r\n\r\n  const { doLogin, isLoading } = useAuth()\r\n\r\n  const submit = () => {\r\n    if (!username || !password) return\r\n    doLogin(username, password)\r\n  }\r\n\r\n  const onKeyDown = (e: KeyboardEvent<HTMLInputElement>) =>\r\n    e.key === 'Enter' && submit()\r\n\r\n  if (isLoading) return <Spinner fulfill container />\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica Login</title>\r\n      </Helmet>\r\n      <Alert name=\"wrong-login-credentials\" position=\"bottom\">\r\n        Usuario o contraseña incorrectos.\r\n      </Alert>\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1 className=\"display-5\">Iniciar sesión</h1>\r\n          <p className=\"lead\">\r\n            Solicite los datos de ingreso a su superintendente de servicio.\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <FormGroup>\r\n          <Label for=\"username\">Usuario</Label>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Contraseña</Label>\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyDown={onKeyDown}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          <Button color=\"success\" onClick={submit}>\r\n            Ingresar\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Login }\r\n","import React, { useEffect, useState } from 'react'\n\ninterface PhoneLinkProps {\n  phone: string\n}\n\nconst PhoneLink: React.FC<PhoneLinkProps> = ({ phone }) => {\n  const [touchedCount, setTouchedCount] = useState<number>(0)\n\n  const addTouched = () => setTouchedCount(touchedCount + 1)\n\n  useEffect(() => {\n    setTouchedCount(0)\n  }, [phone])\n\n  return (\n    <>\n      <a\n        style={{ textDecoration: 'underline' }}\n        href={`tel:${phone}`}\n        onClick={addTouched}\n      >\n        {phone}\n      </a>\n      {Array(touchedCount)\n        .fill(null)\n        .map((_) => (\n          <span className=\"d-block text-success\">¡Tocado!</span>\n        ))}\n    </>\n  )\n}\n\nexport { PhoneLink }\n","import React, { FunctionComponent, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Collapse } from 'reactstrap'\r\nimport { useFetch } from 'hooks'\r\nimport { Alert, useAlerts, Switch } from 'components'\r\nimport { PhoneOptionsType } from 'types'\r\n\r\ninterface PhoneOptionsProps {\r\n  phoneId: number\r\n  initialNoCallOnWeekends: boolean\r\n}\r\n\r\nconst PhoneOptions: FunctionComponent<PhoneOptionsProps> = ({\r\n  phoneId,\r\n  initialNoCallOnWeekends,\r\n}) => {\r\n  const [showPhoneOptions, setShowPhoneOptions] = useState<boolean>(false)\r\n  const [noCallOnWeekends, setNoCallOnWeekends] = useState<boolean>(\r\n    initialNoCallOnWeekends\r\n  )\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const togglePhoneOptions = () => setShowPhoneOptions(!showPhoneOptions)\r\n\r\n  const handleOptionChanged = async <K extends keyof PhoneOptionsType>(\r\n    option: K,\r\n    newVal: PhoneOptionsType[K]\r\n  ) => {\r\n    let revert: () => void = () => {}\r\n    let backendValue: PhoneOptionsType[K] = newVal\r\n\r\n    if (option === 'callOnWeekends') {\r\n      revert = () => setNoCallOnWeekends(noCallOnWeekends)\r\n      setNoCallOnWeekends(newVal)\r\n      // In the case of callOnWeekends, we are handling the opposite case on the back\r\n      backendValue = !newVal\r\n    }\r\n\r\n    try {\r\n      const [err] = await Fetch().put<Partial<PhoneOptionsType>>(\r\n        `phones/${phoneId}/options`,\r\n        {\r\n          [option]: backendValue,\r\n        }\r\n      )\r\n\r\n      if (err) throw err\r\n\r\n      AlertManager.show('phone-option-update-success')\r\n    } catch {\r\n      revert()\r\n      AlertManager.hideAll()\r\n      AlertManager.show('phone-option-update-failed')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        name=\"phone-option-update-success\"\r\n        position=\"top\"\r\n        variant=\"success\"\r\n      >\r\n        Opción de teléfono actualizada con éxito.\r\n      </Alert>\r\n      <Alert\r\n        name=\"phone-option-update-failed\"\r\n        position=\"bottom\"\r\n        variant=\"failure\"\r\n      >\r\n        No se pudo actualizar opción de teléfono.\r\n      </Alert>\r\n\r\n      <PhoneOptionsContainer>\r\n        <div className=\"title\" onClick={togglePhoneOptions}>\r\n          Opciones de teléfono\r\n          <span>{showPhoneOptions ? '-' : '+'}</span>\r\n        </div>\r\n        <Collapse isOpen={showPhoneOptions}>\r\n          <div className=\"inner\">\r\n            <span>No llamar los fin de semana:</span>\r\n            <Switch\r\n              label=\"\"\r\n              checked={noCallOnWeekends}\r\n              onChange={(checked) =>\r\n                handleOptionChanged('callOnWeekends', checked)\r\n              }\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </PhoneOptionsContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PhoneOptionsContainer = styled.div`\r\n  .title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-weight: 500;\r\n\r\n    span {\r\n      font-weight: 800;\r\n    }\r\n  }\r\n\r\n  .inner {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 0.5em;\r\n  }\r\n`\r\n\r\nexport { PhoneOptions }\r\n","import React from 'react'\r\nimport { useConfig } from 'hooks'\r\nimport styled from 'styled-components'\r\nimport { CampaignFeedback, Feedback, FeedbackExtended, Phone } from 'types'\r\nimport { ConfirmationModal, useConfirmationModal } from 'components'\r\nimport { PhoneLink } from './PhoneLink'\r\nimport { PhoneOptions } from './PhoneOptions'\r\nimport { colors, labels } from 'consts'\r\nimport { Button, Container, Jumbotron } from 'reactstrap'\r\n\r\ninterface PhoneDetailsProps {\r\n  phone: Phone\r\n  comments: string\r\n  handleComments: (comments: string) => void\r\n  openHelpSection: () => void\r\n  handlePhoneFeedback: (n: FeedbackExtended) => void\r\n}\r\n\r\nconst PhoneDetails: React.FC<PhoneDetailsProps> = ({\r\n  phone,\r\n  comments,\r\n  handleComments,\r\n  openHelpSection,\r\n  handlePhoneFeedback,\r\n}) => {\r\n  const { advancedModeEnabled, configurations } = useConfig()\r\n  const { campaignMode } = configurations\r\n\r\n  const isAllowed = (f: Feedback) =>\r\n    !configurations.hiddenButtons.split(',').includes(f.toString())\r\n\r\n  const {\r\n    isModalOpen,\r\n    data: feedbackToConfirm,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal<Feedback>()\r\n\r\n  const handleGeneric = (feedback: Feedback) => () => {\r\n    if (advancedModeEnabled) askEditConfirmation(feedback)\r\n    else handlePhoneFeedback(feedback)\r\n  }\r\n\r\n  const doConfirm = () => {\r\n    if (feedbackToConfirm === null) return\r\n    handlePhoneFeedback(feedbackToConfirm)\r\n    reset()\r\n  }\r\n\r\n  const handleAnswered = handleGeneric(Feedback.ANSWERED)\r\n  const handleUnanswered = handleGeneric(Feedback.UNANSWERED)\r\n  const handleNonExistent = handleGeneric(Feedback.NON_EXISTENT)\r\n  const handleNoCall = handleGeneric(Feedback.NO_CALL)\r\n  const handleAnsweringMachine = handleGeneric(Feedback.ANSWERING_MACHINE)\r\n  const handlePostpone = handleGeneric(Feedback.POSTPONE)\r\n  const handleIgnore = handleGeneric(Feedback.IGNORE)\r\n  const handleRushed = () => handlePhoneFeedback(CampaignFeedback.RUSHED)\r\n\r\n  const DesktopTable = (\r\n    <div className=\"table-responsive d-none d-sm-block\">\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Teléfono</th>\r\n            <th>Otros datos</th>\r\n            {phone.comments ? <th>Comentarios</th> : null}\r\n            <th>Última fecha que atendió</th>\r\n            <th>Última fecha que se lo llamó</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <PhoneLink phone={phone.phone} />\r\n            </td>\r\n            <td>{phone.info}</td>\r\n            {phone.comments ? <td>{phone.comments}</td> : null}\r\n            <td>{phone.answeredOn ?? 'Nunca'}</td>\r\n            <td>\r\n              {phone.unansweredDate ? (\r\n                phone.unansweredDate\r\n              ) : phone.fulfilledOn ? (\r\n                <>\r\n                  {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n                  {phone.fulfilledOn}\r\n                </>\r\n              ) : (\r\n                'Nunca'\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n  const MobileTable = (\r\n    <div className=\"d-block d-sm-none text-center\">\r\n      <span style={{ fontWeight: 500 }}>Teléfono:</span>\r\n      <div>\r\n        <PhoneLink phone={phone.phone} />\r\n      </div>\r\n      <br />\r\n\r\n      <span style={{ fontWeight: 500 }}>Otros datos:</span>\r\n      <div>{phone.info}</div>\r\n      <br />\r\n\r\n      {phone.comments && (\r\n        <>\r\n          <span style={{ fontWeight: 500 }}>Comentarios:</span>\r\n          <div>{phone.comments}</div>\r\n          <br />\r\n        </>\r\n      )}\r\n\r\n      <span style={{ fontWeight: 500 }}>Última fecha que atendió:</span>\r\n      <div>{phone.answeredOn ?? 'Nunca'}</div>\r\n      <br />\r\n\r\n      <span style={{ fontWeight: 500 }}>Última fecha que se lo llamó:</span>\r\n      <div>\r\n        {phone.unansweredDate ? (\r\n          phone.unansweredDate\r\n        ) : phone.fulfilledOn ? (\r\n          <>\r\n            {phone.fulfilledOn === 'jue, 25 jun 2020' && 'Antes del '}\r\n            {phone.fulfilledOn}\r\n          </>\r\n        ) : (\r\n          'Nunca'\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const helpButton = (\r\n    <MiniSection>\r\n      <HelpButton onClick={openHelpSection}>¿Qué hace cada botón?</HelpButton>\r\n    </MiniSection>\r\n  )\r\n\r\n  const CommentsSection = (\r\n    <div className=\"row my-4\">\r\n      <div className=\"col-12\">\r\n        <span className=\"text-secondary d-inline-block mb-2\">\r\n          Comentarios (opcional):\r\n        </span>\r\n        <Input\r\n          autoFocus\r\n          placeholder=\"Sus comentarios acá...\"\r\n          type=\"text\"\r\n          value={comments}\r\n          onChange={(e) => handleComments(e.target.value)}\r\n          readOnly={!advancedModeEnabled}\r\n        />\r\n\r\n        {phone.commentedOn && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Comentado el:{' '}\r\n            <span className=\"text-success\">{phone.commentedOn}</span>\r\n          </span>\r\n        )}\r\n\r\n        {phone.answeringMachineDate && (\r\n          <span className=\"d-block input-helper text-secondary\">\r\n            Último mensaje en el contestador:{' '}\r\n            <span className=\"text-success\">{phone.answeringMachineDate}</span>\r\n          </span>\r\n        )}\r\n\r\n        {!phone.commentedOn && !phone.answeringMachineDate && (\r\n          <span className=\"input-helper text-secondary\">\r\n            Ej.: lugar de trabajo, no habla español, etc.\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const ButtonGroup = campaignMode ? (\r\n    <div className=\"my-4\">\r\n      <Button color=\"success\" block onClick={handleRushed}>\r\n        Siguiente\r\n      </Button>\r\n    </div>\r\n  ) : !advancedModeEnabled ? (\r\n    <div className=\"my-4 row d-flex justify-content-center\">\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"col-6 mb-3 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-success btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleAnswered}\r\n          >\r\n            Atendió\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"col-6 mb-3 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-danger btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleUnanswered}\r\n          >\r\n            No en casa\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-warning btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleNoCall}\r\n          >\r\n            No visitar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-dark btn-lg mx-auto mx-md-0 d-block w-100\"\r\n            onClick={handleNonExistent}\r\n          >\r\n            No existe\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div className=\"my-4 row d-flex justify-content-center\">\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-success btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleAnswered}\r\n          >\r\n            Atendió\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-danger btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleUnanswered}\r\n          >\r\n            No en casa\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.ANSWERING_MACHINE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleAnsweringMachine}\r\n          >\r\n            Contestador\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.POSTPONE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-info btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handlePostpone}\r\n          >\r\n            Aplazar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.IGNORE) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-secondary btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleIgnore}\r\n          >\r\n            Ignorar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"col-6 mb-2 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-warning btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleNoCall}\r\n          >\r\n            No visitar\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"col-6 col-md-auto\">\r\n          <button\r\n            className=\"btn btn-dark btn-lg w-100 mx-auto mx-md-0 d-block\"\r\n            onClick={handleNonExistent}\r\n          >\r\n            No existe\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      {DesktopTable}\r\n      {MobileTable}\r\n      {CommentsSection}\r\n      {campaignMode && (\r\n        <Jumbotron fluid className=\"my-2\">\r\n          <Container>\r\n            <h6>¡Estamos en campaña!</h6>\r\n            <small>\r\n              Durante la campaña, solo habrá un botón de \"siguiente\".\r\n            </small>\r\n          </Container>\r\n        </Jumbotron>\r\n      )}\r\n      {advancedModeEnabled && !campaignMode && (\r\n        <MiniSection>\r\n          <PhoneOptions\r\n            phoneId={phone.id}\r\n            initialNoCallOnWeekends={phone.noWeekends}\r\n          />\r\n        </MiniSection>\r\n      )}\r\n      {ButtonGroup}\r\n      {advancedModeEnabled && !campaignMode && helpButton}\r\n      {feedbackToConfirm !== null && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={doConfirm}\r\n          title=\"¿Seguro?\"\r\n          buttonColor={colors[feedbackToConfirm]}\r\n          confirmationLabel={labels[feedbackToConfirm]}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border-top: none;\r\n  border-right: none;\r\n  border-left: none;\r\n  border-image: initial;\r\n  border-bottom: 2px solid ${({ theme }) => theme.text.colors.secondary};\r\n  outline: none;\r\n  transition: border-bottom-color 0.25s;\r\n  margin-bottom: 0.5em;\r\n  border-radius: 5px;\r\n  padding: 0 10px;\r\n\r\n  :focus {\r\n    border-bottom-color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.black};\r\n  }\r\n`\r\n\r\nconst MiniSection = styled.div`\r\n  border-top: 1px solid\r\n    ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.secondary};\r\n  border-bottom: 1px solid\r\n    ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.white : theme.text.colors.secondary};\r\n  padding: 10px 0;\r\n  margin-top: 2em;\r\n  display: flex;\r\n\r\n  > div {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst HelpButton = styled.button`\r\n  margin-bottom: 0;\r\n  border: none;\r\n  color: ${({ theme }) => (theme.darkMode ? theme.text.colors.white : '#555')};\r\n  text-decoration: underline;\r\n  background: none;\r\n  margin: auto;\r\n`\r\n\r\nexport { PhoneDetails }\r\n","import { useConfig } from 'hooks'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Feedback } from 'types'\r\n\r\ninterface HelpSectionProps {\r\n  close: () => void\r\n}\r\n\r\nconst HelpSection: React.FC<HelpSectionProps> = ({ close }) => {\r\n  const { advancedModeEnabled, configurations } = useConfig()\r\n\r\n  const isAllowed = (f: Feedback) =>\r\n    !configurations.hiddenButtons.split(',').includes(f.toString())\r\n\r\n  return (\r\n    <Container>\r\n      {isAllowed(Feedback.ANSWERED) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de <span className=\"text-success\">atendió</span>?\r\n          </h6>\r\n          <p>\r\n            Manda el número al final de la cola y registra la fecha en que se\r\n            atendió.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.UNANSWERED) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-danger\">no en casa</span>?\r\n          </h6>\r\n          <p>\r\n            Guarda el número para llamarlo de vuelta mañana, hasta un máximo de{' '}\r\n            {configurations.unansweredMaxAttemps} intentos. Luego, si no\r\n            atendió, se lo manda al final de la cola.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {advancedModeEnabled && (\r\n        <>\r\n          {isAllowed(Feedback.ANSWERING_MACHINE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de{' '}\r\n                <span className=\"text-primary\">contestador</span>?\r\n              </h6>\r\n              <p>\r\n                Registra la última vez que se le dejó un mensaje en el\r\n                contestador al amo de casa.&nbsp;\r\n                {configurations.answeringMachineMaxAttemps > 1 && (\r\n                  <span>\r\n                    Además, congela el número durante{' '}\r\n                    {configurations.answeringMachinePostponedDays} días para\r\n                    darle un máximo de{' '}\r\n                    {configurations.answeringMachineMaxAttemps} oportunidades.\r\n                    Estas oportunidades se computan junto a las que ya se le dio\r\n                    con el botón \"no en casa\" si ha sido el caso.\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {isAllowed(Feedback.POSTPONE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de <span className=\"text-info\">aplazar</span>\r\n                ?\r\n              </h6>\r\n              <p>\r\n                Congela el número para que se lo llame dentro de{' '}\r\n                {configurations.postponedButtonDays}{' '}\r\n                {configurations.postponedButtonDays > 1 ? 'días' : 'día'}.\r\n              </p>\r\n            </div>\r\n          )}\r\n          {isAllowed(Feedback.IGNORE) && (\r\n            <div className=\"text-center\">\r\n              <h6>\r\n                ¿Qué hace el botón de{' '}\r\n                <span className=\"text-secondary\">ignorar</span>?\r\n              </h6>\r\n              <p>Manda el número directamente al final de la cola.</p>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {isAllowed(Feedback.NO_CALL) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-warning\">no visitar</span>?\r\n          </h6>\r\n          <p>\r\n            Quita el número de la cola. No se lo borra pero tampoco se lo\r\n            volverá a llamar.\r\n          </p>\r\n        </div>\r\n      )}\r\n      {isAllowed(Feedback.NON_EXISTENT) && (\r\n        <div className=\"text-center\">\r\n          <h6>\r\n            ¿Qué hace el botón de{' '}\r\n            <span className=\"text-secondary\">no existe</span>?\r\n          </h6>\r\n          <p>\r\n            Suspende el número durante {configurations.nonExistentPostponedDays}{' '}\r\n            días. Luego vuelve a la cola porque existe la posibilidad de que se\r\n            haya reactivado.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <p className=\"text-center\">\r\n        Nota: en ningún caso se borran los números. Si correspondiera (por ej.\r\n        por estar fuera del territorio), por favor, comunicarse con el siervo de\r\n        territorios.\r\n      </p>\r\n\r\n      <Button className=\"btn btn-secondary\" onClick={close}>\r\n        Volver\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - ${({ theme }) => theme.navbarHeight}px);\r\n  justify-content: space-evenly;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n`\r\n\r\nexport { HelpSection }\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Table } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { useConfig, usePhoneStorage } from 'hooks'\r\nimport { Feedback, StoragePhone } from 'types'\r\nimport { isToday } from 'utils'\r\nimport { colors, labels } from 'consts'\r\nimport { useConfirmationModal, ConfirmationModal } from 'components'\r\n\r\ninterface PhonesInStorageProps {\r\n  currentPhoneId: number\r\n  onEditRequest: (storagePhone: StoragePhone, newStatus: Feedback) => void\r\n  PhoneStorage: ReturnType<typeof usePhoneStorage>\r\n}\r\n\r\nconst PhonesInStorage: React.FC<PhonesInStorageProps> = ({\r\n  currentPhoneId,\r\n  onEditRequest,\r\n  PhoneStorage,\r\n}) => {\r\n  const [collapsed, setCollapsed] = useState<number | null>(null)\r\n  const {\r\n    isModalOpen,\r\n    data,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset,\r\n  } = useConfirmationModal<{\r\n    storagePhoneToConfirm: StoragePhone\r\n    feedbackToConfirm: Feedback\r\n  }>()\r\n\r\n  const {\r\n    configurations: { campaignMode },\r\n  } = useConfig()\r\n\r\n  const feedbackToConfirm = data?.feedbackToConfirm || null\r\n  const storagePhoneToConfirm = data?.storagePhoneToConfirm || null\r\n\r\n  const resetStates = () => {\r\n    setCollapsed(null)\r\n    reset()\r\n  }\r\n\r\n  const onAskEditConfirmation = (\r\n    feedbackToConfirm: Feedback,\r\n    storagePhoneToConfirm: StoragePhone\r\n  ) => askEditConfirmation({ storagePhoneToConfirm, feedbackToConfirm })\r\n\r\n  const handleCollapsed = (i: number) =>\r\n    collapsed !== i ? setCollapsed(i) : setCollapsed(null)\r\n\r\n  const doConfirm = () => {\r\n    if (!storagePhoneToConfirm || typeof feedbackToConfirm !== 'number') return\r\n    onEditRequest(storagePhoneToConfirm, feedbackToConfirm)\r\n    resetStates()\r\n  }\r\n\r\n  const phones = PhoneStorage.getAll()\r\n\r\n  const rows = phones.reverse().map((p, i) => {\r\n    if (p.id === currentPhoneId) return null\r\n\r\n    const phoneIsFromToday = isToday(p.savedOn)\r\n    const color = p.status !== null ? colors[p.status] : ''\r\n\r\n    const statusLabel =\r\n      !phoneIsFromToday && p.status === null\r\n        ? 'Asignado a otro publicador'\r\n        : p.status !== null\r\n        ? labels[p.status]\r\n        : 'Sin respuesta'\r\n\r\n    const isCollapsed = i === collapsed\r\n\r\n    return (\r\n      <tr key={p.id} style={{ position: 'relative' }}>\r\n        <td>{p.phone}</td>\r\n        {!campaignMode && (\r\n          <td>\r\n            <span className={`text-${color}`}>{statusLabel}</span>\r\n          </td>\r\n        )}\r\n        {!campaignMode && (\r\n          <td>\r\n            {phoneIsFromToday && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => handleCollapsed(i)}\r\n              >\r\n                Editar\r\n              </button>\r\n            )}\r\n            <CollapseButtons isOpen={isCollapsed}>\r\n              {p.status !== Feedback.ANSWERED && (\r\n                <button\r\n                  className=\"btn btn-success btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.ANSWERED, p)}\r\n                >\r\n                  Atendió\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.UNANSWERED && (\r\n                <button\r\n                  className=\"btn btn-danger btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.UNANSWERED, p)}\r\n                >\r\n                  No en casa\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.ANSWERING_MACHINE && (\r\n                <button\r\n                  className=\"btn btn-primary btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() =>\r\n                    onAskEditConfirmation(Feedback.ANSWERING_MACHINE, p)\r\n                  }\r\n                >\r\n                  Contestador\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.POSTPONE && (\r\n                <button\r\n                  className=\"btn btn-info btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.POSTPONE, p)}\r\n                >\r\n                  Aplazar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.IGNORE && (\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.IGNORE, p)}\r\n                >\r\n                  Ignorar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.NO_CALL && (\r\n                <button\r\n                  className=\"btn btn-warning btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() => onAskEditConfirmation(Feedback.NO_CALL, p)}\r\n                >\r\n                  No visitar\r\n                </button>\r\n              )}\r\n              {p.status !== Feedback.NON_EXISTENT && (\r\n                <button\r\n                  className=\"btn btn-dark btn-sm d-inline-block mr-1 mb-2\"\r\n                  onClick={() =>\r\n                    onAskEditConfirmation(Feedback.NON_EXISTENT, p)\r\n                  }\r\n                >\r\n                  No existe\r\n                </button>\r\n              )}\r\n            </CollapseButtons>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  const dataInStorage: boolean = rows.filter((r) => !!r).length > 0\r\n\r\n  if (!dataInStorage) return null\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"container mb-3\">\r\n        Números anteriores en este dispositivo:\r\n      </h6>\r\n      <Table responsive className=\"text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Teléfono</th>\r\n            {!campaignMode && <th>Estado</th>}\r\n            {!campaignMode && <th>Acciones</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n      {feedbackToConfirm !== null && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={doConfirm}\r\n          title=\"¿Seguro?\"\r\n          buttonColor={colors[feedbackToConfirm]}\r\n          confirmationLabel={labels[feedbackToConfirm]}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CollapseButtons = styled(Collapse)`\r\n  position: absolute;\r\n  left: 0px;\r\n  background: rgb(34, 34, 34);\r\n  width: 100%;\r\n  border: 1px solid rgb(102, 102, 102);\r\n  padding: ${({ isOpen }) => (isOpen ? '20px' : '0')} 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  transition: padding 0.3s, height 0.3s;\r\n`\r\n\r\nexport { PhonesInStorage }\r\n","export const isToday = (date: number) => {\r\n  const inputDate = new Date(date)\r\n  const todaysDate = new Date()\r\n\r\n  return inputDate.setHours(0, 0, 0, 0) === todaysDate.setHours(0, 0, 0, 0)\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, ErrorDisplay, Spinner, useAlerts } from 'components'\r\nimport { PhoneResponse } from './types'\r\nimport { HelpSection, PhoneDetails, PhonesInStorage } from './components'\r\nimport { Route, Switch, useHistory } from 'react-router'\r\nimport { useConfig, usePhoneStorage, useFetch } from 'hooks'\r\nimport {\r\n  CampaignFeedback,\r\n  Feedback,\r\n  FeedbackExtended,\r\n  StoragePhone,\r\n} from 'types'\r\nimport { useThrottle } from 'hooks/utils'\r\n\r\nconst Telefonica: React.FC = () => {\r\n  const [phone, setPhone] = useState<PhoneResponse['phone'] | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const [error, setError] = useState<boolean>(false)\r\n  const [comments, setComments] = useState<string>('')\r\n\r\n  const PhoneStorage = usePhoneStorage()\r\n\r\n  const { advancedModeEnabled } = useConfig()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const fetchPhone = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      setError(false)\r\n      const [err, newPhone] = await Fetch().get<PhoneResponse>('next')\r\n\r\n      if (err) throw err\r\n\r\n      setPhone(newPhone.phone)\r\n      setComments(newPhone.phone.comments)\r\n      AlertManager.show('new-phone-received', {\r\n        timeout: 5000,\r\n      })\r\n      PhoneStorage.add({\r\n        id: newPhone.phone.id,\r\n        status: null,\r\n        phone: newPhone.phone.phone,\r\n        savedOn: Date.now(),\r\n        restore: {\r\n          ...newPhone.original,\r\n          lastStatus: null,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.log({ e })\r\n      setError(true)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [AlertManager, PhoneStorage, Fetch])\r\n\r\n  useEffect(() => {\r\n    fetchPhone()\r\n  }, [fetchPhone])\r\n\r\n  const onFeedback = async (feedback: FeedbackExtended) => {\r\n    if (!phone) return\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: phone.id,\r\n        answered: feedback,\r\n        comments: comments,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      fetchPhone()\r\n      // We store rushed phones on front end as though they answered\r\n      // It doesn't really matter because we don't allow editing those anyway\r\n      PhoneStorage.update(\r\n        phone.id,\r\n        feedback === CampaignFeedback.RUSHED ? Feedback.ANSWERED : feedback\r\n      )\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const onEditRequest = async (\r\n    storagePhone: StoragePhone,\r\n    newStatus: Feedback\r\n  ) => {\r\n    try {\r\n      const [err] = await Fetch().put('update_phone', {\r\n        id: storagePhone.id,\r\n        answered: newStatus,\r\n        restore: storagePhone.restore,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      PhoneStorage.update(storagePhone.id, newStatus)\r\n      AlertManager.show('edit-success')\r\n    } catch {\r\n      AlertManager.hideAll()\r\n      AlertManager.show('feedback-failed')\r\n    }\r\n  }\r\n\r\n  const sendFeedback = useThrottle(onFeedback, 5000)\r\n  const editNumber = useThrottle(onEditRequest, 5000)\r\n\r\n  const history = useHistory()\r\n\r\n  const openHelpSection = () => history.push('/telefonica/help')\r\n  const closeHelpSection = () => history.goBack()\r\n\r\n  const handleComments = (c: string) => setComments(c)\r\n\r\n  if (error) return <ErrorDisplay />\r\n\r\n  if (isLoading || !phone) return <Spinner fulfill container />\r\n\r\n  const Main = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica</title>\r\n      </Helmet>\r\n      <Alert name=\"new-phone-received\" position=\"top\" variant=\"success\">\r\n        <div className=\"text-center\">✨ ¡Nuevo número recibido! ✨🎉</div>\r\n      </Alert>\r\n      <Alert name=\"feedback-failed\" position=\"top\" variant=\"failure\">\r\n        <div className=\"text-center\">No se pudo enviar su feedback 😢</div>\r\n      </Alert>\r\n      <Alert name=\"edit-success\" position=\"bottom\" variant=\"success\">\r\n        <div className=\"text-center\">Número actualizado.</div>\r\n      </Alert>\r\n      <PhoneDetails\r\n        phone={phone}\r\n        comments={comments}\r\n        handleComments={handleComments}\r\n        openHelpSection={openHelpSection}\r\n        handlePhoneFeedback={sendFeedback}\r\n      />\r\n      {advancedModeEnabled && (\r\n        <PhonesInStorage\r\n          PhoneStorage={PhoneStorage}\r\n          currentPhoneId={phone.id}\r\n          onEditRequest={editNumber}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n\r\n  const Help = () => (\r\n    <>\r\n      <Helmet>\r\n        <title>{process.env.REACT_APP_CONG_INITIALS} Telefónica Ayuda</title>\r\n      </Helmet>\r\n      <HelpSection close={closeHelpSection} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path=\"/telefonica\" exact render={Main} />\r\n        <Route path=\"/telefonica/help\" exact component={Help} />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport { Telefonica }\r\n","import { RouterLink } from 'components'\r\nimport React from 'react'\r\nimport { Container, Jumbotron } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst AdminPanel: React.FC = () => (\r\n  <>\r\n    <Jumbotron fluid>\r\n      <Container>\r\n        <h1 className=\"display-5\">Panel de Administración</h1>\r\n      </Container>\r\n    </Jumbotron>\r\n    <Container>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/statistics\" background=\"dark\">\r\n          <span>📚</span> Estadísticas\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/add-phones\" background=\"dark\">\r\n          <span>➕</span> Agregar números a la base de datos\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/search-and-edit\" background=\"dark\">\r\n          <span>🔎</span> Buscar y editar\r\n        </RouterLink>\r\n      </Item>\r\n      <Item>\r\n        <RouterLink to=\"/admin-panel/configurations\" background=\"dark\">\r\n          <span>🛠</span> Configuración de la App\r\n        </RouterLink>\r\n      </Item>\r\n    </Container>\r\n  </>\r\n)\r\n\r\nconst Item = styled.div`\r\n  margin: 1em 0;\r\n  background: #343a40 !important;\r\n  padding: 0 1em;\r\n  border-radius: 10px;\r\n\r\n  > a {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport { AdminPanel }\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useFetch } from 'hooks'\r\nimport { Breadcrumb, ErrorDisplay, Spinner } from 'components'\r\nimport { Statistics } from './types'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Estadísticas',\r\n  },\r\n]\r\n\r\nconst StatisticsPanel: React.FC = () => {\r\n  const [data, setData] = useState<Statistics | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const [error, setError] = useState<boolean>(false)\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      setError(false)\r\n      const [err, statistics] = await Fetch().get<Statistics>('statistics')\r\n\r\n      if (err) throw err\r\n\r\n      setData(statistics)\r\n    } catch (e) {\r\n      console.log({ e })\r\n      setError(true)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [Fetch])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  if (error) return <ErrorDisplay />\r\n\r\n  if (isLoading || !data) return <Spinner fulfill container />\r\n\r\n  const { generalData, perMonthData, perDayData } = data\r\n\r\n  const formatDecimals = (n: number) => n.toFixed(2)\r\n\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <Breadcrumb items={breadcrumbItems} />\r\n      <h4 className=\"mb-4\">General</h4>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Números guardados</th>\r\n              <th>No visitar</th>\r\n              <th>Inexistentes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{generalData.totalNumbers}</td>\r\n              <td>\r\n                {generalData.noCall} (\r\n                {formatDecimals(\r\n                  (generalData.noCall * 100) / generalData.totalNumbers\r\n                )}\r\n                %)\r\n              </td>\r\n              <td>\r\n                {generalData.nonExistent} (\r\n                {formatDecimals(\r\n                  (generalData.nonExistent * 100) / generalData.totalNumbers\r\n                )}\r\n                %)\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <h4 className=\"mb-4\">Estadísticas por mes</h4>\r\n\r\n      <small>\r\n        El TA se calcula haciendo: Números únicos existentes / Números totales\r\n        existentes.\r\n      </small>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Mes</th>\r\n              <th>Llamadas</th>\r\n              <th>Números únicos</th>\r\n              <th>Números únicos existentes</th>\r\n              <th>Atendieron</th>\r\n              <th>Territorio abarcado</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {perMonthData.months.map((row, i) =>\r\n              row.date === '07/2020' ? (\r\n                <tr key={i}>\r\n                  <td>{row.date}</td>\r\n                  <td>{row.total + 2088}</td>\r\n                  <td>{row.different + 2088}</td>\r\n                  <td>{row.different + 2088 - row.inexistent}</td>\r\n                  <td>\r\n                    {row.answered} (\r\n                    {formatDecimals(\r\n                      (row.answered * 100) /\r\n                        (row.different + 2088 - row.inexistent)\r\n                    )}\r\n                    %)\r\n                  </td>\r\n                  <td>\r\n                    {formatDecimals(\r\n                      ((row.different + 2088 - row.inexistent) * 100) /\r\n                        perMonthData.totalValidNumbers\r\n                    )}\r\n                    %\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <tr key={i}>\r\n                  <td>{row.date}</td>\r\n                  <td>{row.total}</td>\r\n                  <td>{row.different}</td>\r\n                  <td>{row.different - row.inexistent}</td>\r\n                  <td>\r\n                    {row.answered} (\r\n                    {formatDecimals(\r\n                      (row.answered * 100) / (row.different - row.inexistent)\r\n                    )}\r\n                    %)\r\n                  </td>\r\n                  <td>\r\n                    {formatDecimals(\r\n                      ((row.different - row.inexistent) * 100) /\r\n                        perMonthData.totalValidNumbers\r\n                    )}\r\n                    %\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <h4 className=\"mb-4\">Estadísticas por día</h4>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fecha</th>\r\n              <th>Total de llamadas</th>\r\n              <th>Números únicos</th>\r\n              <th>Atendieron</th>\r\n              <th>No visitar</th>\r\n              <th>Números inexistentes</th>\r\n              <th>Porcentaje de inexistentes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {perDayData.map((row, i) => (\r\n              <tr key={i}>\r\n                <td>{row.date ?? 'Nunca llamados'}</td>\r\n                <td>{row.totalCalls}</td>\r\n                <td>{row.different}</td>\r\n                <td>{row.answered}</td>\r\n                <td>{row.noCall ?? '-'}</td>\r\n                <td>{row.nonExistent ?? '-'}</td>\r\n                <td>\r\n                  {row.date\r\n                    ? Math.round((row.nonExistent * 100) / row.different) + '%'\r\n                    : '-'}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { StatisticsPanel }\r\n","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 400;\r\n  margin-bottom: 0.75em;\r\n\r\n  > span {\r\n    font-size: 0.7em;\r\n  }\r\n`\r\nexport const Description = styled.p`\r\n  > span {\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  > button:not(:nth-of-type(1)) {\r\n    margin-left: 1em;\r\n  }\r\n`\r\n","const getRandomNumber = (): number =>\r\n  parseInt(Math.random().toFixed(1).slice(-1))\r\n\r\nexport const generateRandomNumber = (): string => {\r\n  const numbers = Array(8)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n  numbers.splice(4, 0, '-')\r\n  return numbers.join('')\r\n}\r\n\r\nexport const generateRandomInfo = (): string => {\r\n  const names = [\r\n    'Alicia Gertrudis',\r\n    'Popeye Elmarino',\r\n    'Gervasio Garcia',\r\n    'Francisco Lopez',\r\n  ]\r\n  const addresses = ['Av. San Martín', 'Pozos', 'San Fernando', 'El Jaguar']\r\n\r\n  const randomName = names[Math.floor(Math.random() * names.length)]\r\n  const randomAddress = addresses[Math.floor(Math.random() * names.length)]\r\n\r\n  const randomNumber = Array(3)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n    .join('')\r\n\r\n  return `${randomName}, ${randomAddress} ${randomNumber}`\r\n}\r\n","import { useConfig } from 'hooks'\r\nimport React, { forwardRef, useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Row } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\nimport { generateRandomInfo, generateRandomNumber } from '../utils'\r\n\r\nconst LineIndicator: React.ForwardRefExoticComponent<\r\n  {\r\n    lines: number\r\n  } & React.RefAttributes<unknown>\r\n> = forwardRef(({ lines }, ref) => (\r\n  // @ts-ignore\r\n  <LineIndicatorContainer ref={ref}>\r\n    {Array(lines)\r\n      .fill(1)\r\n      .map((_, i) => (\r\n        <li key={i}>{i + 1}-</li>\r\n      ))}\r\n  </LineIndicatorContainer>\r\n))\r\n\r\ninterface EntryDataProps {\r\n  onNextStep: () => void\r\n  handleSetEntrydata: (data: NewPhone[]) => void\r\n}\r\n\r\nconst EntryData: React.FC<EntryDataProps> = ({\r\n  onNextStep,\r\n  handleSetEntrydata,\r\n}) => {\r\n  const [numbers, setNumbers] = useState<string>('')\r\n  const [additional, setAdditional] = useState<string>('')\r\n  const numberLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n  const additionalLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const setRandomData = () => {\r\n    if (!testModeEnabled) return\r\n    const numbers = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomNumber())\r\n      .join('\\n')\r\n    const info = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomInfo())\r\n      .join('\\n')\r\n\r\n    setNumbers((prev) => prev + numbers + '\\n')\r\n    setAdditional((prev) => prev + info + '\\n')\r\n  }\r\n\r\n  const handleIndicatorsScroll = (type: 'number' | 'additional') => (\r\n    e: React.UIEvent<HTMLTextAreaElement, UIEvent>\r\n  ) => {\r\n    const position: number =\r\n      // @ts-ignore\r\n      e.target.scrollTop\r\n    const el =\r\n      type === 'number'\r\n        ? numberLineIndicatorRef?.current\r\n        : additionalLineIndicatorRef?.current\r\n    if (!el) return\r\n    el.scroll(0, position)\r\n  }\r\n\r\n  const onNumberScroll = handleIndicatorsScroll('number')\r\n  const onAdditionalScroll = handleIndicatorsScroll('additional')\r\n\r\n  const numberLines = numbers.split('\\n').length\r\n  const additionalLines = additional.split('\\n').length\r\n\r\n  useEffect(() => {\r\n    if (numberLines === additionalLines) return\r\n    const missing = numberLines > additionalLines\r\n    const difference = Math.abs(numberLines - additionalLines)\r\n    if (missing) {\r\n      setAdditional((additional) => additional + '\\n'.repeat(difference))\r\n    } else {\r\n      setAdditional((additional) => {\r\n        let lines = additional.split('\\n')\r\n        let pending = difference\r\n        while (lines[lines.length - 1] === '' && pending > 0) {\r\n          lines.pop()\r\n          pending--\r\n        }\r\n        return lines.join('\\n')\r\n      })\r\n    }\r\n  }, [numberLines, additionalLines, numbers])\r\n\r\n  const haveSameAmountOfLines = numberLines === additionalLines\r\n  const haveEmptyNumberLines = numbers\r\n    .split('\\n')\r\n    .some((line) => line.trim() === '')\r\n\r\n  const disableNextStep = !haveSameAmountOfLines || haveEmptyNumberLines\r\n\r\n  const onDone = () => {\r\n    handleSetEntrydata(\r\n      numbers.split('\\n').map((number, index) => ({\r\n        number,\r\n        info: additional.split('\\n')[index],\r\n      }))\r\n    )\r\n    onNextStep()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Paso 1: <span>Ingresar datos</span>\r\n      </Title>\r\n      <Description>\r\n        Ingrese una lista de números en la caja de la izquierda.{' '}\r\n        <span>Separe cada número con un nuevo salto de línea (Enter)</span>.\r\n      </Description>\r\n      <Description>\r\n        Repita lo mismo en la caja de la derecha con la{' '}\r\n        <span>información adicional</span> -dirección, nombre de la persona,\r\n        etc.- que deba acompañar a cada número\r\n        <span> que se corresponda en la misma posición de ordenamiento</span>.\r\n      </Description>\r\n      <Description>\r\n        La información adicional de la caja de la derecha es{' '}\r\n        <span>opcional</span>, puede omitirla. Si desea omitir esa información\r\n        solamente para una fila (número), deje un espacio en blanco en la\r\n        posición de esa línea.\r\n      </Description>\r\n      <Description>\r\n        No se preocupe por comenter errores,{' '}\r\n        <span>podrá revisar la información</span> antes de enviarla{' '}\r\n        <span>en el siguiente paso</span>.\r\n      </Description>\r\n      <Description>\r\n        <span>Consejo:</span> puede copiar y pegar una columna entera de excel\r\n        en cada caja.\r\n      </Description>\r\n      {testModeEnabled && (\r\n        <Button color=\"info\" onClick={setRandomData}>\r\n          Generar datos aleatorios\r\n        </Button>\r\n      )}\r\n      <Row className=\"mt-3\">\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Teléfonos:</h5>\r\n          <LineIndicator lines={numberLines} ref={numberLineIndicatorRef} />\r\n          <TextArea\r\n            value={numbers}\r\n            onChange={(e) => setNumbers(e.target.value)}\r\n            onScroll={onNumberScroll}\r\n            placeholder=\"Ej.: (011) 4754-7845\"\r\n          ></TextArea>\r\n        </Col>\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Información adicional:</h5>\r\n          <LineIndicator\r\n            lines={additionalLines}\r\n            ref={additionalLineIndicatorRef}\r\n          />\r\n          <TextArea\r\n            value={additional}\r\n            onChange={(e) => setAdditional(e.target.value)}\r\n            onScroll={onAdditionalScroll}\r\n            placeholder=\"Ej.: Pepe Mujica - Av. Gral Rodríguez 2084\"\r\n          ></TextArea>\r\n        </Col>\r\n      </Row>\r\n      <Validations>\r\n        <h4>Para avanzar al siguiente paso, se debe cumplir con:</h4>\r\n        <div>\r\n          <Rule valid={!haveEmptyNumberLines}>\r\n            No debe haber filas vacías de números\r\n          </Rule>\r\n          <Rule valid={haveSameAmountOfLines}>\r\n            Números e información adicional deben tener la misma cantidad de\r\n            líneas\r\n          </Rule>\r\n        </div>\r\n      </Validations>\r\n      <Buttons>\r\n        <Button color=\"success\" onClick={onDone} disabled={disableNextStep}>\r\n          Siguiente paso\r\n        </Button>\r\n      </Buttons>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LineIndicatorContainer = styled.ul`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  left: 1.5em;\r\n  margin: 0;\r\n  padding: 0;\r\n  padding-top: 1px;\r\n  line-height: 20px;\r\n  height: 400px;\r\n  width: 3em;\r\n  overflow-y: hidden;\r\n  border-right: 1px dashed #999;\r\n\r\n  li {\r\n    list-style: none;\r\n    font-weight: 500;\r\n    color: #666;\r\n  }\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 400px;\r\n  padding: 0 1em 0 4em;\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst Validations = styled.div`\r\n  margin-top: 2em;\r\n  padding-bottom: 5em;\r\n\r\n  div {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1em;\r\n\r\n    span {\r\n      margin-top: 1em;\r\n    }\r\n  }\r\n`\r\n\r\nconst Rule = styled.span<{ valid: boolean }>`\r\n  color: ${({ theme, valid }) =>\r\n    valid ? theme.text.colors.green : theme.text.colors.red};\r\n\r\n  ::before {\r\n    content: '${({ valid }) => (valid ? '✅' : '❗')}';\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nexport { EntryData }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\n\r\ninterface ReviewProps {\r\n  entryData: NewPhone[]\r\n  onGoBack: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Review: React.FC<ReviewProps> = ({ entryData, onGoBack, onConfirm }) => (\r\n  <Container>\r\n    <Title>\r\n      Segundo paso: <span>Confirmar</span>\r\n    </Title>\r\n    <Description>\r\n      Por favor, revise bien la información y confirme si es correcta.\r\n    </Description>\r\n    <Info>\r\n      {entryData.map(({ number, info }, i) => (\r\n        <>\r\n          <span key={number + i}>\r\n            <span>Número:</span> {number}{' '}\r\n            <span className=\"separator\">{'->'}</span> <span>Info:</span> {info}\r\n          </span>\r\n          <br />\r\n        </>\r\n      ))}\r\n    </Info>\r\n    <Buttons>\r\n      <Button color=\"info\" outline onClick={onGoBack}>\r\n        Volver\r\n      </Button>\r\n      <Button color=\"success\" onClick={onConfirm}>\r\n        Confirmar y guardar\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nconst Info = styled.p`\r\n  width: 100%;\r\n  height: 400px;\r\n  background: ${({ theme }) =>\r\n    theme.darkMode ? '#fff' : theme.text.colors.black};\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  span {\r\n    color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.black : '#fff'};\r\n    display: inline-block;\r\n    margin-bottom: 0.1em;\r\n\r\n    span:not(.separator) {\r\n      background-color: #999;\r\n      padding: 2px 10px;\r\n      border-radius: 3px;\r\n    }\r\n\r\n    .separator {\r\n      display: inline-block;\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Review }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { AddPhoneResponse } from '../types'\r\n\r\ninterface ResultProps {\r\n  response: AddPhoneResponse\r\n  onAddMore: () => void\r\n  onBackToAdminPanel: () => void\r\n}\r\n\r\nconst Result: React.FC<ResultProps> = ({\r\n  response,\r\n  onAddMore,\r\n  onBackToAdminPanel,\r\n}) => (\r\n  <Container>\r\n    <Title>¡Listo! 🌟</Title>\r\n    <h4>Números agregados: {response.successCount}</h4>\r\n    <h4>Números que no se agregaron(*): {response.failureCount}</h4>\r\n    <Description className=\"mt-3\">\r\n      * Cuando un número no se agrega, por lo general se debe a que es\r\n      duplicado.\r\n    </Description>\r\n    <Buttons className=\"mt-5\">\r\n      <Button color=\"info\" onClick={onAddMore}>\r\n        Agregar más números\r\n      </Button>\r\n      <Button color=\"success\" onClick={onBackToAdminPanel}>\r\n        Volver al panel de administrador\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nexport { Result }\r\n","import React, { useState } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\r\nimport { AddPhonePayload, AddPhoneResponse, NewPhone } from './types'\r\nimport { EntryData, Result, Review } from './components'\r\nimport { useFetch } from 'hooks'\r\nimport { css } from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Agregar Números',\r\n  },\r\n]\r\n\r\nconst AddPhones: React.FC = () => {\r\n  const [step, setStep] = useState<number>(1)\r\n  const [entryData, setEntryData] = useState<NewPhone[]>([])\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [serverResponse, setServerResponse] = useState<AddPhoneResponse | null>(\r\n    null\r\n  )\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const history = useHistory()\r\n\r\n  const handleNextStep = () => setStep(step + 1)\r\n\r\n  const handleSetEntrydata = (data: NewPhone[]) => setEntryData(data)\r\n\r\n  const handleBackToStepOne = () => setStep(1)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const [err, response] = await Fetch().post<\r\n        AddPhonePayload,\r\n        AddPhoneResponse\r\n      >('add_numbers', { phones: entryData })\r\n\r\n      if (err) throw err\r\n\r\n      setServerResponse(response)\r\n      setStep(3)\r\n    } catch {\r\n      AlertManager.show('add-phones-error', { timeout: 13000 })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setStep(1)\r\n    setEntryData([])\r\n    setServerResponse(null)\r\n  }\r\n\r\n  const handleBackToAdmin = () => {\r\n    history.push('/admin-panel')\r\n  }\r\n\r\n  if (isLoading) return <Spinner container fulfill />\r\n\r\n  return (\r\n    <Container className=\"pt-3 pb-5\">\r\n      <Alert\r\n        name=\"add-phones-error\"\r\n        position=\"bottom\"\r\n        containerCSS={FailAlertCss}\r\n      >\r\n        Hubo un error guardando los nuevos números. Por favor, revise los datos\r\n        e intente de nuevo. Si el problema persiste, contacte al desarrollador\r\n        para solucionarlo.{' '}\r\n      </Alert>\r\n      <Breadcrumb items={breadcrumbItems} />\r\n      {step === 1 && (\r\n        <EntryData\r\n          onNextStep={handleNextStep}\r\n          handleSetEntrydata={handleSetEntrydata}\r\n        />\r\n      )}\r\n      {step === 2 && (\r\n        <Review\r\n          entryData={entryData}\r\n          onGoBack={handleBackToStepOne}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      )}\r\n      {step === 3 && serverResponse && (\r\n        <Result\r\n          response={serverResponse}\r\n          onAddMore={reset}\r\n          onBackToAdminPanel={handleBackToAdmin}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst FailAlertCss = css`\r\n  background-color: ${({ theme }) => theme.text.colors.red};\r\n`\r\n\r\nexport { AddPhones }\r\n","import React from 'react'\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from 'reactstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Filters } from '../types'\r\nimport { useRerender } from 'hooks/utils'\r\n\r\nconst Error: React.FC = ({ children }) => (\r\n  <span className=\"text-danger\">{children}</span>\r\n)\r\n\r\nconst delocalizeDateString = (date: string): string =>\r\n  date.split('/').reverse().join('-')\r\n\r\ninterface SearchFormProps {\r\n  onSearch: (filters: Filters) => void\r\n}\r\n\r\nconst SearchForm: React.FC<SearchFormProps> = ({ onSearch }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isDirty, isSubmitting, isValid },\r\n  } = useForm<Required<Filters>>({\r\n    mode: 'all',\r\n  })\r\n\r\n  const onApplyFilters = ({\r\n    info,\r\n    number,\r\n    id,\r\n    answeredOn,\r\n    calledOn,\r\n    noWeekends,\r\n    noCall,\r\n    nonExistent,\r\n  }: Required<Filters>) => {\r\n    const filters: Filters = {}\r\n\r\n    info && (filters.info = info)\r\n    number && (filters.number = number)\r\n    id && (filters.id = id)\r\n    answeredOn &&\r\n      (answeredOn === 'Nunca'\r\n        ? (filters.answeredOn = 'never')\r\n        : (filters.answeredOn = delocalizeDateString(answeredOn)))\r\n    calledOn &&\r\n      (calledOn === 'Nunca'\r\n        ? (filters.calledOn = 'never')\r\n        : (filters.calledOn = delocalizeDateString(calledOn)))\r\n    noWeekends && (filters.noWeekends = noWeekends)\r\n    noCall && (filters.noCall = noCall)\r\n    nonExistent && (filters.nonExistent = nonExistent)\r\n\r\n    onSearch(filters)\r\n  }\r\n\r\n  const { forceUpdate } = useRerender()\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-secondary d-block mb-3\">\r\n        Todos los campos son opcionales.\r\n      </span>\r\n      <Form onSubmit={handleSubmit(onApplyFilters)}>\r\n        <Row>\r\n          <Col md=\"2\">\r\n            <FormGroup>\r\n              <Label for=\"id\">ID</Label>\r\n              <Input id=\"id\" name=\"id\" innerRef={register} autoComplete=\"off\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup>\r\n              <Label for=\"number\">Número</Label>\r\n              <Input\r\n                id=\"number\"\r\n                name=\"number\"\r\n                innerRef={register}\r\n                autoComplete=\"off\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"info\">Información</Label>\r\n              <Input\r\n                id=\"info\"\r\n                name=\"info\"\r\n                innerRef={register}\r\n                autoComplete=\"off\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"answeredOn\">Última vez atendido el</Label>\r\n              <Input\r\n                id=\"answeredOn\"\r\n                name=\"answeredOn\"\r\n                innerRef={register({\r\n                  pattern: /^(\\d{2}\\/\\d{2}\\/\\d{4}|Nunca)$/,\r\n                })}\r\n                placeholder=\"Ej.: 13/04/2020\"\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.answeredOn && (\r\n                <Error>\r\n                  Formato inválido, debe ser dia/mes/año, 'Nunca' o dejar vacío.\r\n                </Error>\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  checked={getValues('answeredOn') === 'Nunca'}\r\n                  onChange={(e) => {\r\n                    setValue('answeredOn', e.target.checked ? 'Nunca' : '')\r\n                    forceUpdate()\r\n                  }}\r\n                />\r\n                Nunca antes atendió\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"calledOn\">Última vez llamado el</Label>\r\n              <Input\r\n                id=\"calledOn\"\r\n                name=\"calledOn\"\r\n                innerRef={register({\r\n                  pattern: /^(\\d{2}\\/\\d{2}\\/\\d{4}|Nunca)$/,\r\n                })}\r\n                placeholder=\"Ej.: 13/04/2020\"\r\n                autoComplete=\"off\"\r\n              />\r\n\r\n              {errors.calledOn && (\r\n                <Error>\r\n                  Formato inválido, debe ser dia/mes/año, 'Nunca' o dejar vacío.\r\n                </Error>\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  checked={getValues('calledOn') === 'Nunca'}\r\n                  onChange={(e) => {\r\n                    setValue('calledOn', e.target.checked ? 'Nunca' : '')\r\n                    forceUpdate()\r\n                  }}\r\n                />\r\n                Nunca antes llamado\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"noWeekends\" innerRef={register} />\r\n                No llamar los fines de semana\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"noCall\" innerRef={register} />\r\n                No visitar\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"nonExistent\" innerRef={register} />\r\n                No existente\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Button block outline onClick={() => reset()}>\r\n              Limpiar campos\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={!isDirty || !isValid || isSubmitting}\r\n              color=\"primary\"\r\n              block\r\n            >\r\n              Buscar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SearchForm }\r\n","import React from 'react'\r\nimport { Button, Table } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Phone } from 'types'\r\n\r\ninterface SearchResultProps {\r\n  entries: Phone[]\r\n  onEditRequest: (phone: Phone) => void\r\n  onDeleteRequest: (id: number) => void\r\n}\r\n\r\nconst SearchResult: React.FC<SearchResultProps> = ({\r\n  entries,\r\n  onEditRequest,\r\n  onDeleteRequest,\r\n}) => (\r\n  <>\r\n    <h3>Resultados: {entries.length}</h3>\r\n    <span className=\"text-secondary\">\r\n      * Se muestra un máximo de 100 números por búsqueda.\r\n    </span>\r\n    <Table striped responsive>\r\n      <Thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Número</th>\r\n          <th>Info</th>\r\n          <th>Última vez llamado</th>\r\n          <th>Última vez que atendió</th>\r\n          <th>Comentarios</th>\r\n          <th>Días pospuesto</th>\r\n          <th>Características</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {entries.map((phone) => (\r\n          <tr key={phone.id}>\r\n            <td>{phone.id}</td>\r\n            <PhoneCell>{phone.phone}</PhoneCell>\r\n            <td>{phone.info}</td>\r\n            <td>{phone.unansweredDate || phone.fulfilledOn || 'Nunca'}</td>\r\n            <td>{phone.answeredOn || 'Nunca'}</td>\r\n            <td>{phone.comments}</td>\r\n            <td>{phone.postponedDays}</td>\r\n            <td>\r\n              {[\r\n                phone.noCall && 'No visitar',\r\n                phone.nonExistent && 'No existe',\r\n                phone.noWeekends && 'No llamar los finde',\r\n              ]\r\n                .filter(Boolean)\r\n                .join(', ')}\r\n            </td>\r\n            <ActionCell>\r\n              <Button color=\"warning\" onClick={() => onEditRequest(phone)}>\r\n                Editar\r\n              </Button>\r\n              <Button color=\"danger\" onClick={() => onDeleteRequest(phone.id)}>\r\n                Borrar\r\n              </Button>\r\n            </ActionCell>\r\n          </tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  </>\r\n)\r\n\r\nconst Thead = styled.thead`\r\n  text-align: center;\r\n\r\n  > tr > th {\r\n    vertical-align: middle;\r\n  }\r\n`\r\n\r\nconst Tbody = styled.tbody`\r\n  text-align: center;\r\n`\r\n\r\nconst PhoneCell = styled.td`\r\n  white-space: nowrap;\r\n`\r\n\r\nconst ActionCell = styled.td`\r\n  white-space: nowrap;\r\n\r\n  button:not(:first-of-type) {\r\n    margin-left: 1em;\r\n  }\r\n`\r\n\r\nexport { SearchResult }\r\n","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from 'reactstrap'\r\nimport { Alert, Spinner, useAlerts } from 'components'\r\nimport { useFetch } from 'hooks'\r\nimport { Phone } from 'types'\r\n\r\ntype Fields = Pick<\r\n  Phone,\r\n  | 'comments'\r\n  | 'info'\r\n  | 'noCall'\r\n  | 'nonExistent'\r\n  | 'postponedDays'\r\n  | 'phone'\r\n  | 'noWeekends'\r\n>\r\n\r\ntype EditableFields = {\r\n  [k in keyof Fields]: NonNullable<Fields[k]>\r\n}\r\n\r\ninterface EditPhoneProps {\r\n  phone: Phone\r\n  onBack: () => void\r\n  onUpdated: (updatedPhone: Phone) => void\r\n}\r\n\r\nconst EditPhone: React.FC<EditPhoneProps> = ({ phone, onBack, onUpdated }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    formState: { isDirty, isValid },\r\n  } = useForm<EditableFields>({\r\n    mode: 'all',\r\n    defaultValues: {\r\n      phone: phone.phone,\r\n      comments: phone.comments,\r\n      info: phone.info ?? '',\r\n      noCall: phone.noCall,\r\n      nonExistent: phone.nonExistent,\r\n      postponedDays: phone.postponedDays,\r\n      noWeekends: phone.noWeekends,\r\n    },\r\n  })\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const Fetch = useFetch()\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const onSaveEdition = async (formData: EditableFields) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, updatedPhone] = await Fetch().put<\r\n        EditableFields,\r\n        { phone: Phone }\r\n      >(`phones/${phone.id}`, formData)\r\n\r\n      if (err) throw err\r\n\r\n      onUpdated(updatedPhone.phone)\r\n      AlertManager.show('update-success')\r\n    } catch {\r\n      AlertManager.show('update-error')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"update-success\" position=\"top\" variant=\"success\">\r\n        ¡Número actualizado con éxito! ✨\r\n      </Alert>\r\n      <Alert name=\"update-error\" position=\"bottom\" variant=\"failure\">\r\n        No se pudo actualizar el teléfono. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Container className=\"pt-4\">\r\n        <h1>Editar número</h1>\r\n        <Form onSubmit={handleSubmit(onSaveEdition)}>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Número</Label>\r\n                <Input name=\"phone\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Info</Label>\r\n                <Input name=\"info\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Días pospuesto</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"postponedDays\"\r\n                  innerRef={register({ validate: (d) => d >= 0 })}\r\n                />\r\n              </FormGroup>\r\n              {errors.postponedDays && (\r\n                <span className=\"text-danger\">Valor inválido</span>\r\n              )}\r\n            </Col>\r\n            <Col md=\"12\">\r\n              <FormGroup>\r\n                <Label>Comentarios</Label>\r\n                <Input name=\"comments\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"noWeekends\"\r\n                    innerRef={register}\r\n                  />\r\n                  No llamar los finde\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"noCall\" innerRef={register} />\r\n                  No visitar\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"nonExistent\"\r\n                    innerRef={register}\r\n                  />\r\n                  No existente\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <Button outline block onClick={onBack}>\r\n                Volver atrás\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <Button\r\n                type=\"submit\"\r\n                block\r\n                color=\"primary\"\r\n                disabled={!isDirty || !isValid}\r\n              >\r\n                {isLoading ? <Spinner fulfill /> : 'Guardar'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { EditPhone }\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport { useConfig, useFetch } from 'hooks'\r\nimport { Phone } from 'types'\r\nimport {\r\n  Alert,\r\n  Spinner,\r\n  useAlerts,\r\n  useConfirmationModal,\r\n  ConfirmationModal,\r\n  Breadcrumb,\r\n} from 'components'\r\nimport { EditPhone, SearchForm, SearchResult } from './components'\r\nimport { Filters } from './types'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Buscar y editar',\r\n  },\r\n]\r\n\r\nconst SearchAndEdit: FunctionComponent = () => {\r\n  const [searchResult, setSearchResult] = useState<Phone[] | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const [editingPhone, setEditingPhone] = useState<Phone | null>(null)\r\n\r\n  const [isDeleting, setIsDeleting] = useState<boolean>(false)\r\n\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const {\r\n    isModalOpen,\r\n    data: idToDelete,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset: resetConfirmationModal,\r\n  } = useConfirmationModal<number>()\r\n\r\n  useEffect(() => {\r\n    setSearchResult(null)\r\n    setEditingPhone(null)\r\n  }, [testModeEnabled])\r\n\r\n  const Fetch = useFetch()\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const handleSearch = async (filters: Filters) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, phones] = await Fetch().get<Phone[]>({\r\n        path: 'phones',\r\n        params: Object.entries(filters)\r\n          .map(([k, v]) => [k, typeof v !== 'boolean' ? v : v ? 1 : 0])\r\n          .reduce(\r\n            (acc, [k, v]) => ({ ...acc, [k]: v }),\r\n            {} as Filters\r\n          ) as Record<string, string>,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      setSearchResult(phones)\r\n    } catch {\r\n      AlertManager.show('search-error')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleEditRequest = (phone: Phone) => setEditingPhone(phone)\r\n\r\n  const handleDeleteRequest = (id: number) => askEditConfirmation(id)\r\n\r\n  const confirmDeletion = async () => {\r\n    try {\r\n      setIsDeleting(true)\r\n\r\n      const [err] = await Fetch().delete(`phones/${idToDelete}`)\r\n\r\n      if (err) throw err\r\n\r\n      resetConfirmationModal()\r\n      setSearchResult(searchResult!.filter((p) => p.id !== idToDelete))\r\n    } catch {\r\n      AlertManager.show('deletion-error')\r\n    } finally {\r\n      setIsDeleting(false)\r\n    }\r\n  }\r\n\r\n  const handleBack = () => setEditingPhone(null)\r\n\r\n  const handleUpdatedPhone = (updatedPhone: Phone) =>\r\n    searchResult &&\r\n    setSearchResult(\r\n      searchResult.map((p) => (p.id === updatedPhone.id ? updatedPhone : p))\r\n    )\r\n\r\n  if (editingPhone !== null)\r\n    return (\r\n      <EditPhone\r\n        phone={editingPhone}\r\n        onBack={handleBack}\r\n        onUpdated={handleUpdatedPhone}\r\n      />\r\n    )\r\n\r\n  const phoneToDelete =\r\n    idToDelete !== null && searchResult?.find((p) => p.id === idToDelete)!\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"search-error\" position=\"top\" variant=\"failure\">\r\n        No se pudo buscar. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Alert name=\"deletion-error\" position=\"top\" variant=\"failure\">\r\n        No se pudo eliminar el número. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Container className=\"pt-4 mb-5\">\r\n        <Breadcrumb items={breadcrumbItems} />\r\n        <SearchForm onSearch={handleSearch} />\r\n      </Container>\r\n      <Container fluid>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          searchResult && (\r\n            <SearchResult\r\n              entries={searchResult}\r\n              onEditRequest={handleEditRequest}\r\n              onDeleteRequest={handleDeleteRequest}\r\n            />\r\n          )\r\n        )}\r\n      </Container>\r\n      {idToDelete !== null && phoneToDelete && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={confirmDeletion}\r\n          title=\"¿Seguro que desea eliminar el siguiente número?\"\r\n          body={\r\n            isDeleting ? (\r\n              <Spinner fulfill />\r\n            ) : (\r\n              <div>\r\n                <span className=\"d-block\">ID: {phoneToDelete.id}</span>\r\n                <span className=\"d-block\">Número: {phoneToDelete.phone}</span>\r\n                <span className=\"d-block\">Info: {phoneToDelete.info}</span>\r\n              </div>\r\n            )\r\n          }\r\n          buttonColor=\"danger\"\r\n          confirmationLabel=\"Eliminar para siempre\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SearchAndEdit }\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useConfig, useFetch } from 'hooks'\r\nimport { Configurations as TConfigurations, Feedback } from 'types'\r\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\r\nimport { labels } from 'consts'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Configuración de la App',\r\n  },\r\n]\r\n\r\nconst translations: Record<\r\n  Exclude<keyof TConfigurations, 'hiddenButtons'>,\r\n  string\r\n> = {\r\n  campaignMode: 'Modo de campaña',\r\n  unansweredMaxAttemps: 'Máximo de intentos para no en casa',\r\n  answeringMachineMaxAttemps: 'Máximo de intentos para el contestador',\r\n  answeringMachinePostponedDays:\r\n    'Días que se pospone un número al dejar un mensaje en el contestador',\r\n  postponedButtonDays:\r\n    'Días que se pospone un número al tocar el botón \"Aplazar\"',\r\n  nonExistentPostponedDays: 'Días que queda congelado un número inexistente',\r\n}\r\n\r\ntype EditableConfigurations = {\r\n  campaignMode: boolean\r\n  unansweredMaxAttemps: string\r\n  answeringMachineMaxAttemps: string\r\n  answeringMachinePostponedDays: string\r\n  postponedButtonDays: string\r\n  nonExistentPostponedDays: string\r\n  button0shown: boolean\r\n  button1shown: boolean\r\n  button2shown: boolean\r\n  button3shown: boolean\r\n  button4shown: boolean\r\n  button5shown: boolean\r\n  button6shown: boolean\r\n}\r\n\r\nconst FeedbackValues = Object.values(Feedback).filter(\r\n  (x) => typeof x === 'number'\r\n) as number[]\r\n\r\nconst Configurations: React.FC = () => {\r\n  const { configurations, updateConfigs } = useConfig()\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const Fetch = useFetch()\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    getValues,\r\n    formState: { isDirty, isValid },\r\n  } = useForm<EditableConfigurations>({\r\n    mode: 'all',\r\n    defaultValues: {\r\n      campaignMode: configurations.campaignMode,\r\n      unansweredMaxAttemps: configurations.unansweredMaxAttemps.toString(),\r\n      answeringMachineMaxAttemps: configurations.answeringMachineMaxAttemps.toString(),\r\n      answeringMachinePostponedDays: configurations.answeringMachinePostponedDays.toString(),\r\n      postponedButtonDays: configurations.postponedButtonDays.toString(),\r\n      nonExistentPostponedDays: configurations.nonExistentPostponedDays.toString(),\r\n      ...FeedbackValues.reduce(\r\n        (acc, curr) => ({\r\n          ...acc,\r\n          [`button${curr}shown`]: !configurations.hiddenButtons\r\n            .split(',')\r\n            .includes(curr.toString()),\r\n        }),\r\n        {}\r\n      ),\r\n    },\r\n  })\r\n\r\n  const saveConfig = async (formData: EditableConfigurations) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const payload = {} as TConfigurations\r\n\r\n      payload.campaignMode = formData.campaignMode\r\n      payload.unansweredMaxAttemps = parseInt(formData.unansweredMaxAttemps)\r\n      payload.answeringMachineMaxAttemps = parseInt(\r\n        formData.answeringMachineMaxAttemps\r\n      )\r\n      payload.answeringMachinePostponedDays = parseInt(\r\n        formData.answeringMachinePostponedDays\r\n      )\r\n      payload.postponedButtonDays = parseInt(formData.postponedButtonDays)\r\n      payload.nonExistentPostponedDays = parseInt(\r\n        formData.nonExistentPostponedDays\r\n      )\r\n\r\n      payload.hiddenButtons = Object.entries(formData)\r\n        .filter(([k]) => /button\\dshown/.test(k))\r\n        .reduce((acc, [key, value]) => {\r\n          if (value === true) return acc\r\n          const number = key.match(/button(\\d)shown/)![1]\r\n          return [...acc, number]\r\n        }, [] as string[])\r\n        .join(',')\r\n\r\n      const [err, configs] = await Fetch().put<\r\n        TConfigurations,\r\n        { configs: TConfigurations }\r\n      >('/configurations', payload)\r\n\r\n      if (err) throw err\r\n\r\n      updateConfigs(configs.configs)\r\n      AlertManager.show('update-success')\r\n    } catch {\r\n      AlertManager.show('update-error')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const campaignModeActive =\r\n    getValues('campaignMode') ?? configurations.campaignMode\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"update-success\" position=\"top\" variant=\"success\">\r\n        ¡Configuraciones actualizadas con éxito! ✨\r\n      </Alert>\r\n      <Alert name=\"update-error\" position=\"bottom\" variant=\"failure\">\r\n        No se pudo actualizar las configuraciones. Por favor, intente de nuevo.\r\n      </Alert>\r\n\r\n      <Container className=\"pt-3 mb-5\">\r\n        <Breadcrumb items={breadcrumbItems} />\r\n        <hr />\r\n\r\n        <Form onSubmit={handleSubmit(saveConfig)}>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"checkbox\" name=\"campaignMode\" innerRef={register} />\r\n              <CampaignLabel active={campaignModeActive}>\r\n                {translations.campaignMode}{' '}\r\n                {campaignModeActive ? 'activado' : 'desactivado'}.\r\n              </CampaignLabel>\r\n            </Label>\r\n          </FormGroup>\r\n          <div>\r\n            Cuando el modo campaña está activado, los publicadores verán un solo\r\n            botón de \"siguiente\" en vez de los {FeedbackValues.length} que\r\n            normalemente se usan. Esto sirve para agilizar las llamadas en caso\r\n            de campaña.\r\n          </div>\r\n          <hr />\r\n          <FormGroup>\r\n            <Label>{translations.unansweredMaxAttemps}</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"unansweredMaxAttemps\"\r\n              innerRef={register({ validate: (d) => d >= 1 })}\r\n            />\r\n            {errors.unansweredMaxAttemps && (\r\n              <span className=\"text-danger\">Valor inválido</span>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>{translations.answeringMachineMaxAttemps}</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"answeringMachineMaxAttemps\"\r\n              innerRef={register({ validate: (d) => d >= 1 })}\r\n            />\r\n            {errors.answeringMachineMaxAttemps && (\r\n              <span className=\"text-danger\">Valor inválido</span>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>{translations.answeringMachinePostponedDays}</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"answeringMachinePostponedDays\"\r\n              innerRef={register({ validate: (d) => d >= 1 })}\r\n            />\r\n            {errors.answeringMachinePostponedDays && (\r\n              <span className=\"text-danger\">Valor inválido</span>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>{translations.postponedButtonDays}</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"postponedButtonDays\"\r\n              innerRef={register({ validate: (d) => d >= 1 })}\r\n            />\r\n            {errors.postponedButtonDays && (\r\n              <span className=\"text-danger\">Valor inválido</span>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>{translations.nonExistentPostponedDays}</Label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"nonExistentPostponedDays\"\r\n              innerRef={register({ validate: (d) => d >= 1 })}\r\n            />\r\n            {errors.nonExistentPostponedDays && (\r\n              <span className=\"text-danger\">Valor inválido</span>\r\n            )}\r\n          </FormGroup>\r\n          <hr />\r\n          <p>Botones que los publicadores pueden usar:</p>\r\n          <Row>\r\n            {FeedbackValues.map((i) => (\r\n              <Col md=\"6\" key={i}>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      name={`button${i}shown`}\r\n                      innerRef={register}\r\n                    />\r\n                    {labels[i as Feedback]}\r\n                  </Label>\r\n                </FormGroup>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <hr />\r\n          <Button\r\n            type=\"submit\"\r\n            block\r\n            color=\"primary\"\r\n            disabled={!isDirty || !isValid || isLoading}\r\n          >\r\n            {isLoading ? <Spinner fulfill /> : 'Guardar configuraciones'}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nconst CampaignLabel = styled.span<{ active: boolean }>`\r\n  color: ${({ active, theme }) =>\r\n    active ? theme.text.colors.green : theme.text.colors.red};\r\n`\r\n\r\nexport { Configurations }\r\n","import React, { useEffect, useLayoutEffect } from 'react'\r\nimport {\r\n  BrowserRouter as RouterProvider,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\nimport { Redirect, RouteProps, useHistory, useLocation } from 'react-router'\r\nimport { ThemeProvider } from 'theme'\r\nimport { ContextProviders } from 'contexts'\r\nimport { useAuth, useConfig, useFetch } from 'hooks'\r\nimport { ErrorDisplay, Layout, Spinner } from './components'\r\nimport {\r\n  AdminPanel,\r\n  Login,\r\n  Telefonica,\r\n  StatisticsPanel,\r\n  AddPhones,\r\n  SearchAndEdit,\r\n  Configurations,\r\n} from './features'\r\nimport './app.css'\r\n\r\ninterface ProtectedRouteProps extends RouteProps {\r\n  condition: boolean\r\n}\r\n\r\nconst DummyComponent = () => null\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  component,\r\n  condition,\r\n  ...restProps\r\n}) => (\r\n  <Route {...restProps} component={condition ? component : DummyComponent} />\r\n)\r\n\r\nconst MainRouter: React.FC = () => {\r\n  const { isAuth, isAdmin } = useAuth()\r\n  const { configsLoading, configsError, getConfigs } = useConfig()\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const Fetch = useFetch()\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isAuth && !location.pathname.includes('/login')) history.push('/login')\r\n    if (isAuth && location.pathname.includes('/login'))\r\n      isAdmin ? history.push('/admin-panel') : history.push('/telefonica')\r\n  }, [isAuth, isAdmin, location.pathname, history])\r\n\r\n  useEffect(() => {\r\n    if (isAuth) getConfigs(Fetch)\r\n  }, [isAuth, Fetch, getConfigs])\r\n\r\n  if (configsLoading) return <Spinner container fulfill />\r\n\r\n  if (configsError) return <ErrorDisplay />\r\n\r\n  return (\r\n    <Switch>\r\n      {/* Common */}\r\n      <Route path=\"/login\" exact component={Login} />\r\n\r\n      {/* User */}\r\n      <ProtectedRoute\r\n        path=\"/telefonica\"\r\n        component={Telefonica}\r\n        condition={isAuth}\r\n      />\r\n\r\n      {/* Admin */}\r\n      <ProtectedRoute\r\n        path=\"/admin-panel\"\r\n        exact\r\n        component={AdminPanel}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/statistics\"\r\n        exact\r\n        component={StatisticsPanel}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/add-phones\"\r\n        exact\r\n        component={AddPhones}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/search-and-edit\"\r\n        exact\r\n        component={SearchAndEdit}\r\n        condition={isAdmin}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin-panel/configurations\"\r\n        exact\r\n        component={Configurations}\r\n        condition={isAdmin}\r\n      />\r\n\r\n      {/* Misc */}\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst App: React.FC = () => (\r\n  <ContextProviders>\r\n    <ThemeProvider>\r\n      <RouterProvider>\r\n        <Layout>\r\n          <MainRouter />\r\n        </Layout>\r\n      </RouterProvider>\r\n    </ThemeProvider>\r\n  </ContextProviders>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}