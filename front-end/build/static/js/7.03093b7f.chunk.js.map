{"version":3,"sources":["../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","features/Passwords/Passwords.tsx"],"names":["propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","hidden","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length","innerRef","func","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Component","breadcrumbItems","title","linkTo","Passwords","useState","adminPassword","setAdminPassword","userPassword","setUserPassword","noAdminChange","setNoAdminChange","noUserChange","setNoUserChange","isLoading","setIsLoading","Fetch","useFetch","AlertManager","useAlerts","onSubmit","a","put","admin","undefined","user","err","show","submitDisabled","fulfill","container","name","position","variant","Container","items","InputContainer","Error","TextInput","id","value","onChange","e","target","autoComplete","Input","type","checked","Button","color","styled","div","css","p","theme","text","colors","red"],"mappings":"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","file":"static/js/7.03093b7f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import React, { useState } from 'react'\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap'\nimport styled, { css } from 'styled'\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\nimport { useFetch } from 'hooks'\nimport { PasswordsPayload } from './types'\n\nconst breadcrumbItems = [\n  {\n    title: 'Panel de Administración',\n    linkTo: '/admin-panel',\n  },\n  {\n    title: 'Cambiar contraseñas',\n  },\n]\n\nconst Passwords: React.FC = () => {\n  const [adminPassword, setAdminPassword] = useState<string>('')\n  const [userPassword, setUserPassword] = useState<string>('')\n  const [noAdminChange, setNoAdminChange] = useState<boolean>(true)\n  const [noUserChange, setNoUserChange] = useState<boolean>(true)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  const handleAdmin = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setAdminPassword(e.target.value)\n\n  const handleUser = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setUserPassword(e.target.value)\n\n  const Fetch = useFetch()\n  const { AlertManager } = useAlerts()\n\n  const onSubmit = async () => {\n    try {\n      setIsLoading(true)\n\n      const [err] = await Fetch().put<PasswordsPayload>('auth/passwords', {\n        admin: adminPassword || undefined,\n        user: userPassword || undefined,\n      })\n\n      if (err) throw err\n\n      AlertManager.show('update-passwords-success')\n    } catch {\n      AlertManager.show('update-passwords-error')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const submitDisabled =\n    (noAdminChange && noUserChange) ||\n    (!noAdminChange && !adminPassword) ||\n    (!noUserChange && !userPassword)\n\n  if (isLoading) return <Spinner fulfill container />\n\n  return (\n    <>\n      <Alert name=\"update-passwords-success\" position=\"top\" variant=\"success\">\n        ¡Contraseñas cambiadas!\n      </Alert>\n      <Alert name=\"update-passwords-error\" position=\"bottom\" variant=\"failure\">\n        No se pudo actualizar las contraseñas. Por favor, intente de nuevo.\n      </Alert>\n      <Container className=\"mt-3\">\n        <Breadcrumb items={breadcrumbItems} />\n        <Form onSubmit={onSubmit}>\n          <InputContainer>\n            <FormGroup>\n              <Label for=\"admin\">\n                Contraseña para los <b>administradores</b>\n              </Label>\n              {!noAdminChange && !adminPassword && (\n                <Error>No puede estar vacío</Error>\n              )}\n              <TextInput\n                id=\"admin\"\n                value={adminPassword}\n                onChange={handleAdmin}\n                autoComplete=\"off\"\n                disabled={noAdminChange}\n              />\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    checked={noAdminChange}\n                    onChange={(e) => {\n                      setNoAdminChange(e.target.checked)\n                      setAdminPassword('')\n                    }}\n                  />\n                  No cambiar\n                </Label>\n              </FormGroup>\n            </FormGroup>\n          </InputContainer>\n\n          <InputContainer>\n            <FormGroup>\n              <Label for=\"user\">\n                Contraseña para los <b>publicadores</b>\n              </Label>\n              {!noUserChange && !userPassword && (\n                <Error>No puede estar vacío</Error>\n              )}\n              <TextInput\n                id=\"user\"\n                value={userPassword}\n                onChange={handleUser}\n                autoComplete=\"off\"\n                disabled={noUserChange}\n              />\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    checked={noUserChange}\n                    onChange={(e) => {\n                      setNoUserChange(e.target.checked)\n                      setUserPassword('')\n                    }}\n                  />\n                  No cambiar\n                </Label>\n              </FormGroup>\n            </FormGroup>\n          </InputContainer>\n\n          <Button type=\"submit\" color=\"success\" disabled={submitDisabled}>\n            Cambiar\n          </Button>\n        </Form>\n      </Container>\n    </>\n  )\n}\n\nconst InputContainer = styled.div`\n  max-width: 500px;\n`\n\nconst TextInput = styled(Input)<{ value: string }>`\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      background-color: gray !important;\n    `}\n`\n\nconst Error = styled.p`\n  color: ${({ theme }) => theme.text.colors.red};\n`\n\nexport { Passwords }\n"],"sourceRoot":""}