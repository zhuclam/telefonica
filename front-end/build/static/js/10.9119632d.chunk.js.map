{"version":3,"sources":["features/AdminPanel/index.ts","features/AdminPanel/AdminPanel.tsx","../node_modules/reactstrap/es/Jumbotron.js"],"names":["AdminPanel","currentTerritory","useConfig","useState","isTerritoryChangerOpen","setIsTerritoryChangerOpen","history","useHistory","location","useLocation","StyledJumbotron","fluid","className","TerritoryLabel","TerritoryName","name","toUpperCase","StyledButton","color","onClick","outline","isOpen","defaultValue","onChange","territoryName","push","search","Item","to","background","styled","div","p","span","theme","text","colors","info","Jumbotron","Button","propTypes","tag","tagPropType","PropTypes","bool","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"+GAAA,8D,w3BCOA,IAAMA,EAAuB,WAAO,IAC1BC,EAAqBC,cAArBD,iBADyB,EAG/BE,oBAAkB,GAHa,mBAE1BC,EAF0B,KAEFC,EAFE,KAQ3BC,EAAUC,cACVC,EAAWC,cAOjB,OACE,qCACE,cAACC,EAAD,CAAiBC,OAAK,EAAtB,SACE,cAAC,IAAD,UACE,oBAAIC,UAAU,YAAd,4CAGJ,eAAC,IAAD,WACE,eAACC,EAAD,gCACqB,IACnB,cAACC,EAAD,UAAgBb,EAAiBc,KAAKC,gBAA+B,IACrE,8BACE,cAACC,EAAD,CACEC,MAAM,OACNC,QAzBmB,kBAC7Bd,GAA2BD,IAyBjBgB,SAAS,EAHX,yBAQF,cAAC,IAAD,CAAUC,OAAQjB,EAAlB,SACE,cAAC,IAAD,CACEkB,aAAa,UACbC,SA5BkB,SAACC,GAC7BlB,EAAQmB,KAAR,WAAiBD,EAAjB,wBAA8ChB,EAASkB,SACvDrB,GAA0B,WA8BtB,cAACsB,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,2BACFc,WAAW,OAFb,UAIE,gDAJF,uCAOF,cAACF,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,2BACFc,WAAW,OAFb,UAIE,0CAJF,6CAOF,cAACF,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,gCACFc,WAAW,OAFb,UAIE,gDAJF,sDAOF,cAACF,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,4BACFc,WAAW,OAFb,UAIE,gDAJF,8BAOF,cAACF,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,+BACFc,WAAW,OAFb,UAIE,gDAJF,mCAOF,cAACF,EAAD,UACE,eAAC,IAAD,CACEC,GAAE,WAAM3B,EAAiBc,KAAvB,0BACFc,WAAW,OAFb,UAIE,gDAJF,sCAYGF,EAAOG,IAAOC,IAAV,KAWXlB,EAAiBiB,IAAOE,EAAV,KAKdlB,EAAgBgB,IAAOG,KAAV,KACR,qBAAGC,MAAkBC,KAAKC,OAAOC,QAKtC3B,EAAkBoB,YAAOQ,IAAPR,CAAH,KAKfb,EAAea,YAAOS,IAAPT,CAAH,M,gCClIlB,yEAMIU,EAAY,CACdC,IAAKC,IACL/B,MAAOgC,IAAUC,KACjBhC,UAAW+B,IAAUE,OACrBC,UAAWH,IAAUI,QAMnBT,EAAY,SAAmBU,GACjC,IAAIpC,EAAYoC,EAAMpC,UAClBkC,EAAYE,EAAMF,UAClBG,EAAMD,EAAMP,IACZ9B,EAAQqC,EAAMrC,MACduC,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,MAAO,UAEpFI,EAAUC,YAAgBC,IAAW1C,EAAW,cAAaD,GAAQ,mBAA4BmC,GACrG,OAAoBS,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEtC,UAAWwC,MAIfd,EAAUE,UAAYA,EACtBF,EAAUoB,aAlBS,CACjBjB,IAAK,OAkBQH","file":"static/js/10.9119632d.chunk.js","sourcesContent":["export { AdminPanel as default } from './AdminPanel'\r\n","import React, { useState } from 'react'\r\nimport { Container, Jumbotron, Button, Collapse } from 'reactstrap'\r\nimport styled from 'styled'\r\nimport { RouterLink, TerritorySelector } from 'components'\r\nimport { useConfig } from 'hooks'\r\nimport { useHistory, useLocation } from 'react-router'\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const { currentTerritory } = useConfig()\r\n  const [isTerritoryChangerOpen, setIsTerritoryChangerOpen] =\r\n    useState<boolean>(false)\r\n\r\n  const toggleTerritoryChanger = () =>\r\n    setIsTerritoryChangerOpen(!isTerritoryChangerOpen)\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const handleTerritoryChange = (territoryName: string) => {\r\n    history.push(`/${territoryName}/admin-panel/${location.search}`)\r\n    setIsTerritoryChangerOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledJumbotron fluid>\r\n        <Container>\r\n          <h1 className=\"display-5\">Panel de Administraci√≥n</h1>\r\n        </Container>\r\n      </StyledJumbotron>\r\n      <Container>\r\n        <TerritoryLabel>\r\n          Territorio actual:{' '}\r\n          <TerritoryName>{currentTerritory.name.toUpperCase()}</TerritoryName>{' '}\r\n          <div>\r\n            <StyledButton\r\n              color=\"link\"\r\n              onClick={toggleTerritoryChanger}\r\n              outline={false}\r\n            >\r\n              (Cambiar)\r\n            </StyledButton>\r\n          </div>\r\n          <Collapse isOpen={isTerritoryChangerOpen}>\r\n            <TerritorySelector\r\n              defaultValue=\"current\"\r\n              onChange={handleTerritoryChange}\r\n            />\r\n          </Collapse>\r\n        </TerritoryLabel>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/statistics`}\r\n            background=\"dark\"\r\n          >\r\n            <span>üìö</span> Estad√≠sticas del territorio\r\n          </RouterLink>\r\n        </Item>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/add-phones`}\r\n            background=\"dark\"\r\n          >\r\n            <span>‚ûï</span> Agregar n√∫meros a este territorio\r\n          </RouterLink>\r\n        </Item>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/search-and-edit`}\r\n            background=\"dark\"\r\n          >\r\n            <span>üîé</span> Buscar y editar n√∫meros de este territorio\r\n          </RouterLink>\r\n        </Item>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/territories`}\r\n            background=\"dark\"\r\n          >\r\n            <span>üåç</span> Gestionar territorios\r\n          </RouterLink>\r\n        </Item>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/configurations`}\r\n            background=\"dark\"\r\n          >\r\n            <span>üõ†</span> Configuraci√≥n de la App\r\n          </RouterLink>\r\n        </Item>\r\n        <Item>\r\n          <RouterLink\r\n            to={`/${currentTerritory.name}/admin-panel/passwords`}\r\n            background=\"dark\"\r\n          >\r\n            <span>üîë</span> Cambiar contrase√±as\r\n          </RouterLink>\r\n        </Item>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const Item = styled.div`\r\n  margin: 1em 0;\r\n  background: #343a40 !important;\r\n  padding: 0 1em;\r\n  border-radius: 10px;\r\n\r\n  > a {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst TerritoryLabel = styled.p`\r\n  font-size: 1.25em;\r\n  text-align: center;\r\n`\r\n\r\nconst TerritoryName = styled.span`\r\n  color: ${({ theme }) => theme.text.colors.info};\r\n  font-size: 1.3em;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledJumbotron = styled(Jumbotron)`\r\n  padding: 1rem 1rem;\r\n  margin-bottom: 0.5rem;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  box-shadow: none !important;\r\n  margin-top: -1rem;\r\n`\r\n\r\nexport { AdminPanel }\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Jumbotron = function Jumbotron(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      fluid = props.fluid,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"fluid\"]);\n\n  var classes = mapToCssModules(classNames(className, 'jumbotron', fluid ? 'jumbotron-fluid' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nJumbotron.propTypes = propTypes;\nJumbotron.defaultProps = defaultProps;\nexport default Jumbotron;"],"sourceRoot":""}