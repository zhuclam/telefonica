{"version":3,"sources":["features/SearchAndEdit/components/SearchForm.tsx","features/SearchAndEdit/components/SearchResult.tsx","features/SearchAndEdit/components/EditPhone.tsx","features/SearchAndEdit/SearchAndEdit.tsx","../node_modules/reactstrap/es/Table.js"],"names":["Error","children","className","delocalizeDateString","date","split","reverse","join","SearchForm","onSearch","useForm","mode","register","handleSubmit","errors","reset","setValue","getValues","formState","isDirty","isSubmitting","isValid","forceUpdate","useRerender","Form","onSubmit","info","number","id","answeredOn","calledOn","noWeekends","noCall","nonExistent","filters","Row","Col","md","FormGroup","Label","for","Input","name","innerRef","autoComplete","pattern","placeholder","check","type","checked","onChange","e","target","Button","block","outline","onClick","disabled","color","SearchResult","entries","onEditRequest","onDeleteRequest","length","Table","striped","responsive","Thead","Tbody","map","phone","PhoneCell","unansweredDate","fulfilledOn","comments","postponedDays","filter","Boolean","ActionCell","styled","thead","tbody","td","EditPhone","onBack","onUpdated","defaultValues","useState","isLoading","setIsLoading","Fetch","useFetch","AlertManager","useAlerts","onSaveEdition","formData","a","put","err","updatedPhone","show","position","variant","Container","validate","d","fulfill","breadcrumbItems","title","linkTo","SearchAndEdit","searchResult","setSearchResult","editingPhone","setEditingPhone","isDeleting","setIsDeleting","testModeEnabled","useConfig","useConfirmationModal","isModalOpen","idToDelete","data","askEditConfirmation","toggleModal","resetConfirmationModal","useEffect","handleSearch","get","path","params","Object","k","v","reduce","acc","phones","confirmDeletion","delete","p","phoneToDelete","find","items","fluid","isOpen","onConfirm","body","buttonColor","confirmationLabel","propTypes","PropTypes","string","cssModule","object","size","bordered","bool","borderless","dark","hover","oneOfType","tag","tagPropType","responsiveTag","func","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/8.a614f22e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from 'reactstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Filters } from '../types'\r\nimport { useRerender } from 'hooks/utils'\r\n\r\nconst Error: React.FC = ({ children }) => (\r\n  <span className=\"text-danger\">{children}</span>\r\n)\r\n\r\nconst delocalizeDateString = (date: string): string =>\r\n  date.split('/').reverse().join('-')\r\n\r\ninterface SearchFormProps {\r\n  onSearch: (filters: Filters) => void\r\n}\r\n\r\nconst SearchForm: React.FC<SearchFormProps> = ({ onSearch }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isDirty, isSubmitting, isValid },\r\n  } = useForm<Required<Filters>>({\r\n    mode: 'all',\r\n  })\r\n\r\n  const onApplyFilters = ({\r\n    info,\r\n    number,\r\n    id,\r\n    answeredOn,\r\n    calledOn,\r\n    noWeekends,\r\n    noCall,\r\n    nonExistent,\r\n  }: Required<Filters>) => {\r\n    const filters: Filters = {}\r\n\r\n    info && (filters.info = info)\r\n    number && (filters.number = number)\r\n    id && (filters.id = id)\r\n    answeredOn &&\r\n      (answeredOn === 'Nunca'\r\n        ? (filters.answeredOn = 'never')\r\n        : (filters.answeredOn = delocalizeDateString(answeredOn)))\r\n    calledOn &&\r\n      (calledOn === 'Nunca'\r\n        ? (filters.calledOn = 'never')\r\n        : (filters.calledOn = delocalizeDateString(calledOn)))\r\n    noWeekends && (filters.noWeekends = noWeekends)\r\n    noCall && (filters.noCall = noCall)\r\n    nonExistent && (filters.nonExistent = nonExistent)\r\n\r\n    onSearch(filters)\r\n  }\r\n\r\n  const { forceUpdate } = useRerender()\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-secondary d-block mb-3\">\r\n        Todos los campos son opcionales.\r\n      </span>\r\n      <Form onSubmit={handleSubmit(onApplyFilters)}>\r\n        <Row>\r\n          <Col md=\"2\">\r\n            <FormGroup>\r\n              <Label for=\"id\">ID</Label>\r\n              <Input id=\"id\" name=\"id\" innerRef={register} autoComplete=\"off\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup>\r\n              <Label for=\"number\">Número</Label>\r\n              <Input\r\n                id=\"number\"\r\n                name=\"number\"\r\n                innerRef={register}\r\n                autoComplete=\"off\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"info\">Información</Label>\r\n              <Input\r\n                id=\"info\"\r\n                name=\"info\"\r\n                innerRef={register}\r\n                autoComplete=\"off\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"answeredOn\">Última vez atendido el</Label>\r\n              <Input\r\n                id=\"answeredOn\"\r\n                name=\"answeredOn\"\r\n                innerRef={register({\r\n                  pattern: /^(\\d{2}\\/\\d{2}\\/\\d{4}|Nunca)$/,\r\n                })}\r\n                placeholder=\"Ej.: 13/04/2020\"\r\n                autoComplete=\"off\"\r\n              />\r\n              {errors.answeredOn && (\r\n                <Error>\r\n                  Formato inválido, debe ser dia/mes/año, 'Nunca' o dejar vacío.\r\n                </Error>\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  checked={getValues('answeredOn') === 'Nunca'}\r\n                  onChange={(e) => {\r\n                    setValue('answeredOn', e.target.checked ? 'Nunca' : '')\r\n                    forceUpdate()\r\n                  }}\r\n                />\r\n                Nunca antes atendió\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"calledOn\">Última vez llamado el</Label>\r\n              <Input\r\n                id=\"calledOn\"\r\n                name=\"calledOn\"\r\n                innerRef={register({\r\n                  pattern: /^(\\d{2}\\/\\d{2}\\/\\d{4}|Nunca)$/,\r\n                })}\r\n                placeholder=\"Ej.: 13/04/2020\"\r\n                autoComplete=\"off\"\r\n              />\r\n\r\n              {errors.calledOn && (\r\n                <Error>\r\n                  Formato inválido, debe ser dia/mes/año, 'Nunca' o dejar vacío.\r\n                </Error>\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  checked={getValues('calledOn') === 'Nunca'}\r\n                  onChange={(e) => {\r\n                    setValue('calledOn', e.target.checked ? 'Nunca' : '')\r\n                    forceUpdate()\r\n                  }}\r\n                />\r\n                Nunca antes llamado\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"noWeekends\" innerRef={register} />\r\n                No llamar los fines de semana\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"noCall\" innerRef={register} />\r\n                No visitar\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"nonExistent\" innerRef={register} />\r\n                No existente\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Button block outline onClick={() => reset()}>\r\n              Limpiar campos\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={!isDirty || !isValid || isSubmitting}\r\n              color=\"primary\"\r\n              block\r\n            >\r\n              Buscar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SearchForm }\r\n","import React from 'react'\r\nimport { Button, Table } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Phone } from 'types'\r\n\r\ninterface SearchResultProps {\r\n  entries: Phone[]\r\n  onEditRequest: (phone: Phone) => void\r\n  onDeleteRequest: (id: number) => void\r\n}\r\n\r\nconst SearchResult: React.FC<SearchResultProps> = ({\r\n  entries,\r\n  onEditRequest,\r\n  onDeleteRequest,\r\n}) => (\r\n  <>\r\n    <h3>Resultados: {entries.length}</h3>\r\n    <span className=\"text-secondary\">\r\n      * Se muestra un máximo de 100 números por búsqueda.\r\n    </span>\r\n    <Table striped responsive>\r\n      <Thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Número</th>\r\n          <th>Info</th>\r\n          <th>Última vez llamado</th>\r\n          <th>Última vez que atendió</th>\r\n          <th>Comentarios</th>\r\n          <th>Días pospuesto</th>\r\n          <th>Características</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {entries.map((phone) => (\r\n          <tr key={phone.id}>\r\n            <td>{phone.id}</td>\r\n            <PhoneCell>{phone.phone}</PhoneCell>\r\n            <td>{phone.info}</td>\r\n            <td>{phone.unansweredDate || phone.fulfilledOn || 'Nunca'}</td>\r\n            <td>{phone.answeredOn || 'Nunca'}</td>\r\n            <td>{phone.comments}</td>\r\n            <td>{phone.postponedDays}</td>\r\n            <td>\r\n              {[\r\n                phone.noCall && 'No visitar',\r\n                phone.nonExistent && 'No existe',\r\n                phone.noWeekends && 'No llamar los finde',\r\n              ]\r\n                .filter(Boolean)\r\n                .join(', ')}\r\n            </td>\r\n            <ActionCell>\r\n              <Button color=\"warning\" onClick={() => onEditRequest(phone)}>\r\n                Editar\r\n              </Button>\r\n              <Button color=\"danger\" onClick={() => onDeleteRequest(phone.id)}>\r\n                Borrar\r\n              </Button>\r\n            </ActionCell>\r\n          </tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  </>\r\n)\r\n\r\nconst Thead = styled.thead`\r\n  text-align: center;\r\n\r\n  > tr > th {\r\n    vertical-align: middle;\r\n  }\r\n`\r\n\r\nconst Tbody = styled.tbody`\r\n  text-align: center;\r\n`\r\n\r\nconst PhoneCell = styled.td`\r\n  white-space: nowrap;\r\n`\r\n\r\nconst ActionCell = styled.td`\r\n  white-space: nowrap;\r\n\r\n  button:not(:first-of-type) {\r\n    margin-left: 1em;\r\n  }\r\n`\r\n\r\nexport { SearchResult }\r\n","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from 'reactstrap'\r\nimport { Alert, Spinner, useAlerts } from 'components'\r\nimport { useFetch } from 'hooks'\r\nimport { Phone } from 'types'\r\n\r\ntype Fields = Pick<\r\n  Phone,\r\n  | 'comments'\r\n  | 'info'\r\n  | 'noCall'\r\n  | 'nonExistent'\r\n  | 'postponedDays'\r\n  | 'phone'\r\n  | 'noWeekends'\r\n>\r\n\r\ntype EditableFields = {\r\n  [k in keyof Fields]: NonNullable<Fields[k]>\r\n}\r\n\r\ninterface EditPhoneProps {\r\n  phone: Phone\r\n  onBack: () => void\r\n  onUpdated: (updatedPhone: Phone) => void\r\n}\r\n\r\nconst EditPhone: React.FC<EditPhoneProps> = ({ phone, onBack, onUpdated }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    formState: { isDirty, isValid },\r\n  } = useForm<EditableFields>({\r\n    mode: 'all',\r\n    defaultValues: {\r\n      phone: phone.phone,\r\n      comments: phone.comments,\r\n      info: phone.info ?? '',\r\n      noCall: phone.noCall,\r\n      nonExistent: phone.nonExistent,\r\n      postponedDays: phone.postponedDays,\r\n      noWeekends: phone.noWeekends,\r\n    },\r\n  })\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const Fetch = useFetch()\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const onSaveEdition = async (formData: EditableFields) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, updatedPhone] = await Fetch().put<\r\n        EditableFields,\r\n        { phone: Phone }\r\n      >(`phones/${phone.id}`, formData)\r\n\r\n      if (err) throw err\r\n\r\n      onUpdated(updatedPhone.phone)\r\n      AlertManager.show('update-success')\r\n    } catch {\r\n      AlertManager.show('update-error')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"update-success\" position=\"top\" variant=\"success\">\r\n        ¡Número actualizado con éxito! ✨\r\n      </Alert>\r\n      <Alert name=\"update-error\" position=\"bottom\" variant=\"failure\">\r\n        No se pudo actualizar el teléfono. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Container className=\"pt-4\">\r\n        <h1>Editar número</h1>\r\n        <Form onSubmit={handleSubmit(onSaveEdition)}>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Número</Label>\r\n                <Input name=\"phone\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Info</Label>\r\n                <Input name=\"info\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Días pospuesto</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"postponedDays\"\r\n                  innerRef={register({ validate: (d) => d >= 0 })}\r\n                />\r\n              </FormGroup>\r\n              {errors.postponedDays && (\r\n                <span className=\"text-danger\">Valor inválido</span>\r\n              )}\r\n            </Col>\r\n            <Col md=\"12\">\r\n              <FormGroup>\r\n                <Label>Comentarios</Label>\r\n                <Input name=\"comments\" innerRef={register} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"noWeekends\"\r\n                    innerRef={register}\r\n                  />\r\n                  No llamar los finde\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"noCall\" innerRef={register} />\r\n                  No visitar\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"nonExistent\"\r\n                    innerRef={register}\r\n                  />\r\n                  No existente\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <Button outline block onClick={onBack}>\r\n                Volver atrás\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <Button\r\n                type=\"submit\"\r\n                block\r\n                color=\"primary\"\r\n                disabled={!isDirty || !isValid}\r\n              >\r\n                {isLoading ? <Spinner fulfill /> : 'Guardar'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { EditPhone }\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport { useConfig, useFetch } from 'hooks'\r\nimport { Phone } from 'types'\r\nimport {\r\n  Alert,\r\n  Spinner,\r\n  useAlerts,\r\n  useConfirmationModal,\r\n  ConfirmationModal,\r\n  Breadcrumb,\r\n} from 'components'\r\nimport { EditPhone, SearchForm, SearchResult } from './components'\r\nimport { Filters } from './types'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Buscar y editar',\r\n  },\r\n]\r\n\r\nconst SearchAndEdit: FunctionComponent = () => {\r\n  const [searchResult, setSearchResult] = useState<Phone[] | null>(null)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const [editingPhone, setEditingPhone] = useState<Phone | null>(null)\r\n\r\n  const [isDeleting, setIsDeleting] = useState<boolean>(false)\r\n\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const {\r\n    isModalOpen,\r\n    data: idToDelete,\r\n    askEditConfirmation,\r\n    toggleModal,\r\n    reset: resetConfirmationModal,\r\n  } = useConfirmationModal<number>()\r\n\r\n  useEffect(() => {\r\n    setSearchResult(null)\r\n    setEditingPhone(null)\r\n  }, [testModeEnabled])\r\n\r\n  const Fetch = useFetch()\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const handleSearch = async (filters: Filters) => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const [err, phones] = await Fetch().get<Phone[]>({\r\n        path: 'phones',\r\n        params: Object.entries(filters)\r\n          .map(([k, v]) => [k, typeof v !== 'boolean' ? v : v ? 1 : 0])\r\n          .reduce(\r\n            (acc, [k, v]) => ({ ...acc, [k]: v }),\r\n            {} as Filters\r\n          ) as Record<string, string>,\r\n      })\r\n\r\n      if (err) throw err\r\n\r\n      setSearchResult(phones)\r\n    } catch {\r\n      AlertManager.show('search-error')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleEditRequest = (phone: Phone) => setEditingPhone(phone)\r\n\r\n  const handleDeleteRequest = (id: number) => askEditConfirmation(id)\r\n\r\n  const confirmDeletion = async () => {\r\n    try {\r\n      setIsDeleting(true)\r\n\r\n      const [err] = await Fetch().delete(`phones/${idToDelete}`)\r\n\r\n      if (err) throw err\r\n\r\n      resetConfirmationModal()\r\n      setSearchResult(searchResult!.filter((p) => p.id !== idToDelete))\r\n    } catch {\r\n      AlertManager.show('deletion-error')\r\n    } finally {\r\n      setIsDeleting(false)\r\n    }\r\n  }\r\n\r\n  const handleBack = () => setEditingPhone(null)\r\n\r\n  const handleUpdatedPhone = (updatedPhone: Phone) =>\r\n    searchResult &&\r\n    setSearchResult(\r\n      searchResult.map((p) => (p.id === updatedPhone.id ? updatedPhone : p))\r\n    )\r\n\r\n  if (editingPhone !== null)\r\n    return (\r\n      <EditPhone\r\n        phone={editingPhone}\r\n        onBack={handleBack}\r\n        onUpdated={handleUpdatedPhone}\r\n      />\r\n    )\r\n\r\n  const phoneToDelete =\r\n    idToDelete !== null && searchResult?.find((p) => p.id === idToDelete)!\r\n\r\n  return (\r\n    <>\r\n      <Alert name=\"search-error\" position=\"top\" variant=\"failure\">\r\n        No se pudo buscar. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Alert name=\"deletion-error\" position=\"top\" variant=\"failure\">\r\n        No se pudo eliminar el número. Por favor, intente de nuevo.\r\n      </Alert>\r\n      <Container className=\"pt-4 mb-5\">\r\n        <Breadcrumb items={breadcrumbItems} />\r\n        <SearchForm onSearch={handleSearch} />\r\n      </Container>\r\n      <Container fluid>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          searchResult && (\r\n            <SearchResult\r\n              entries={searchResult}\r\n              onEditRequest={handleEditRequest}\r\n              onDeleteRequest={handleDeleteRequest}\r\n            />\r\n          )\r\n        )}\r\n      </Container>\r\n      {idToDelete !== null && phoneToDelete && (\r\n        <ConfirmationModal\r\n          isOpen={isModalOpen}\r\n          toggleModal={toggleModal}\r\n          onConfirm={confirmDeletion}\r\n          title=\"¿Seguro que desea eliminar el siguiente número?\"\r\n          body={\r\n            isDeleting ? (\r\n              <Spinner fulfill />\r\n            ) : (\r\n              <div>\r\n                <span className=\"d-block\">ID: {phoneToDelete.id}</span>\r\n                <span className=\"d-block\">Número: {phoneToDelete.phone}</span>\r\n                <span className=\"d-block\">Info: {phoneToDelete.info}</span>\r\n              </div>\r\n            )\r\n          }\r\n          buttonColor=\"danger\"\r\n          confirmationLabel=\"Eliminar para siempre\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SearchAndEdit }\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}