{"version":3,"sources":["../node_modules/reactstrap/es/Col.js","features/AddPhones/styles.tsx","features/AddPhones/utils.ts","features/AddPhones/components/EntryData.tsx","features/AddPhones/components/Review.tsx","features/AddPhones/components/Result.tsx","features/AddPhones/AddPhones.tsx","../node_modules/reactstrap/es/Row.js"],"names":["stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","length","classes","React","createElement","_extends","Title","styled","h1","Description","p","Buttons","div","getRandomNumber","parseInt","Math","random","toFixed","slice","LineIndicator","forwardRef","ref","lines","LineIndicatorContainer","Array","fill","map","_","EntryData","onNextStep","handleSetEntrydata","useState","numbers","setNumbers","additional","setAdditional","numberLineIndicatorRef","useRef","additionalLineIndicatorRef","testModeEnabled","useConfig","handleIndicatorsScroll","type","e","position","target","scrollTop","el","current","scroll","onNumberScroll","onAdditionalScroll","numberLines","split","additionalLines","useEffect","missing","difference","abs","repeat","pending","pop","join","haveSameAmountOfLines","haveEmptyNumberLines","some","line","trim","disableNextStep","Button","color","onClick","toString","splice","generateRandomNumber","info","names","randomName","floor","randomAddress","randomNumber","generateRandomInfo","prev","Row","style","TextArea","value","onChange","onScroll","placeholder","Validations","Rule","valid","index","disabled","ul","textarea","span","theme","text","colors","green","red","Review","entryData","onGoBack","onConfirm","Container","Info","outline","darkMode","black","Result","response","onAddMore","onBackToAdminPanel","successCount","failureCount","breadcrumbItems","title","linkTo","AddPhones","step","setStep","setEntryData","isLoading","setIsLoading","serverResponse","setServerResponse","Fetch","useFetch","AlertManager","useAlerts","history","useHistory","handleConfirm","a","post","phones","err","show","timeout","container","fulfill","name","containerCSS","FailAlertCss","items","data","css","rowColsPropType","noGutters","form"],"mappings":"8GAAA,yEAOIA,EAAqBC,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACtEC,EAAcJ,IAAUC,UAAU,CAACD,IAAUK,KAAML,IAAUE,OAAQF,IAAUG,OAAQH,IAAUM,MAAM,CACzGC,KAAMP,IAAUC,UAAU,CAACD,IAAUK,KAAML,IAAUE,OAAQF,IAAUG,SACvEK,MAAOT,EACPU,OAAQV,MAENW,EAAY,CACdC,IAAKC,IACLC,GAAIT,EACJU,GAAIV,EACJW,GAAIX,EACJY,GAAIZ,EACJa,GAAIb,EACJc,UAAWlB,IAAUG,OACrBgB,UAAWnB,IAAUoB,OACrBC,OAAQrB,IAAUsB,OAEhBC,EAAe,CACjBZ,IAAK,MACLU,OApBc,CAAC,KAAM,KAAM,KAAM,KAAM,OAuBrCG,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAM,SAAaC,GACrB,IAAIX,EAAYW,EAAMX,UAClBC,EAAYU,EAAMV,UAClBE,EAASQ,EAAMR,OACfS,EAAMD,EAAMlB,IACZoB,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvFI,EAAa,GACjBZ,EAAOa,SAAQ,SAAUR,EAAUS,GACjC,IAAIC,EAAaP,EAAMH,GAGvB,UAFOK,EAAWL,GAEbU,GAA6B,KAAfA,EAAnB,CAIA,IAAIX,GAAQU,EAEZ,GAAIE,YAASD,GAAa,CACxB,IAAIE,EAEAC,EAAkBd,EAAO,IAAM,IAAMC,EAAW,IAChDc,EAAWhB,EAAmBC,EAAMC,EAAUU,EAAW7B,MAC7D0B,EAAWQ,KAAKC,YAAgBC,MAAYL,EAAc,IAAgBE,GAAYJ,EAAW7B,MAA4B,KAApB6B,EAAW7B,KAAa+B,EAAY,QAAUC,EAAkBH,EAAW5B,OAAS4B,EAAW5B,OAA8B,IAArB4B,EAAW5B,MAAa8B,EAAY,SAAWC,EAAkBH,EAAW3B,QAAU2B,EAAW3B,QAAgC,IAAtB2B,EAAW3B,OAAc6B,IAAenB,QAC/V,CACL,IAAIyB,EAAYpB,EAAmBC,EAAMC,EAAUU,GAEnDH,EAAWQ,KAAKG,QAIfX,EAAWY,QACdZ,EAAWQ,KAAK,OAGlB,IAAIK,EAAUJ,YAAgBC,IAAWzB,EAAWe,GAAad,GACjE,OAAoB4B,IAAMC,cAAclB,EAAKmB,YAAS,GAAIlB,EAAY,CACpEb,UAAW4B,MAIflB,EAAIlB,UAAYA,EAChBkB,EAAIL,aAAeA,EACJK,O,soBChFR,IAAMsB,EAAQC,IAAOC,GAAV,KAQLC,EAAcF,IAAOG,EAAV,KAMXC,EAAUJ,IAAOK,IAAV,KChBdC,EAAkB,kBACtBC,SAASC,KAAKC,SAASC,QAAQ,GAAGC,OAAO,K,0+BCO3C,IAAMC,EAIFC,sBAAW,WAAYC,GAAZ,IAAGC,EAAH,EAAGA,MAAH,OAEb,aADA,CACCC,EAAD,CAAwBF,IAAKA,EAA7B,SACGG,MAAMF,GACJG,KAAK,GACLC,KAAI,SAACC,EAAGpC,GAAJ,OACH,+BAAaA,EAAI,EAAjB,MAASA,WAUXqC,EAAsC,SAAC,GAGtC,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,mBACI,EAC0BC,mBAAiB,IAD3C,mBACGC,EADH,KACYC,EADZ,OAEgCF,mBAAiB,IAFjD,mBAEGG,EAFH,KAEeC,EAFf,KAGEC,EAAyBC,iBAA8B,MACvDC,EAA6BD,iBAA8B,MAEzDE,EAAoBC,cAApBD,gBAiBFE,EAAyB,SAACC,GAAD,OAAmC,SAChEC,GAEA,IAAMC,EAEJD,EAAEE,OAAOC,UACLC,EACK,WAATL,EAAA,OACIN,QADJ,IACIA,OADJ,EACIA,EAAwBY,QAD5B,OAEIV,QAFJ,IAEIA,OAFJ,EAEIA,EAA4BU,QAC7BD,GACLA,EAAGE,OAAO,EAAGL,KAGTM,EAAiBT,EAAuB,UACxCU,EAAqBV,EAAuB,cAE5CW,EAAcpB,EAAQqB,MAAM,MAAMpD,OAClCqD,EAAkBpB,EAAWmB,MAAM,MAAMpD,OAE/CsD,qBAAU,WACR,GAAIH,IAAgBE,EAApB,CACA,IAAME,EAAUJ,EAAcE,EACxBG,EAAa1C,KAAK2C,IAAIN,EAAcE,GAExCnB,EADEqB,EACY,SAACtB,GAAD,OAAgBA,EAAa,KAAKyB,OAAOF,IAEzC,SAACvB,GAGb,IAFA,IAAIZ,EAAQY,EAAWmB,MAAM,MACzBO,EAAUH,EACqB,KAA5BnC,EAAMA,EAAMrB,OAAS,IAAa2D,EAAU,GACjDtC,EAAMuC,MACND,IAEF,OAAOtC,EAAMwC,KAAK,WAGrB,CAACV,EAAaE,EAAiBtB,IAElC,IAAM+B,EAAwBX,IAAgBE,EACxCU,EAAuBhC,EAC1BqB,MAAM,MACNY,MAAK,SAACC,GAAD,MAA0B,KAAhBA,EAAKC,UAEjBC,GAAmBL,GAAyBC,EAYlD,OACE,qCACE,eAAC1D,EAAD,sBACU,qDAEV,eAACG,EAAD,yEAC2D,IACzD,gGAFF,OAIA,eAACA,EAAD,6DACkD,IAChD,4DAFF,qFAIE,+FAJF,OAMA,eAACA,EAAD,qEACuD,IACrD,4CAFF,4JAMA,eAACA,EAAD,kDACuC,IACrC,sEAFF,qBAE8D,IAC5D,wDAHF,OAKA,eAACA,EAAD,WACE,4CADF,qEAIC8B,GACC,cAAC8B,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAtGL,WACpB,GAAKhC,EAAL,CACA,IAAMP,EAAUR,MAAM,IACnBC,KAAK,GACLC,KAAI,SAACC,GAAD,ODxCyB,WAClC,IAAMK,EAAUR,MAAM,GACnBC,KAAK,GACLC,KAAI,SAACC,GAAD,OAAOd,IAAkB2D,cAEhC,OADAxC,EAAQyC,OAAO,EAAG,EAAG,KACdzC,EAAQ8B,KAAK,ICmCJY,MACXZ,KAAK,MACFa,EAAOnD,MAAM,IAChBC,KAAK,GACLC,KAAI,SAACC,GAAD,ODpCuB,WAChC,IAAMiD,EAAQ,CACZ,mBACA,kBACA,kBACA,mBAIIC,EAAaD,EAAM7D,KAAK+D,MAAM/D,KAAKC,SAAW4D,EAAM3E,SACpD8E,EAHY,CAAC,oBAAkB,QAAS,eAAgB,aAG9BhE,KAAK+D,MAAM/D,KAAKC,SAAW4D,EAAM3E,SAE3D+E,EAAexD,MAAM,GACxBC,KAAK,GACLC,KAAI,SAACC,GAAD,OAAOd,IAAkB2D,cAC7BV,KAAK,IAER,MAAM,GAAN,OAAUe,EAAV,aAAyBE,EAAzB,YAA0CC,GCmB1BC,MACXnB,KAAK,MAER7B,GAAW,SAACiD,GAAD,OAAUA,EAAOlD,EAAU,QACtCG,GAAc,SAAC+C,GAAD,OAAUA,EAAOP,EAAO,UA0FlC,sCAIF,eAACQ,EAAA,EAAD,CAAK7G,UAAU,OAAf,UACE,eAACU,EAAA,EAAD,CAAKf,GAAI,GAAIE,GAAI,EAAGiH,MAAO,CAAExC,SAAU,YAAvC,UACE,+CACA,cAACzB,EAAD,CAAeG,MAAO8B,EAAa/B,IAAKe,IACxC,cAACiD,EAAD,CACEC,MAAOtD,EACPuD,SAAU,SAAC5C,GAAD,OAAOV,EAAWU,EAAEE,OAAOyC,QACrCE,SAAUtC,EACVuC,YAAY,4BAGhB,eAACzG,EAAA,EAAD,CAAKf,GAAI,GAAIE,GAAI,EAAGiH,MAAO,CAAExC,SAAU,YAAvC,UACE,2DACA,cAACzB,EAAD,CACEG,MAAOgC,EACPjC,IAAKiB,IAEP,cAAC+C,EAAD,CACEC,MAAOpD,EACPqD,SAAU,SAAC5C,GAAD,OAAOR,EAAcQ,EAAEE,OAAOyC,QACxCE,SAAUrC,EACVsC,YAAY,wDAIlB,eAACC,EAAD,WACE,sFACA,gCACE,cAACC,EAAD,CAAMC,OAAQ5B,EAAd,yDAGA,cAAC2B,EAAD,CAAMC,MAAO7B,EAAb,oGAMJ,cAACpD,EAAD,UACE,cAAC0D,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAnFf,WACbzC,EACEE,EAAQqB,MAAM,MAAM3B,KAAI,SAACpE,EAAQuI,GAAT,MAAoB,CAC1CvI,SACAqH,KAAMzC,EAAWmB,MAAM,MAAMwC,QAGjChE,KA4E6CiE,SAAU1B,EAAnD,kCAQF7C,EAAyBhB,IAAOwF,GAAV,KAqBtBV,EAAW9E,IAAOyF,SAAV,KASRN,EAAcnF,IAAOK,IAAV,KAeX+E,EAAOpF,IAAO0F,KAAV,KACC,gBAAGC,EAAH,EAAGA,MAAH,SAAUN,MACTM,EAAMC,KAAKC,OAAOC,MAAQH,EAAMC,KAAKC,OAAOE,OAGxC,qBAAGV,MAAqB,SAAM,Y,mcCrO9C,IAAMW,EAAgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,UAAxB,OACpC,eAACC,EAAA,EAAD,WACE,eAACrG,EAAD,4BACgB,gDAEhB,cAACG,EAAD,kFAGA,cAACmG,EAAD,UACGJ,EAAU9E,KAAI,WAAmBnC,GAAnB,IAAGjC,EAAH,EAAGA,OAAQqH,EAAX,EAAWA,KAAX,OACb,qCACE,iCACE,8CADF,IACwBrH,EAAQ,IAC9B,sBAAMgB,UAAU,YAAhB,SAA6B,OAF/B,IAE4C,yCAF5C,IAEgEqG,IAFrDrH,EAASiC,GAIpB,+BAIN,eAACoB,EAAD,WACE,cAAC0D,EAAA,EAAD,CAAQC,MAAM,OAAOuC,SAAO,EAACtC,QAASkC,EAAtC,oBAGA,cAACpC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASmC,EAAjC,wCAOAE,EAAOrG,IAAOG,EAAV,KAGM,gBAAGwF,EAAH,EAAGA,MAAH,OACZA,EAAMY,SAAW,OAASZ,EAAMC,KAAKC,OAAOW,SAKnC,gBAAGb,EAAH,EAAGA,MAAH,OACPA,EAAMY,SAAWZ,EAAMC,KAAKC,OAAOW,MAAQ,UCzC3CC,EAAgC,SAAC,GAAD,IACpCC,EADoC,EACpCA,SACAC,EAFoC,EAEpCA,UACAC,EAHoC,EAGpCA,mBAHoC,OAKpC,eAACR,EAAA,EAAD,WACE,cAACrG,EAAD,sCACA,wDAAwB2G,EAASG,gBACjC,qEAAqCH,EAASI,gBAC9C,cAAC5G,EAAD,CAAanC,UAAU,OAAvB,4FAIA,eAACqC,EAAD,CAASrC,UAAU,OAAnB,UACE,cAAC+F,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS2C,EAA9B,uCAGA,cAAC7C,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS4C,EAAjC,qD,yGCnBN,IAAMG,EAAkB,CACtB,CACEC,MAAO,6BACPC,OAAQ,gBAEV,CACED,MAAO,uBAILE,EAAsB,WAAO,IAAD,EACR1F,mBAAiB,GADT,mBACzB2F,EADyB,KACnBC,EADmB,OAEE5F,mBAAqB,IAFvB,mBAEzByE,EAFyB,KAEdoB,EAFc,OAGE7F,oBAAkB,GAHpB,mBAGzB8F,EAHyB,KAGdC,EAHc,OAIY/F,mBAC1C,MAL8B,mBAIzBgG,EAJyB,KAITC,EAJS,KAQ1BC,EAAQC,cAENC,EAAiBC,cAAjBD,aAEFE,EAAUC,cAQVC,EAAa,uCAAG,kCAAAC,EAAA,sEAElBV,GAAa,GAFK,SAGYG,IAAQQ,KAGpC,cAAe,CAAEC,OAAQlC,IANT,sCAGXmC,EAHW,KAGN1B,EAHM,MAQd0B,EARc,uBAQHA,EARG,QAUlBX,EAAkBf,GAClBU,EAAQ,GAXU,kDAalBQ,EAAaS,KAAK,mBAAoB,CAAEC,QAAS,OAb/B,yBAelBf,GAAa,GAfK,6EAAH,qDA6BnB,OAAID,EAAkB,cAAC,IAAD,CAASiB,WAAS,EAACC,SAAO,IAG9C,eAACpC,EAAA,EAAD,CAAWrI,UAAU,YAArB,UACE,eAAC,IAAD,CACE0K,KAAK,mBACLpG,SAAS,SACTqG,aAAcC,EAHhB,iLAOqB,OAErB,cAAC,IAAD,CAAYC,MAAO7B,IACT,IAATI,GACC,cAAC,EAAD,CACE7F,WAnDe,kBAAM8F,EAAQD,EAAO,IAoDpC5F,mBAlDmB,SAACsH,GAAD,OAAsBxB,EAAawB,MAqDhD,IAAT1B,GACC,cAAC,EAAD,CACElB,UAAWA,EACXC,SAtDoB,kBAAMkB,EAAQ,IAuDlCjB,UAAW6B,IAGL,IAATb,GAAcK,GACb,cAAC,EAAD,CACEd,SAAUc,EACVb,UAxCM,WACZS,EAAQ,GACRC,EAAa,IACbI,EAAkB,OAsCZb,mBAnCkB,WACxBkB,EAAQxI,KAAK,uBAyCXqJ,EAAeG,YAAH,KACI,qBAAGnD,MAAkBC,KAAKC,OAAOE,Q,gCC3GvD,yEAOIgD,EAAkBlM,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACnEO,EAAY,CACdC,IAAKC,IACLuL,UAAWnM,IAAUK,KACrBa,UAAWlB,IAAUG,OACrBgB,UAAWnB,IAAUoB,OACrBgL,KAAMpM,IAAUK,KAChBQ,GAAIqL,EACJpL,GAAIoL,EACJnL,GAAImL,EACJlL,GAAIkL,EACJjL,GAAIiL,GAEF3K,EAAe,CACjBZ,IAAK,MACLU,OAhBiB,CAAC,KAAM,KAAM,KAAM,KAAM,OAmBxC0G,EAAM,SAAalG,GACrB,IAAIX,EAAYW,EAAMX,UAClBC,EAAYU,EAAMV,UAClBgL,EAAYtK,EAAMsK,UAClBrK,EAAMD,EAAMlB,IACZyL,EAAOvK,EAAMuK,KACb/K,EAASQ,EAAMR,OACfU,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,YAAa,MAAO,OAAQ,WAEzGI,EAAa,GACjBZ,EAAOa,SAAQ,SAAUR,EAAUS,GACjC,IAAIR,EAAUE,EAAMH,GAGpB,UAFOK,EAAWL,GAEbC,EAAL,CAIA,IAAIF,GAAQU,EACZF,EAAWQ,KAAKhB,EAAO,YAAcE,EAAU,YAAcD,EAAW,IAAMC,OAEhF,IAAImB,EAAUJ,YAAgBC,IAAWzB,EAAWiL,EAAY,aAAe,KAAMC,EAAO,WAAa,MAAOnK,GAAad,GAC7H,OAAoB4B,IAAMC,cAAclB,EAAKmB,YAAS,GAAIlB,EAAY,CACpEb,UAAW4B,MAIfiF,EAAIrH,UAAYA,EAChBqH,EAAIxG,aAAeA,EACJwG","file":"static/js/5.35cc5011.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 400;\r\n  margin-bottom: 0.75em;\r\n\r\n  > span {\r\n    font-size: 0.7em;\r\n  }\r\n`\r\nexport const Description = styled.p`\r\n  > span {\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  > button:not(:nth-of-type(1)) {\r\n    margin-left: 1em;\r\n  }\r\n`\r\n","const getRandomNumber = (): number =>\r\n  parseInt(Math.random().toFixed(1).slice(-1))\r\n\r\nexport const generateRandomNumber = (): string => {\r\n  const numbers = Array(8)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n  numbers.splice(4, 0, '-')\r\n  return numbers.join('')\r\n}\r\n\r\nexport const generateRandomInfo = (): string => {\r\n  const names = [\r\n    'Alicia Gertrudis',\r\n    'Popeye Elmarino',\r\n    'Gervasio Garcia',\r\n    'Francisco Lopez',\r\n  ]\r\n  const addresses = ['Av. San Martín', 'Pozos', 'San Fernando', 'El Jaguar']\r\n\r\n  const randomName = names[Math.floor(Math.random() * names.length)]\r\n  const randomAddress = addresses[Math.floor(Math.random() * names.length)]\r\n\r\n  const randomNumber = Array(3)\r\n    .fill(1)\r\n    .map((_) => getRandomNumber().toString())\r\n    .join('')\r\n\r\n  return `${randomName}, ${randomAddress} ${randomNumber}`\r\n}\r\n","import { useConfig } from 'hooks'\r\nimport React, { forwardRef, useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Row } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\nimport { generateRandomInfo, generateRandomNumber } from '../utils'\r\n\r\nconst LineIndicator: React.ForwardRefExoticComponent<\r\n  {\r\n    lines: number\r\n  } & React.RefAttributes<unknown>\r\n> = forwardRef(({ lines }, ref) => (\r\n  // @ts-ignore\r\n  <LineIndicatorContainer ref={ref}>\r\n    {Array(lines)\r\n      .fill(1)\r\n      .map((_, i) => (\r\n        <li key={i}>{i + 1}-</li>\r\n      ))}\r\n  </LineIndicatorContainer>\r\n))\r\n\r\ninterface EntryDataProps {\r\n  onNextStep: () => void\r\n  handleSetEntrydata: (data: NewPhone[]) => void\r\n}\r\n\r\nconst EntryData: React.FC<EntryDataProps> = ({\r\n  onNextStep,\r\n  handleSetEntrydata,\r\n}) => {\r\n  const [numbers, setNumbers] = useState<string>('')\r\n  const [additional, setAdditional] = useState<string>('')\r\n  const numberLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n  const additionalLineIndicatorRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const { testModeEnabled } = useConfig()\r\n\r\n  const setRandomData = () => {\r\n    if (!testModeEnabled) return\r\n    const numbers = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomNumber())\r\n      .join('\\n')\r\n    const info = Array(10)\r\n      .fill(1)\r\n      .map((_) => generateRandomInfo())\r\n      .join('\\n')\r\n\r\n    setNumbers((prev) => prev + numbers + '\\n')\r\n    setAdditional((prev) => prev + info + '\\n')\r\n  }\r\n\r\n  const handleIndicatorsScroll = (type: 'number' | 'additional') => (\r\n    e: React.UIEvent<HTMLTextAreaElement, UIEvent>\r\n  ) => {\r\n    const position: number =\r\n      // @ts-ignore\r\n      e.target.scrollTop\r\n    const el =\r\n      type === 'number'\r\n        ? numberLineIndicatorRef?.current\r\n        : additionalLineIndicatorRef?.current\r\n    if (!el) return\r\n    el.scroll(0, position)\r\n  }\r\n\r\n  const onNumberScroll = handleIndicatorsScroll('number')\r\n  const onAdditionalScroll = handleIndicatorsScroll('additional')\r\n\r\n  const numberLines = numbers.split('\\n').length\r\n  const additionalLines = additional.split('\\n').length\r\n\r\n  useEffect(() => {\r\n    if (numberLines === additionalLines) return\r\n    const missing = numberLines > additionalLines\r\n    const difference = Math.abs(numberLines - additionalLines)\r\n    if (missing) {\r\n      setAdditional((additional) => additional + '\\n'.repeat(difference))\r\n    } else {\r\n      setAdditional((additional) => {\r\n        let lines = additional.split('\\n')\r\n        let pending = difference\r\n        while (lines[lines.length - 1] === '' && pending > 0) {\r\n          lines.pop()\r\n          pending--\r\n        }\r\n        return lines.join('\\n')\r\n      })\r\n    }\r\n  }, [numberLines, additionalLines, numbers])\r\n\r\n  const haveSameAmountOfLines = numberLines === additionalLines\r\n  const haveEmptyNumberLines = numbers\r\n    .split('\\n')\r\n    .some((line) => line.trim() === '')\r\n\r\n  const disableNextStep = !haveSameAmountOfLines || haveEmptyNumberLines\r\n\r\n  const onDone = () => {\r\n    handleSetEntrydata(\r\n      numbers.split('\\n').map((number, index) => ({\r\n        number,\r\n        info: additional.split('\\n')[index],\r\n      }))\r\n    )\r\n    onNextStep()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Paso 1: <span>Ingresar datos</span>\r\n      </Title>\r\n      <Description>\r\n        Ingrese una lista de números en la caja de la izquierda.{' '}\r\n        <span>Separe cada número con un nuevo salto de línea (Enter)</span>.\r\n      </Description>\r\n      <Description>\r\n        Repita lo mismo en la caja de la derecha con la{' '}\r\n        <span>información adicional</span> -dirección, nombre de la persona,\r\n        etc.- que deba acompañar a cada número\r\n        <span> que se corresponda en la misma posición de ordenamiento</span>.\r\n      </Description>\r\n      <Description>\r\n        La información adicional de la caja de la derecha es{' '}\r\n        <span>opcional</span>, puede omitirla. Si desea omitir esa información\r\n        solamente para una fila (número), deje un espacio en blanco en la\r\n        posición de esa línea.\r\n      </Description>\r\n      <Description>\r\n        No se preocupe por comenter errores,{' '}\r\n        <span>podrá revisar la información</span> antes de enviarla{' '}\r\n        <span>en el siguiente paso</span>.\r\n      </Description>\r\n      <Description>\r\n        <span>Consejo:</span> puede copiar y pegar una columna entera de excel\r\n        en cada caja.\r\n      </Description>\r\n      {testModeEnabled && (\r\n        <Button color=\"info\" onClick={setRandomData}>\r\n          Generar datos aleatorios\r\n        </Button>\r\n      )}\r\n      <Row className=\"mt-3\">\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Teléfonos:</h5>\r\n          <LineIndicator lines={numberLines} ref={numberLineIndicatorRef} />\r\n          <TextArea\r\n            value={numbers}\r\n            onChange={(e) => setNumbers(e.target.value)}\r\n            onScroll={onNumberScroll}\r\n            placeholder=\"Ej.: (011) 4754-7845\"\r\n          ></TextArea>\r\n        </Col>\r\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\r\n          <h5>Información adicional:</h5>\r\n          <LineIndicator\r\n            lines={additionalLines}\r\n            ref={additionalLineIndicatorRef}\r\n          />\r\n          <TextArea\r\n            value={additional}\r\n            onChange={(e) => setAdditional(e.target.value)}\r\n            onScroll={onAdditionalScroll}\r\n            placeholder=\"Ej.: Pepe Mujica - Av. Gral Rodríguez 2084\"\r\n          ></TextArea>\r\n        </Col>\r\n      </Row>\r\n      <Validations>\r\n        <h4>Para avanzar al siguiente paso, se debe cumplir con:</h4>\r\n        <div>\r\n          <Rule valid={!haveEmptyNumberLines}>\r\n            No debe haber filas vacías de números\r\n          </Rule>\r\n          <Rule valid={haveSameAmountOfLines}>\r\n            Números e información adicional deben tener la misma cantidad de\r\n            líneas\r\n          </Rule>\r\n        </div>\r\n      </Validations>\r\n      <Buttons>\r\n        <Button color=\"success\" onClick={onDone} disabled={disableNextStep}>\r\n          Siguiente paso\r\n        </Button>\r\n      </Buttons>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LineIndicatorContainer = styled.ul`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  left: 1.5em;\r\n  margin: 0;\r\n  padding: 0;\r\n  padding-top: 1px;\r\n  line-height: 20px;\r\n  height: 400px;\r\n  width: 3em;\r\n  overflow-y: hidden;\r\n  border-right: 1px dashed #999;\r\n\r\n  li {\r\n    list-style: none;\r\n    font-weight: 500;\r\n    color: #666;\r\n  }\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 400px;\r\n  padding: 0 1em 0 4em;\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst Validations = styled.div`\r\n  margin-top: 2em;\r\n  padding-bottom: 5em;\r\n\r\n  div {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1em;\r\n\r\n    span {\r\n      margin-top: 1em;\r\n    }\r\n  }\r\n`\r\n\r\nconst Rule = styled.span<{ valid: boolean }>`\r\n  color: ${({ theme, valid }) =>\r\n    valid ? theme.text.colors.green : theme.text.colors.red};\r\n\r\n  ::before {\r\n    content: '${({ valid }) => (valid ? '✅' : '❗')}';\r\n    margin-right: 0.5em;\r\n  }\r\n`\r\n\r\nexport { EntryData }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { NewPhone } from '../types'\r\n\r\ninterface ReviewProps {\r\n  entryData: NewPhone[]\r\n  onGoBack: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Review: React.FC<ReviewProps> = ({ entryData, onGoBack, onConfirm }) => (\r\n  <Container>\r\n    <Title>\r\n      Segundo paso: <span>Confirmar</span>\r\n    </Title>\r\n    <Description>\r\n      Por favor, revise bien la información y confirme si es correcta.\r\n    </Description>\r\n    <Info>\r\n      {entryData.map(({ number, info }, i) => (\r\n        <>\r\n          <span key={number + i}>\r\n            <span>Número:</span> {number}{' '}\r\n            <span className=\"separator\">{'->'}</span> <span>Info:</span> {info}\r\n          </span>\r\n          <br />\r\n        </>\r\n      ))}\r\n    </Info>\r\n    <Buttons>\r\n      <Button color=\"info\" outline onClick={onGoBack}>\r\n        Volver\r\n      </Button>\r\n      <Button color=\"success\" onClick={onConfirm}>\r\n        Confirmar y guardar\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nconst Info = styled.p`\r\n  width: 100%;\r\n  height: 400px;\r\n  background: ${({ theme }) =>\r\n    theme.darkMode ? '#fff' : theme.text.colors.black};\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  span {\r\n    color: ${({ theme }) =>\r\n      theme.darkMode ? theme.text.colors.black : '#fff'};\r\n    display: inline-block;\r\n    margin-bottom: 0.1em;\r\n\r\n    span:not(.separator) {\r\n      background-color: #999;\r\n      padding: 2px 10px;\r\n      border-radius: 3px;\r\n    }\r\n\r\n    .separator {\r\n      display: inline-block;\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n`\r\n\r\nexport { Review }\r\n","import React from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport { Buttons, Description, Title } from '../styles'\r\nimport { AddPhoneResponse } from '../types'\r\n\r\ninterface ResultProps {\r\n  response: AddPhoneResponse\r\n  onAddMore: () => void\r\n  onBackToAdminPanel: () => void\r\n}\r\n\r\nconst Result: React.FC<ResultProps> = ({\r\n  response,\r\n  onAddMore,\r\n  onBackToAdminPanel,\r\n}) => (\r\n  <Container>\r\n    <Title>¡Listo! 🌟</Title>\r\n    <h4>Números agregados: {response.successCount}</h4>\r\n    <h4>Números que no se agregaron(*): {response.failureCount}</h4>\r\n    <Description className=\"mt-3\">\r\n      * Cuando un número no se agrega, por lo general se debe a que es\r\n      duplicado.\r\n    </Description>\r\n    <Buttons className=\"mt-5\">\r\n      <Button color=\"info\" onClick={onAddMore}>\r\n        Agregar más números\r\n      </Button>\r\n      <Button color=\"success\" onClick={onBackToAdminPanel}>\r\n        Volver al panel de administrador\r\n      </Button>\r\n    </Buttons>\r\n  </Container>\r\n)\r\n\r\nexport { Result }\r\n","import React, { useState } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\r\nimport { AddPhonePayload, AddPhoneResponse, NewPhone } from './types'\r\nimport { EntryData, Result, Review } from './components'\r\nimport { useFetch } from 'hooks'\r\nimport { css } from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst breadcrumbItems = [\r\n  {\r\n    title: 'Panel de Administración',\r\n    linkTo: '/admin-panel',\r\n  },\r\n  {\r\n    title: 'Agregar Números',\r\n  },\r\n]\r\n\r\nconst AddPhones: React.FC = () => {\r\n  const [step, setStep] = useState<number>(1)\r\n  const [entryData, setEntryData] = useState<NewPhone[]>([])\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [serverResponse, setServerResponse] = useState<AddPhoneResponse | null>(\r\n    null\r\n  )\r\n\r\n  const Fetch = useFetch()\r\n\r\n  const { AlertManager } = useAlerts()\r\n\r\n  const history = useHistory()\r\n\r\n  const handleNextStep = () => setStep(step + 1)\r\n\r\n  const handleSetEntrydata = (data: NewPhone[]) => setEntryData(data)\r\n\r\n  const handleBackToStepOne = () => setStep(1)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const [err, response] = await Fetch().post<\r\n        AddPhonePayload,\r\n        AddPhoneResponse\r\n      >('add_numbers', { phones: entryData })\r\n\r\n      if (err) throw err\r\n\r\n      setServerResponse(response)\r\n      setStep(3)\r\n    } catch {\r\n      AlertManager.show('add-phones-error', { timeout: 13000 })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setStep(1)\r\n    setEntryData([])\r\n    setServerResponse(null)\r\n  }\r\n\r\n  const handleBackToAdmin = () => {\r\n    history.push('/admin-panel')\r\n  }\r\n\r\n  if (isLoading) return <Spinner container fulfill />\r\n\r\n  return (\r\n    <Container className=\"pt-3 pb-5\">\r\n      <Alert\r\n        name=\"add-phones-error\"\r\n        position=\"bottom\"\r\n        containerCSS={FailAlertCss}\r\n      >\r\n        Hubo un error guardando los nuevos números. Por favor, revise los datos\r\n        e intente de nuevo. Si el problema persiste, contacte al desarrollador\r\n        para solucionarlo.{' '}\r\n      </Alert>\r\n      <Breadcrumb items={breadcrumbItems} />\r\n      {step === 1 && (\r\n        <EntryData\r\n          onNextStep={handleNextStep}\r\n          handleSetEntrydata={handleSetEntrydata}\r\n        />\r\n      )}\r\n      {step === 2 && (\r\n        <Review\r\n          entryData={entryData}\r\n          onGoBack={handleBackToStepOne}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      )}\r\n      {step === 3 && serverResponse && (\r\n        <Result\r\n          response={serverResponse}\r\n          onAddMore={reset}\r\n          onBackToAdminPanel={handleBackToAdmin}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst FailAlertCss = css`\r\n  background-color: ${({ theme }) => theme.text.colors.red};\r\n`\r\n\r\nexport { AddPhones }\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;"],"sourceRoot":""}