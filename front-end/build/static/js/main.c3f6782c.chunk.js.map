{"version":3,"sources":["consts/index.ts","hooks/useConfig.ts","hooks/useAuth.ts","services/Fetch.ts","services/PhoneStorage.ts","hooks/usePhoneStorage.ts","hooks/useFetch.ts","hooks/useTranslation.ts","hooks/useButtonColor.ts","types/index.ts","components/TerritorySelector.tsx","components/Navbar.tsx","components/TestingLabel.tsx","components/Layout.tsx","components/TerritoryVerifier.tsx","components/Spinner.tsx","components/ErrorDisplay.tsx","components/Breadcrumb.tsx","components/Switch.tsx","components/ConfirmationModal.tsx","contexts/config.tsx","contexts/auth.tsx","contexts/translation.tsx","contexts/buttonColor.tsx","contexts/index.tsx","hooks/utils/useOnClickOutside.ts","hooks/utils/useRerender.ts","hooks/utils/useReactive.ts","hooks/utils/useThrottle.ts","hooks/utils/usePreviousValue.ts","components/Alert/useAlertInner.ts","components/Alert/Provider.tsx","components/Alert/animations.ts","components/Alert/utils.ts","components/Alert/Dismissable.tsx","components/Alert/Alert.tsx","components/Alert/useAlerts.ts","utils/index.ts","theme/theme.ts","theme/provider.tsx","App.tsx","index.tsx","styled/index.ts"],"names":["backendURL","window","location","origin","LOCAL_STORAGE","TOKEN","IS_ADMIN","TEST_MODE","DARK_MODE","ADVANCED_MODE","REGISTERED_TERRITORIES","TRANSLATION_WANTED","labels","shouldTranslate","translations","Feedback","UNANSWERED","ANSWERED","NON_EXISTENT","NO_CALL","ANSWERING_MACHINE","POSTPONE","IGNORE","CampaignFeedback","RUSHED","useConfig","useContext","ConfigContext","useAuth","AuthContext","Fetch","isTest","useToken","currentTerritoryId","token","localStorage","getItem","console","warn","this","url","method","body","URL","path","params","composeQueryParams","test","territory","toString","URI","options","JSON","stringify","decamelizeKeys","undefined","headers","Authorization","fetch","request","ok","contentType","get","includes","json","text","response","data","camelizeKeys","query","Object","keys","map","k","encodeURIComponent","decamelize","join","doRequest","generateFetchParams","PhoneStorage","phonesStorageKey","phones","parse","phone","getAll","find","p","id","length","popped","shift","push","setItem","newStatus","toUpdate","status","restore","lastStatus","usePhoneStorage","reactive","useReactive","testModeEnabled","useMemo","PhoneStorageConstructor","bind","add","update","useFetch","currentTerritory","useCallback","useTranslation","TranslationContext","useButtonColor","ButtonColorContext","TerritorySelector","React","forwardRef","ref","onChange","defaultValue","excludeCurrent","name","noEmptyValue","availableTerritories","territories","registeredTerritories","filter","t","public","Input","type","e","target","value","innerRef","Navbar","useState","collapsed","setCollapsed","mobileNavRef","useRef","showInstallButton","setShowInstallButton","installEventRef","isTerritoryChangerOpen","setIsTerritoryChangerOpen","history","useHistory","useLocation","useOnClickOutside","toggleNavbar","AlertManager","useAlerts","CONG_INITIALS","darkModeEnabled","advancedModeEnabled","toggleAdvancedMode","toggleDarkMode","toggleTestMode","isAuth","isAdmin","doLogout","translationWanted","toggleTranslationWanted","onLinkClicked","useEffect","addEventListener","preventDefault","current","isInWebAppiOS","navigator","standalone","isInWebAppChrome","matchMedia","matches","Alert","position","variant","color","dark","Container","NavBarMain","AppName","className","AdminTerritoryIndicator","OverflowEllipsis","NavbarToggler","onClick","Collapse","isOpen","navbar","MobileNav","CurrentTerritoryLabel","style","display","ChangeTerritoryButton","outline","inline","territoryName","encoded","search","Separator","spacing","NavItem","label","checked","show","timeout","hide","RouterLink","to","background","ButtonContainer","NavLink","Button","block","prompt","userChoice","then","choiceResult","outcome","Legend","process","styled","div","NavbarBrand","small","theme","colors","secondary","Nav","Link","darkMode","lightgreen","info","noPadding","css","span","yellow","white","TestingLabel","TestingLabelContainer","Layout","children","Helmet","darkStyles","TerritoryVerifier","configsLoading","setCurrentTerritory","registerTerritory","unregisterTerritory","baseTerritoryName","territoryData","toLowerCase","decodeURIComponent","isValid","existingTerritories","forEach","fulfill","container","stripTerritory","pathname","Spinner","SpinnerContainer","Math","floor","random","width","height","navbarHeight","ErrorDisplay","message","ErrorContainer","error","Breadcrumb","items","index","title","linkTo","BreadcrumbItem","active","Switch","SwitchContainer","labelTheme","split","htmlFor","black","useConfirmationModal","isModalOpen","setIsModalOpen","toggleModal","reset","setData","askEditConfirmation","ConfirmationModal","onConfirm","buttonColor","confirmationLabel","Modal","centered","toggle","ModalHeader","ModalBody","ModalFooter","createContext","ConfigProvider","configValue","useConfigInternal","Provider","setDarkModeEnabled","setAdvancedModeEnabled","setTestModeEnabled","setCongInitials","configurations","setConfigurations","setTerritories","setConfigsLoading","configsError","setConfigsError","stored","initialState","setRegisteredTerritories","getConfigs","a","err","initials","configs","updateTerritories","removeItem","updateConfigs","some","i","newStore","AuthProvider","authValue","setIsAuth","setIsAdmin","isLoading","setIsLoading","doLogin","username","password","post","accessToken","TranslationProvider","translationValue","setTranslations","setTranslationWanted","doFetch","showSwitch","ButtonColorProvider","buttonColorValue","defaultButtonColors","unanswered","answered","nonExistent","noCall","answeringMachine","postponed","ignored","rushed","buttonColors","setButtonColors","ContextProviders","handler","listener","event","el","contains","document","removeEventListener","useRerender","setDummy","forceUpdate","cb","returnData","useThrottle","timeoutRef","readyRef","clearTimeout","setTimeout","usePreviousValue","prev","emptyState","permanent","AlertContext","AlertProvider","alertValue","state","setState","showHandler","opts","hideHandler","hideAllHandler","getByName","hideAll","useAlertInner","popUp","isDesktop","keyframes","popDown","popUpCentered","popDownCentered","getPositionalCSS","animationDuration","commonPositionalStyle","getDesktopScackbarAnimation","getMobileSnackbarStyle","endsWith","pd","pu","startsWith","enter","exit","breakpoints","down","Dismissable","InnerDismissable","dismiss","cloneElement","onClose","enterAnimation","exitAnimation","animationTimingFunction","noStyle","containerCSS","isShowing","setIsShowing","storedData","setStoredData","hideTimeoutRef","handleHide","doHide","Promise","r","useLayoutEffect","processedChildren","Snack","animation","role","Children","child","isValidElement","props","ReactDOM","createPortal","querySelector","animationProps","variantCss","SuccessVariant","FailureVariant","isToday","date","inputDate","Date","todaysDate","setHours","slice","sizes","xs","sm","md","lg","xl","green","blue","red","lightblue","up","size","between","from","AdminPanel","lazy","Login","Telefonica","StatisticsPanel","AddPhones","AddNewPhones","ImportPhones","SearchAndEdit","Configurations","Passwords","ManageTerritories","ProtectedRoute","component","condition","fallbackURL","restProps","WithTerritoryVerifier","render","match","MainRouter","returnTo","URLSearchParams","prevTestModeEnabled","fallback","exact","App","getElementById"],"mappings":"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","file":"static/js/main.c3f6782c.chunk.js","sourcesContent":["import { Feedback, CampaignFeedback, FeedbackExtended } from 'types'\n\nexport const backendURL =\n  process.env.NODE_ENV === 'development'\n    ? 'https://telefonicatesting.pythonanywhere.com/'\n    : window.location.origin + '/'\n\nexport const LOCAL_STORAGE = {\n  TOKEN: 'token',\n  IS_ADMIN: 'is_admin',\n  TEST_MODE: 'test-mode',\n  DARK_MODE: 'dark-mode',\n  ADVANCED_MODE: 'advanced-mode',\n  REGISTERED_TERRITORIES: 'registered-territories',\n  TRANSLATION_WANTED: 'translation-wanted',\n}\n\nexport const labels = (\n  shouldTranslate: boolean,\n  translations: Record<string, string>\n): Record<FeedbackExtended, string> =>\n  !shouldTranslate\n    ? {\n        [Feedback.UNANSWERED]: 'No en casa',\n        [Feedback.ANSWERED]: 'Atendió',\n        [Feedback.NON_EXISTENT]: 'No existe',\n        [Feedback.NO_CALL]: 'No visitar',\n        [Feedback.ANSWERING_MACHINE]: 'Contestador',\n        [Feedback.POSTPONE]: 'Aplazar',\n        [Feedback.IGNORE]: 'Ignorar',\n        [CampaignFeedback.RUSHED]: 'Completado',\n      }\n    : {\n        [Feedback.UNANSWERED]: translations?.['d5'],\n        [Feedback.ANSWERED]: translations?.['d4'],\n        [Feedback.NON_EXISTENT]: translations?.['e1'],\n        [Feedback.NO_CALL]: translations?.['d9'],\n        [Feedback.ANSWERING_MACHINE]: translations?.['d6'],\n        [Feedback.POSTPONE]: translations?.['d7'],\n        [Feedback.IGNORE]: translations?.['d8'],\n        [CampaignFeedback.RUSHED]: translations?.['e7'],\n      }\n","import { useContext } from 'react'\nimport { ConfigContext } from 'contexts'\n\nexport const useConfig = () => useContext(ConfigContext)\n","import { AuthContext } from 'contexts'\nimport { useContext } from 'react'\n\nexport const useAuth = () => useContext(AuthContext)\n","import { backendURL, LOCAL_STORAGE } from 'consts'\nimport { camelizeKeys, decamelizeKeys, decamelize } from 'humps'\n\ntype Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'\n\ntype ReturnStatement<T> = [Record<string, unknown> | null, T]\n\ntype URLObject =\n  | string\n  | {\n      path: string\n      params: Record<string, string>\n    }\n\nclass Fetch {\n  private token: string\n  private useToken: boolean\n  private isTest: boolean\n  private currentTerritoryId: number | undefined\n\n  constructor(\n    isTest: boolean,\n    useToken: boolean,\n    currentTerritoryId: number | undefined\n  ) {\n    const token = localStorage.getItem(LOCAL_STORAGE.TOKEN) ?? ''\n    if (useToken && !token)\n      console.warn(\n        'Warning, trying to use token when there is none in storage.'\n      )\n\n    this.token = token\n    this.useToken = useToken\n    this.isTest = isTest\n    this.currentTerritoryId = currentTerritoryId\n  }\n\n  private generateFetchParams(\n    url: URLObject,\n    method: Method = 'GET',\n    body?: object\n  ) {\n    const URL: string = typeof url === 'string' ? url : url.path\n\n    const params: string = `${this.composeQueryParams({\n      ...(typeof url !== 'string' ? url.params : {}),\n      ...(this.isTest ? { test: '1' } : {}),\n      ...(this.currentTerritoryId\n        ? { territory: this.currentTerritoryId.toString() }\n        : {}),\n    })}`\n\n    const URI = `${backendURL}${URL}${params}`\n    const options = {\n      method,\n      body: body ? JSON.stringify(decamelizeKeys(body)) : undefined,\n      headers: {\n        Authorization: this.useToken ? `Bearer ${this.token}` : undefined,\n        'content-type': 'application/json',\n      },\n    }\n    return [URI, options] as [string, Parameters<typeof window.fetch>[1]]\n  }\n\n  private async doRequest<T>(\n    fetch: ReturnType<typeof window.fetch>\n  ): Promise<ReturnStatement<T>> {\n    try {\n      const request = await fetch\n      if (!request.ok) throw request\n      const contentType = request.headers.get('content-type')\n      const response = contentType?.includes('application/json')\n        ? await request.json()\n        : await request.text()\n      const data = response && camelizeKeys(response)\n      if (process.env.NODE_ENV === 'development') console.log('response', data)\n      return ([null, data] as unknown) as ReturnStatement<T>\n    } catch (error) {\n      console.warn('Fetching error:', error)\n      return ([error, null] as unknown) as ReturnStatement<T>\n    }\n  }\n\n  private composeQueryParams(params: Record<string, string>): string {\n    const query = Object.keys(params)\n      .map(\n        (k) =>\n          encodeURIComponent(decamelize(k)) +\n          '=' +\n          encodeURIComponent(params[k])\n      )\n      .join('&')\n    return query && '?' + query\n  }\n\n  async get<T>(url: URLObject): Promise<ReturnStatement<T>> {\n    return this.doRequest(fetch(...this.generateFetchParams(url)))\n  }\n\n  async post<Payload extends object, Response>(\n    url: URLObject,\n    body: Payload\n  ): Promise<ReturnStatement<Response>> {\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'POST', body)))\n  }\n\n  async put<Payload extends object, Response = undefined>(\n    url: URLObject,\n    body: Payload\n  ): Promise<ReturnStatement<Response>> {\n    return this.doRequest(fetch(...this.generateFetchParams(url, 'PUT', body)))\n  }\n\n  async delete<Payload extends object, Response = void>(\n    url: URLObject,\n    body?: Payload\n  ): Promise<ReturnStatement<Response>> {\n    return this.doRequest(\n      fetch(...this.generateFetchParams(url, 'DELETE', body))\n    )\n  }\n}\n\nexport { Fetch }\n","import { FeedbackExtended, StoragePhone } from 'types'\n\nclass PhoneStorage {\n  private phonesStorageKey: string\n\n  constructor(isTest: boolean) {\n    this.phonesStorageKey = 'phones' + (isTest ? '_test' : '')\n  }\n\n  public getAll(): StoragePhone[] {\n    const phones = localStorage.getItem(this.phonesStorageKey)\n    return phones ? JSON.parse(phones) : []\n  }\n\n  public add(phone: StoragePhone): StoragePhone | null {\n    const phones = this.getAll()\n    if (phones.find((p) => p.id === phone.id)) return null\n\n    // TODO: maybe max number should come from backend\n    if (phones.length >= 6) {\n      const popped = phones.shift()\n      phones.push(phone)\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\n      return popped ?? null\n    } else {\n      phones.push(phone)\n      localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\n      return null\n    }\n  }\n\n  public update(id: number, newStatus: FeedbackExtended) {\n    const phones = this.getAll()\n    const toUpdate = phones.find((p) => p.id === id)\n    if (!toUpdate) return\n    toUpdate.status = newStatus\n    toUpdate.restore.lastStatus = newStatus\n    localStorage.setItem(this.phonesStorageKey, JSON.stringify(phones))\n  }\n}\n\nexport { PhoneStorage }\n","import { useMemo } from 'react'\nimport { PhoneStorage as PhoneStorageConstructor } from 'services'\nimport { useConfig } from '.'\nimport { useReactive } from './utils'\n\nconst usePhoneStorage = () => {\n  const { reactive } = useReactive()\n  const { testModeEnabled } = useConfig()\n\n  const PhoneStorage = useMemo(\n    () => new PhoneStorageConstructor(testModeEnabled),\n    [testModeEnabled]\n  )\n\n  return useMemo(\n    () => ({\n      getAll: PhoneStorage.getAll.bind(PhoneStorage),\n      add: reactive(PhoneStorage.add.bind(PhoneStorage)),\n      update: reactive(PhoneStorage.update.bind(PhoneStorage)),\n    }),\n    [PhoneStorage, reactive]\n  )\n}\n\nexport { usePhoneStorage }\n","import { useCallback } from 'react'\nimport { Fetch } from 'services'\nimport { useConfig } from '.'\n\nconst useFetch = () => {\n  const { testModeEnabled, currentTerritory } = useConfig()\n\n  const FetchFunction = useCallback(\n    (useToken: boolean = true) =>\n      new Fetch(testModeEnabled, useToken, currentTerritory?.id),\n    [testModeEnabled, currentTerritory?.id]\n  )\n\n  return FetchFunction\n}\n\nexport { useFetch }\n","import { useContext } from 'react'\nimport { TranslationContext } from 'contexts'\n\nexport const useTranslation = () => useContext(TranslationContext)\n","import { useContext } from 'react'\nimport { ButtonColorContext } from 'contexts'\n\nexport const useButtonColor = () => useContext(ButtonColorContext)\n","export enum Feedback {\n  UNANSWERED = 0,\n  ANSWERED = 1,\n  NON_EXISTENT = 2,\n  NO_CALL = 3,\n  ANSWERING_MACHINE = 4,\n  POSTPONE = 5,\n  IGNORE = 6,\n}\n\nexport enum CampaignFeedback {\n  RUSHED = 7,\n}\n\nexport type FeedbackExtended = Feedback | CampaignFeedback\n\nexport interface Phone {\n  answeredOn: null | string\n  answeringMachineDate: null | string\n  comments: string\n  commentedOn: null | string\n  info: string | null\n  fulfilledOn: null | string\n  id: number\n  noCall: boolean\n  nonExistent: boolean\n  postponedDays: number\n  phone: string\n  unansweredCount: number\n  unansweredDate: null | string\n  noWeekends: boolean\n  territoryId: number\n  campaignStatus: boolean\n}\n\nexport type OriginalData = Pick<\n  Phone,\n  | 'answeredOn'\n  | 'fulfilledOn'\n  | 'noCall'\n  | 'nonExistent'\n  | 'postponedDays'\n  | 'unansweredCount'\n  | 'unansweredDate'\n>\n\nexport interface StoragePhone {\n  id: Phone['id']\n  status: null | FeedbackExtended\n  phone: Phone['phone']\n  savedOn: number\n  restore: OriginalData & {\n    lastStatus: null | FeedbackExtended\n  }\n}\n\nexport interface PhoneOptionsType {\n  callOnWeekends: boolean\n}\n\nexport interface Configurations {\n  unansweredMaxAttemps: number\n  answeringMachineMaxAttemps: number\n  answeringMachinePostponedDays: number\n  postponedButtonDays: number\n  nonExistentPostponedDays: number\n  hiddenButtons: string\n  territoryId: number\n}\n\nexport interface Territory {\n  id: number\n  name: string\n  /**\n   * This should be a boolean, but BE is sending back a 0 | 1 for now, beware\n   */\n  active: number\n  /**\n   * This should be a boolean, but BE is sending back a 0 | 1 for now, beware\n   */\n  campaignMode: number\n  completed: number\n  totalNumbers: number\n  /**\n   * This should be a boolean, but BE is sending back a 0 | 1 for now, beware\n   */\n  public: number\n}\n","import { useConfig } from 'hooks'\nimport React from 'react'\nimport { Input } from 'reactstrap'\n\ntype TerritorySelectorProps = {\n  onChange?: (name: string) => void\n  defaultValue?: 'current' | 'none'\n  excludeCurrent?: boolean\n  name?: string\n  noEmptyValue?: boolean\n  availableTerritories?: 'all' | 'registered&public'\n}\n\nconst TerritorySelector = React.forwardRef<\n  HTMLInputElement,\n  TerritorySelectorProps\n>(\n  (\n    {\n      onChange,\n      defaultValue = 'none',\n      excludeCurrent = false,\n      name,\n      noEmptyValue = false,\n      availableTerritories = 'all',\n    },\n    ref\n  ) => {\n    const { currentTerritory, territories, registeredTerritories } = useConfig()\n\n    const options =\n      availableTerritories === 'all'\n        ? territories\n        : territories.filter(\n            (t) => registeredTerritories.includes(t.id) || !!t.public\n          )\n\n    return (\n      <Input\n        type=\"select\"\n        onChange={(e) => onChange?.(e.target.value)}\n        defaultValue={\n          defaultValue === 'current'\n            ? currentTerritory.name\n            : noEmptyValue\n            ? undefined\n            : ''\n        }\n        innerRef={ref}\n        name={name}\n      >\n        {defaultValue === 'none' && !noEmptyValue && <option value=\"\"></option>}\n        {options.map((t) =>\n          t.id === currentTerritory.id && excludeCurrent ? null : (\n            <option key={t.id} value={t.name}>\n              {t.name}\n            </option>\n          )\n        )}\n      </Input>\n    )\n  }\n)\n\nexport { TerritorySelector }\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Collapse,\n  Navbar as BNavbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Button,\n} from 'reactstrap'\nimport styled, { css } from 'styled'\nimport { Link } from 'react-router-dom'\nimport { useAuth, useConfig, useTranslation } from 'hooks'\nimport { useOnClickOutside } from 'hooks/utils'\nimport { Alert, useAlerts, Switch } from '.'\nimport { useHistory, useLocation } from 'react-router'\nimport { TerritorySelector } from './TerritorySelector'\n\nconst Navbar: React.FC<{ territory?: string }> = ({ territory }) => {\n  const [collapsed, setCollapsed] = useState(true)\n  const mobileNavRef = useRef<HTMLDivElement | null>(null)\n\n  const [showInstallButton, setShowInstallButton] = useState<boolean>(true)\n  const installEventRef = useRef<any>(null)\n\n  const [isTerritoryChangerOpen, setIsTerritoryChangerOpen] =\n    useState<boolean>(false)\n\n  const toggleTerritoryChanger = () =>\n    setIsTerritoryChangerOpen(!isTerritoryChangerOpen)\n\n  const history = useHistory()\n  const location = useLocation()\n\n  const handleTerritoryChange = (territoryName: string) => {\n    const encoded = encodeURIComponent(territoryName)\n    history.push(`/${encoded}/admin-panel/${location.search}`)\n    setIsTerritoryChangerOpen(false)\n  }\n\n  useOnClickOutside(mobileNavRef, () => !collapsed && setCollapsed(true))\n\n  const toggleNavbar = () => setCollapsed(!collapsed)\n\n  const { AlertManager } = useAlerts()\n\n  const {\n    CONG_INITIALS,\n    darkModeEnabled,\n    advancedModeEnabled,\n    testModeEnabled,\n    currentTerritory,\n    registeredTerritories,\n    territories,\n    toggleAdvancedMode,\n    toggleDarkMode,\n    toggleTestMode,\n  } = useConfig()\n\n  const availableTerritories =\n    territories.filter((t) => !!t.public).length + registeredTerritories.length\n\n  const { isAuth, isAdmin, doLogout } = useAuth()\n  const {\n    translationWanted,\n    toggleTranslationWanted,\n    translations,\n    shouldTranslate,\n  } = useTranslation()\n\n  const onLogout = () => {\n    doLogout()\n    onLinkClicked()\n  }\n\n  const onLinkClicked = () => toggleNavbar()\n\n  const onTestModeClick = (checked: boolean) => {\n    checked\n      ? AlertManager.show('test-mode-alert', { timeout: 6000 })\n      : AlertManager.hide('test-mode-alert')\n    toggleTestMode(checked)\n  }\n\n  useEffect(() => {\n    window.addEventListener('beforeinstallprompt', (e) => {\n      e.preventDefault()\n      installEventRef.current = e\n    })\n    // @ts-ignore\n    const isInWebAppiOS = window.navigator.standalone === true\n    const isInWebAppChrome = window.matchMedia(\n      '(display-mode: standalone)'\n    ).matches\n\n    if (isInWebAppiOS || isInWebAppChrome) setShowInstallButton(false)\n  }, [])\n\n  const installApp = () => {\n    installEventRef.current?.prompt()\n    installEventRef.current?.userChoice.then((choiceResult: any) => {\n      choiceResult.outcome === 'accepted' && setShowInstallButton(false)\n    })\n  }\n\n  return (\n    <>\n      <Alert name=\"test-mode-alert\" position=\"bottom\">\n        En el modo de prueba, todo funciona con un duplicado de la app real.\n      </Alert>\n      <Alert name=\"territory-registered-alert\" position=\"top\" variant=\"success\">\n        {(name: string) =>\n          (!shouldTranslate\n            ? `¡Nuevo territorio registrado:`\n            : translations?.['b8']) + ` \"${name}\"!`\n        }\n      </Alert>\n      <div ref={mobileNavRef}>\n        <BNavbar color=\"dark\" dark>\n          <Container>\n            <NavBarMain>\n              <AppName className=\"mr-auto\">\n                {CONG_INITIALS && CONG_INITIALS.length < 5\n                  ? `${CONG_INITIALS} `\n                  : ''}\n                {shouldTranslate ? translations?.['a1'] : 'Telefónica'}\n                {territory && isAdmin && (\n                  <AdminTerritoryIndicator>\n                    <span className=\"d-none d-md-inline mr-1\">\n                      Territorio actual:{' '}\n                    </span>\n                    <span className=\"d-md-none\">(</span>\n                    <OverflowEllipsis>{territory}</OverflowEllipsis>\n                    <span className=\"d-md-none\">)</span>\n                  </AdminTerritoryIndicator>\n                )}\n              </AppName>\n              <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n            </NavBarMain>\n            <Collapse isOpen={!collapsed} navbar>\n              <MobileNav navbar>\n                {!isAdmin && !!currentTerritory && (\n                  <>\n                    <CurrentTerritoryLabel>\n                      <span style={{ display: 'block' }}>\n                        {!shouldTranslate\n                          ? 'Cerrar sesión'\n                          : translations?.['b2']}\n                        : <span>{currentTerritory.name}</span>{' '}\n                      </span>\n                      {availableTerritories >= 2 && (\n                        <ChangeTerritoryButton\n                          color=\"link\"\n                          onClick={toggleTerritoryChanger}\n                          outline={false}\n                          inline\n                        >\n                          ({!shouldTranslate ? 'Cambiar' : translations?.['c3']}\n                          )\n                        </ChangeTerritoryButton>\n                      )}\n                    </CurrentTerritoryLabel>\n\n                    <Collapse isOpen={isTerritoryChangerOpen}>\n                      <TerritorySelector\n                        defaultValue=\"current\"\n                        onChange={handleTerritoryChange}\n                        availableTerritories=\"registered&public\"\n                      />\n                    </Collapse>\n                    <Separator spacing=\"0.5rem\" />\n                  </>\n                )}\n                {translations && (\n                  <NavItem>\n                    <Switch\n                      label={translations['a0']}\n                      checked={translationWanted}\n                      onChange={toggleTranslationWanted}\n                    />\n                  </NavItem>\n                )}\n                <NavItem>\n                  <Switch\n                    label={\n                      !shouldTranslate ? 'Modo oscuro' : translations?.['a7']\n                    }\n                    checked={darkModeEnabled}\n                    onChange={toggleDarkMode}\n                  />\n                </NavItem>\n                {isAuth && (\n                  <NavItem>\n                    <Switch\n                      label={\n                        !shouldTranslate\n                          ? 'Modo avanzado'\n                          : translations?.['a8']\n                      }\n                      checked={advancedModeEnabled}\n                      onChange={toggleAdvancedMode}\n                    />\n                  </NavItem>\n                )}\n                {isAdmin && (\n                  <NavItem>\n                    <Switch\n                      label=\"Modo de prueba\"\n                      checked={testModeEnabled}\n                      onChange={onTestModeClick}\n                    />\n                  </NavItem>\n                )}\n                {isAdmin && (\n                  <Separator>\n                    <NavItem onClick={onLinkClicked}>\n                      <RouterLink\n                        to={`/${currentTerritory?.name}/admin-panel`}\n                        background=\"dark\"\n                      >\n                        Ir al Panel de administración\n                      </RouterLink>\n                    </NavItem>\n                    <NavItem onClick={onLinkClicked}>\n                      <RouterLink\n                        to={`/${currentTerritory?.name}/telefonica`}\n                        background=\"dark\"\n                      >\n                        Ir a Telefónica\n                      </RouterLink>\n                    </NavItem>\n                  </Separator>\n                )}\n                {isAuth && (\n                  <NavItem>\n                    <ButtonContainer>\n                      <NavLink onClick={onLogout}>\n                        {!shouldTranslate\n                          ? 'Cerrar sesión'\n                          : translations?.['b1']}\n                      </NavLink>\n                    </ButtonContainer>\n                  </NavItem>\n                )}\n                {showInstallButton && (\n                  <Separator>\n                    <Button\n                      block\n                      className=\"my-2\"\n                      color=\"info\"\n                      onClick={installApp}\n                    >\n                      {!shouldTranslate ? 'Instalar App' : translations?.['a9']}\n                    </Button>\n                  </Separator>\n                )}\n                {CONG_INITIALS && CONG_INITIALS.length >= 5 && (\n                  <Legend>{CONG_INITIALS}</Legend>\n                )}\n                <Legend>v{process.env.REACT_APP_VERSION}</Legend>\n              </MobileNav>\n            </Collapse>\n          </Container>\n        </BNavbar>\n      </div>\n    </>\n  )\n}\n\nconst NavBarMain = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst AppName = styled(NavbarBrand)`\n  display: flex;\n  align-items: baseline;\n  max-width: calc(100% - 56px);\n  flex: 1;\n`\n\nconst AdminTerritoryIndicator = styled.small`\n  overflow: hidden;\n  padding-right: 15px;\n  display: flex;\n  margin-left: auto;\n  color: ${({ theme }) => theme.text.colors.secondary};\n`\n\nconst Legend = styled.small`\n  color: ${({ theme }) => theme.text.colors.secondary};\n`\n\nconst MobileNav = styled(Nav)`\n  justify-content: right;\n  text-align: right;\n  padding-top: 1rem;\n`\n\nconst ButtonContainer = styled.div`\n  border-top: 1px solid gray;\n\n  > a {\n    cursor: pointer;\n    display: inline-block;\n  }\n`\n\nconst RouterLink = styled(Link)<{ noPadding?: boolean; background?: 'dark' }>`\n  color: ${({ theme, background }) =>\n    background === 'dark' || theme.darkMode\n      ? theme.text.colors.lightgreen\n      : theme.text.colors.info};\n  display: inline-block;\n  padding: ${({ noPadding }) => (noPadding ? 0 : 0.5)}rem 0rem;\n`\n\nconst Separator = styled.div<{ spacing?: string }>`\n  border-top: 1px solid gray;\n  ${({ spacing }) =>\n    spacing &&\n    css`\n      margin: ${spacing} 0;\n    `}\n`\n\nconst CurrentTerritoryLabel = styled.span`\n  display: block;\n  align-items: center;\n  > span {\n    color: ${({ theme }) => theme.text.colors.yellow};\n  }\n  > span > span {\n    margin-left: 0.3rem;\n    color: ${({ theme }) => theme.text.colors.white};\n  }\n`\n\nconst ChangeTerritoryButton = styled(Button)`\n  box-shadow: none !important;\n  padding-right: 0;\n  color: ${({ theme }) => theme.text.colors.lightgreen};\n`\n\nconst OverflowEllipsis = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => theme.text.colors.yellow};\n`\n\nexport { Navbar, RouterLink }\n","import React from 'react'\nimport styled from 'styled'\n\nconst TestingLabel: React.FC = () => (\n  <TestingLabelContainer>\n    <span>Modo de Prueba</span>\n  </TestingLabelContainer>\n)\n\nconst TestingLabelContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n  background: darkred;\n  color: white;\n  padding: 5px 10px;\n  border-top: 2px solid orange;\n  border-bottom: 2px solid orange;\n  width: 400px;\n  text-align: center;\n  transform: rotate(-45deg) translateX(-185px) translateY(73px);\n  transform-origin: left;\n`\n\nexport { TestingLabel }\n","import React from 'react'\nimport { useConfig, useTranslation } from 'hooks'\nimport { Alert } from '.'\nimport { Navbar } from './Navbar'\nimport { TestingLabel } from './TestingLabel'\nimport { Helmet } from 'react-helmet'\n\nconst Layout: React.FC = ({ children }) => {\n  const { testModeEnabled, darkModeEnabled, currentTerritory } = useConfig()\n  const { shouldTranslate, translations } = useTranslation()\n\n  return (\n    <>\n      {darkModeEnabled && <Helmet>{darkStyles}</Helmet>}\n      {testModeEnabled && <TestingLabel />}\n      <Navbar territory={currentTerritory?.name} />\n      {children}\n      <Alert name=\"not-so-fast\" position=\"bottom\" variant=\"failure\">\n        {!shouldTranslate\n          ? '¡No tan rápido! No es recomendable tocar un botón tan seguido.'\n          : translations?.['b7']}\n      </Alert>\n    </>\n  )\n}\n\nconst darkStyles = (\n  <style>{`\n    body {\n      background: #222 !important;\n      color: white !important;\n    }\n\n    table {\n      color: white !important;\n    }\n\n    .table-striped thead tr {\n      background-color: rgba(0,0,0,.95)\n    }\n\n    .table-striped tbody tr:nth-of-type(even) {\n      background-color: rgba(0,0,0,.5)\n    }\n\n    .text-secondary {\n      color: #999 !important;\n    }\n\n    .modal-content {\n      background-color: #222 !important;\n    }\n\n    .close {\n      color: white !important;\n    }\n\n    .jumbotron {\n      background: #454b4f !important;\n    }\n\n    input {\n      border-top-style: hidden;\n      border-right-style: hidden;\n      border-left-style: hidden;\n      border-bottom-style: groove;\n      background-color: white;\n    }\n\n    input::placeholder {\n      color: #777 !important;\n    }\n\n    .breadcrumb {\n      background-color: #333;\n    }\n\n    .breadcrumb-item.active {\n      color: #ddd;\n    }\n`}</style>\n)\n\nexport { Layout }\n","import React, { useEffect } from 'react'\nimport { Redirect, useLocation } from 'react-router'\nimport { useAuth, useConfig } from 'hooks'\nimport { Spinner } from '.'\nimport { stripTerritory } from 'utils'\n\ninterface TerritoryVerifierProps {\n  territory: string\n}\n\nconst TerritoryVerifier: React.FC<TerritoryVerifierProps> = ({\n  children,\n  territory,\n}) => {\n  const {\n    territories,\n    configsLoading,\n    registeredTerritories,\n    setCurrentTerritory,\n    registerTerritory,\n    unregisterTerritory,\n  } = useConfig()\n  const { isAdmin } = useAuth()\n  const location = useLocation()\n\n  const baseTerritoryName =\n    territories.find(({ id }) => id === 1)?.name ?? 'base'\n\n  const territoryData = territories.find(\n    ({ name }) =>\n      name.toLowerCase() === decodeURIComponent(territory).toLowerCase()\n  )\n  const isValid = !!territoryData\n\n  useEffect(() => {\n    if (isValid) setCurrentTerritory(territoryData!)\n  }, [territoryData, isValid, setCurrentTerritory])\n\n  useEffect(() => {\n    // register territory once we checked if is valid\n    if (!territories.length) return\n    if (isValid && !territoryData!.public)\n      registerTerritory(territoryData!.id, territoryData!.name, isAdmin)\n  }, [territories, isValid, territoryData, registerTerritory, isAdmin])\n\n  useEffect(() => {\n    // unregister all invalid territories once we have territories fetched\n    if (!territories.length) return\n    const existingTerritories = territories.map((t) => t.id)\n    registeredTerritories.forEach(\n      (id) => !existingTerritories.includes(id) && unregisterTerritory(id)\n    )\n  }, [territories, registeredTerritories, unregisterTerritory])\n\n  if (configsLoading && !territories.length)\n    return <Spinner fulfill container />\n\n  return isValid ? (\n    <>{children}</>\n  ) : (\n    <Redirect\n      to={`/${baseTerritoryName}/${stripTerritory(location.pathname)}${\n        location.search\n      }`}\n    />\n  )\n}\n\nexport { TerritoryVerifier }\n","import React from 'react'\nimport { Spinner as RSSpinner, Container } from 'reactstrap'\nimport styled, { css } from 'styled'\n\nconst colors = ['success', 'danger', 'warning', 'info']\nconst getRandomColor = () => colors[Math.floor(Math.random() * colors.length)]\n\ninterface SpinnerProps {\n  fulfill?: boolean\n  container?: boolean\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({\n  fulfill = false,\n  container = false,\n}) => (\n  <Container className=\"h-100\">\n    <SpinnerContainer\n      fulfill={fulfill}\n      container={container}\n      className=\"d-flex justify-content-center align-items-center\"\n    >\n      <RSSpinner\n        color={getRandomColor()}\n        style={{ width: '3rem', height: '3rem' }}\n      />\n    </SpinnerContainer>\n  </Container>\n)\n\nconst SpinnerContainer = styled.div<Required<SpinnerProps>>`\n  ${({ fulfill, container, theme }) =>\n    fulfill &&\n    css`\n      width: 100%;\n      height: ${container ? `calc(100vh - ${theme.navbarHeight}px)` : '100%'};\n    `}\n`\n\nexport { Spinner }\n","import React, { ReactNode } from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled'\nimport { useTranslation } from 'hooks'\n\ninterface ErrorDisplayProps {\n  message?: ReactNode\n}\n\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({ message }) => {\n  const { shouldTranslate, translations } = useTranslation()\n  return (\n    <ErrorContainer className=\"d-flex justify-content-center align-items-center h-100 text-center\">\n      <h4>\n        {message ?? (\n          <>\n            {!shouldTranslate ? (\n              <>\n                Hubo un problema :( <br /> <br /> Intentá recargando la página.\n              </>\n            ) : (\n              <>\n                {translations?.['g4']} :( <br /> <br /> {translations?.['g5']}\n              </>\n            )}\n          </>\n        )}\n      </h4>\n    </ErrorContainer>\n  )\n}\n\nconst ErrorContainer = styled(Container)`\n  margin-top: 3rem;\n  color: ${({ theme }) => theme.text.colors.error};\n`\n\nexport { ErrorDisplay }\n","import React from 'react'\nimport { Breadcrumb as BBreadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { RouterLink } from '.'\nimport { useConfig } from 'hooks'\n\ninterface BreadcrumbProps {\n  items: Array<{\n    title: string\n    linkTo?: string\n    onClick?: () => void\n  }>\n}\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => {\n  const { currentTerritory } = useConfig()\n\n  return (\n    <BBreadcrumb>\n      {items.map(({ title, linkTo, onClick }, index) => (\n        <BreadcrumbItem\n          key={title}\n          onClick={onClick}\n          active={index === items.length - 1}\n        >\n          {linkTo ? (\n            <RouterLink to={`/${currentTerritory.name}${linkTo}`} noPadding>\n              {title}\n            </RouterLink>\n          ) : (\n            title\n          )}\n        </BreadcrumbItem>\n      ))}\n    </BBreadcrumb>\n  )\n}\n\nexport { Breadcrumb }\n","import React from 'react'\nimport styled from 'styled'\n\nexport interface SwitchProps {\n  label?: string\n  id?: string\n  onChange: (checked: boolean) => void\n  checked: boolean\n  theme?: 'white' | 'dark'\n}\n\nconst Switch: React.FC<SwitchProps> = ({\n  label = '',\n  id = label,\n  onChange,\n  checked,\n  theme = 'dark',\n}) => (\n  <SwitchContainer labelTheme={theme}>\n    <input\n      type=\"checkbox\"\n      id={`${id.split(' ').join('-')}-check`}\n      checked={checked}\n      onChange={(e) => onChange(e.target.checked)}\n    />\n    <label htmlFor={`${id.split(' ').join('-')}-check`}>\n      {label || <span>&nbsp;</span>}\n    </label>\n  </SwitchContainer>\n)\n\nconst SwitchContainer = styled.div<{ labelTheme: 'white' | 'dark' }>`\n  display: inline-block;\n  position: relative;\n  font-size: 16px;\n  line-height: 24px;\n\n  input {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 36px;\n    height: 20px;\n    opacity: 0;\n    z-index: 0;\n\n    :checked + label:before {\n      background-color: rgba(63, 81, 181, 0.5);\n    }\n\n    :checked + label:after {\n      left: 16px;\n      background-color: cornflowerblue;\n      border-color: cornflowerblue;\n    }\n  }\n\n  label {\n    display: block;\n    padding: 0 0 0 44px;\n    cursor: pointer;\n    color: ${({ labelTheme, theme }) =>\n      labelTheme === 'dark'\n        ? theme.text.colors.white\n        : theme.text.colors.black};\n\n    ::before {\n      content: '';\n      position: absolute;\n      top: 5px;\n      left: 0;\n      width: 36px;\n      height: 14px;\n      background-color: #999;\n      border-radius: 14px;\n      z-index: 1;\n      transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    ::after {\n      content: '';\n      position: absolute;\n      top: 2px;\n      left: 0;\n      width: 20px;\n      height: 20px;\n      background-color: #fff;\n      border: 1px solid #ededed;\n      border-radius: 14px;\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n        0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n      z-index: 2;\n      transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n      transition-property: left, background-color, border-color;\n    }\n  }\n`\n\nexport { Switch }\n","import React, { useCallback, useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody } from 'reactstrap'\n\nconst useConfirmationModal = <Data extends {}>() => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\n\n  const toggleModal = () => {\n    isModalOpen ? reset() : setIsModalOpen(!isModalOpen)\n  }\n\n  const [data, setData] = useState<Data | null>(null)\n\n  const askEditConfirmation = (data: Data) => {\n    toggleModal()\n    setData(data)\n  }\n\n  const reset = useCallback(() => {\n    setIsModalOpen(false)\n    setData(null)\n  }, [])\n\n  return {\n    isModalOpen,\n    data,\n    askEditConfirmation,\n    toggleModal,\n    reset,\n  }\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  toggleModal: () => void\n  onConfirm: () => void\n  buttonColor: string\n  title: React.ReactNode\n  body?: React.ReactNode\n  confirmationLabel: React.ReactNode\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  isOpen,\n  toggleModal,\n  onConfirm,\n  buttonColor,\n  confirmationLabel,\n  title,\n  body,\n}) => (\n  <Modal centered isOpen={isOpen} toggle={toggleModal}>\n    <ModalHeader toggle={toggleModal}>{title}</ModalHeader>\n    {body && <ModalBody>{body}</ModalBody>}\n    <ModalFooter>\n      <Button color={buttonColor} onClick={onConfirm}>\n        {confirmationLabel}\n      </Button>\n    </ModalFooter>\n  </Modal>\n)\n\nexport { ConfirmationModal, useConfirmationModal }\n","import React, {\n  createContext,\n  useState,\n  FunctionComponent,\n  useCallback,\n} from 'react'\nimport { useFetch } from 'hooks'\nimport { Configurations, Territory } from 'types'\nimport { LOCAL_STORAGE } from 'consts'\nimport { useAlerts } from 'components'\n\ninterface ConfigType {\n  CONG_INITIALS: string\n  darkModeEnabled: boolean\n  advancedModeEnabled: boolean\n  testModeEnabled: boolean\n  configurations: Configurations\n  territories: Territory[]\n  configsLoading: boolean\n  configsError: boolean\n  currentTerritory: Territory\n  registeredTerritories: number[]\n  toggleDarkMode: (checked: boolean) => void\n  toggleAdvancedMode: (checked: boolean) => void\n  toggleTestMode: (checked: boolean) => void\n  getConfigs: (Fetch: ReturnType<typeof useFetch>) => Promise<void>\n  updateConfigs: (configs: Configurations) => void\n  setCurrentTerritory: (territory: Territory) => void\n  updateTerritories: (territories: Territory[]) => void\n  registerTerritory: (id: number, name: string, isAdmin: boolean) => void\n  unregisterTerritory: (id: number) => void\n}\n\nexport const ConfigContext = createContext<ConfigType>({} as ConfigType)\n\nexport const ConfigProvider: FunctionComponent = ({ children }) => {\n  const configValue = useConfigInternal()\n\n  return (\n    <ConfigContext.Provider value={configValue}>\n      {children}\n    </ConfigContext.Provider>\n  )\n}\n\nconst useConfigInternal = (): ConfigType => {\n  const [darkModeEnabled, setDarkModeEnabled] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.DARK_MODE)\n  )\n  const [advancedModeEnabled, setAdvancedModeEnabled] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.ADVANCED_MODE)\n  )\n  const [testModeEnabled, setTestModeEnabled] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.TEST_MODE)\n  )\n\n  const [CONG_INITIALS, setCongInitials] = useState<string>('')\n\n  const [configurations, setConfigurations] =\n    useState<Configurations | undefined>()\n  const [territories, setTerritories] = useState<Territory[]>([])\n  const [currentTerritory, setCurrentTerritory] =\n    useState<Territory | undefined>()\n  const [configsLoading, setConfigsLoading] = useState<boolean>(true)\n  const [configsError, setConfigsError] = useState<boolean>(false)\n\n  const [registeredTerritories, setRegisteredTerritories] = useState<number[]>(\n    () => {\n      const stored = JSON.parse(\n        localStorage.getItem(LOCAL_STORAGE.REGISTERED_TERRITORIES) ?? '[]'\n      )\n      if (stored.length) return stored\n\n      const initialState = [1] // [base]\n      localStorage.setItem(\n        LOCAL_STORAGE.REGISTERED_TERRITORIES,\n        JSON.stringify(initialState)\n      )\n      return initialState\n    }\n  )\n\n  const { AlertManager } = useAlerts()\n\n  const getConfigs = useCallback(async (Fetch: ReturnType<typeof useFetch>) => {\n    try {\n      setConfigsLoading(true)\n      const [err, response] = await Fetch().get<{\n        configs: Configurations\n        territories: Territory[]\n        initials: string\n      }>('/configurations')\n\n      if (err) throw err\n\n      setCongInitials(response.initials)\n      setConfigurations(response.configs)\n      setTerritories(\n        response.territories.map((t) => ({\n          ...t,\n          name: decodeURIComponent(t.name),\n        }))\n      )\n      setConfigsError(false)\n    } catch {\n      setConfigsError(true)\n    } finally {\n      setConfigsLoading(false)\n    }\n  }, [])\n\n  const updateConfigs = (configs: Configurations) => setConfigurations(configs)\n\n  const updateTerritories = useCallback((territories: Territory[]) => {\n    setTerritories(\n      territories.map((t) => ({ ...t, name: decodeURIComponent(t.name) }))\n    )\n  }, [])\n\n  const toggleDarkMode = (checked: boolean) => {\n    checked\n      ? localStorage.setItem(LOCAL_STORAGE.DARK_MODE, '1')\n      : localStorage.removeItem(LOCAL_STORAGE.DARK_MODE)\n    setDarkModeEnabled(checked)\n  }\n\n  const toggleAdvancedMode = (checked: boolean) => {\n    checked\n      ? localStorage.setItem(LOCAL_STORAGE.ADVANCED_MODE, '1')\n      : localStorage.removeItem(LOCAL_STORAGE.ADVANCED_MODE)\n    setAdvancedModeEnabled(checked)\n  }\n\n  const toggleTestMode = (checked: boolean) => {\n    checked\n      ? localStorage.setItem(LOCAL_STORAGE.TEST_MODE, '1')\n      : localStorage.removeItem(LOCAL_STORAGE.TEST_MODE)\n    setTestModeEnabled(checked)\n  }\n\n  const registerTerritory = useCallback(\n    (id: number, name: string, isAdmin: boolean) => {\n      const stored: number[] = JSON.parse(\n        localStorage.getItem(LOCAL_STORAGE.REGISTERED_TERRITORIES) ?? '[]'\n      )\n      const alreadyRegistered = stored.some((i) => i === id)\n\n      if (alreadyRegistered) return\n\n      stored.push(id)\n      localStorage.setItem(\n        LOCAL_STORAGE.REGISTERED_TERRITORIES,\n        JSON.stringify(stored)\n      )\n      setRegisteredTerritories(stored)\n      !isAdmin &&\n        AlertManager.show('territory-registered-alert', {\n          timeout: 2000,\n          data: name,\n        })\n    },\n    [AlertManager]\n  )\n\n  const unregisterTerritory = useCallback((id: number) => {\n    const stored: number[] = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE.REGISTERED_TERRITORIES) ?? '[]'\n    )\n    const alreadyUnregistered = !stored.some((i) => i === id)\n\n    if (alreadyUnregistered) return\n\n    const newStore = stored.filter((i) => i !== id)\n    localStorage.setItem(\n      LOCAL_STORAGE.REGISTERED_TERRITORIES,\n      JSON.stringify(newStore)\n    )\n    setRegisteredTerritories(newStore)\n  }, [])\n\n  return {\n    CONG_INITIALS,\n    darkModeEnabled,\n    advancedModeEnabled,\n    testModeEnabled,\n    configurations: configurations!,\n    territories,\n    configsLoading,\n    configsError,\n    currentTerritory: currentTerritory!,\n    registeredTerritories,\n    toggleDarkMode,\n    toggleAdvancedMode,\n    toggleTestMode,\n    getConfigs,\n    updateConfigs,\n    setCurrentTerritory,\n    updateTerritories,\n    registerTerritory,\n    unregisterTerritory,\n  }\n}\n","import React, { createContext, useState, FunctionComponent } from 'react'\nimport { LOCAL_STORAGE } from 'consts'\nimport { useFetch } from 'hooks'\nimport { useAlerts } from 'components'\n\ninterface AuthType {\n  isAuth: boolean\n  isLoading: boolean\n  isAdmin: boolean\n  doLogin: (userName: string, password: string) => void\n  doLogout: () => void\n}\n\ninterface LoginPayload {\n  username: string\n  password: string\n}\n\ninterface LoginResponse {\n  accessToken: string\n  isAdmin: boolean\n}\n\nexport const AuthContext = createContext<AuthType>({} as AuthType)\n\nexport const AuthProvider: FunctionComponent = ({ children }) => {\n  const authValue = useAuth()\n\n  return (\n    <AuthContext.Provider value={authValue}>{children}</AuthContext.Provider>\n  )\n}\n\nexport const useAuth = (): AuthType => {\n  const [isAuth, setIsAuth] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.TOKEN)\n  )\n  const [isAdmin, setIsAdmin] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.IS_ADMIN)\n  )\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  const { AlertManager } = useAlerts()\n\n  const Fetch = useFetch()\n\n  const doLogin = async (username: string, password: string) => {\n    try {\n      setIsLoading(true)\n\n      const [err, response] = await Fetch(false).post<\n        LoginPayload,\n        LoginResponse\n      >('login', {\n        username,\n        password,\n      })\n\n      if (err) throw err\n\n      localStorage.setItem(LOCAL_STORAGE.TOKEN, response.accessToken)\n      response.isAdmin\n        ? localStorage.setItem(LOCAL_STORAGE.IS_ADMIN, '1')\n        : localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\n\n      setIsAdmin(response.isAdmin)\n      setIsAuth(true)\n    } catch (e) {\n      e.status === 401 && AlertManager.show('wrong-login-credentials')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const doLogout = () => {\n    localStorage.removeItem(LOCAL_STORAGE.TOKEN)\n    localStorage.removeItem(LOCAL_STORAGE.IS_ADMIN)\n    localStorage.removeItem(LOCAL_STORAGE.TEST_MODE)\n    setIsAuth(false)\n    setIsAdmin(false)\n  }\n\n  return {\n    isAuth,\n    isLoading,\n    isAdmin: isAuth && isAdmin,\n    doLogin,\n    doLogout,\n  }\n}\n","import React, {\n  createContext,\n  useState,\n  FunctionComponent,\n  useEffect,\n} from 'react'\nimport { LOCAL_STORAGE } from 'consts'\nimport { useFetch } from 'hooks'\n\ntype TranslationContextValue = {\n  translations: Record<string, string> | null\n  showSwitch: boolean\n  shouldTranslate: boolean\n  translationWanted: boolean\n  toggleTranslationWanted: (checked: boolean) => void\n}\n\nexport const TranslationContext = createContext<TranslationContextValue>(\n  {} as TranslationContextValue\n)\n\nexport const TranslationProvider: FunctionComponent = ({ children }) => {\n  const translationValue = useTranslation()\n\n  return (\n    <TranslationContext.Provider value={translationValue}>\n      {children}\n    </TranslationContext.Provider>\n  )\n}\n\nexport const useTranslation = (): TranslationContextValue => {\n  const [translations, setTranslations] =\n    useState<Record<string, string> | null>(null)\n\n  const [translationWanted, setTranslationWanted] = useState<boolean>(\n    !!localStorage.getItem(LOCAL_STORAGE.TRANSLATION_WANTED)\n  )\n\n  const toggleTranslationWanted = (checked: boolean) => {\n    checked\n      ? localStorage.setItem(LOCAL_STORAGE.TRANSLATION_WANTED, '1')\n      : localStorage.removeItem(LOCAL_STORAGE.TRANSLATION_WANTED)\n    setTranslationWanted(checked)\n  }\n\n  const Fetch = useFetch()\n\n  useEffect(() => {\n    const doFetch = async () => {\n      try {\n        const [err, response] = await Fetch(false).get<Record<string, string>>(\n          'translations'\n        )\n        if (err) throw err\n        if (response) setTranslations(response)\n      } catch {}\n    }\n    doFetch()\n  }, [Fetch])\n\n  return {\n    translations,\n    showSwitch: !!translations,\n    shouldTranslate: !!translations && translationWanted,\n    translationWanted,\n    toggleTranslationWanted,\n  }\n}\n","import React, {\n  createContext,\n  useState,\n  FunctionComponent,\n  useEffect,\n} from 'react'\nimport { useFetch } from 'hooks'\n\ntype ButtonColorContextValue = {\n  buttonColors: typeof defaultButtonColors\n}\n\nexport const ButtonColorContext = createContext<ButtonColorContextValue>(\n  {} as ButtonColorContextValue\n)\n\nexport const ButtonColorProvider: FunctionComponent = ({ children }) => {\n  const buttonColorValue = useButtonColor()\n\n  return (\n    <ButtonColorContext.Provider value={buttonColorValue}>\n      {children}\n    </ButtonColorContext.Provider>\n  )\n}\n\nconst defaultButtonColors = {\n  unanswered: 'danger',\n  answered: 'success',\n  nonExistent: 'dark',\n  noCall: 'warning',\n  answeringMachine: 'primary',\n  postponed: 'info',\n  ignored: 'secondary',\n  rushed: 'success',\n}\n\nexport const useButtonColor = (): ButtonColorContextValue => {\n  const [buttonColors, setButtonColors] =\n    useState<typeof defaultButtonColors>(defaultButtonColors)\n\n  const Fetch = useFetch()\n\n  useEffect(() => {\n    const doFetch = async () => {\n      try {\n        const [err, response] = await Fetch(false).get<\n          typeof defaultButtonColors | ''\n        >('button_colors')\n        if (err) throw err\n        if (response) setButtonColors(response)\n      } catch {}\n    }\n    doFetch()\n  }, [Fetch])\n\n  return {\n    buttonColors,\n  }\n}\n","import React from 'react'\nimport { ConfigContext, ConfigProvider } from './config'\nimport { AuthContext, AuthProvider } from './auth'\nimport { TranslationContext, TranslationProvider } from './translation'\nimport { ButtonColorContext, ButtonColorProvider } from './buttonColor'\nimport { AlertProvider } from 'components/Alert'\n\nconst ContextProviders: React.FC = ({ children }) => {\n  return (\n    <AlertProvider>\n      <ConfigProvider>\n        {/* All providers that use useFetch must be below ConfigProvider, I think... */}\n        <TranslationProvider>\n          <ButtonColorProvider>\n            <AuthProvider>{children}</AuthProvider>\n          </ButtonColorProvider>\n        </TranslationProvider>\n      </ConfigProvider>\n    </AlertProvider>\n  )\n}\n\n// Provider\nexport { ContextProviders }\n\n// Contexts\nexport { ConfigContext }\nexport { AuthContext }\nexport { TranslationContext }\nexport { ButtonColorContext }\n","import { useEffect, RefObject } from 'react'\n\ntype Event = MouseEvent | TouchEvent\n\nconst useOnClickOutside = <T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: Event) => void\n) => {\n  useEffect(() => {\n    const listener = (event: Event) => {\n      const el = ref?.current\n      if (!el || el.contains?.((event?.target as Node) || null)) {\n        return\n      }\n      handler(event)\n    }\n    document.addEventListener(`mousedown`, listener)\n    document.addEventListener(`touchstart`, listener)\n    return () => {\n      document.removeEventListener(`mousedown`, listener)\n      document.removeEventListener(`touchstart`, listener)\n    }\n  }, [ref, handler])\n}\nexport { useOnClickOutside }\n","import { useCallback, useState } from 'react'\n\nexport const useRerender = () => {\n  const [, setDummy] = useState<any>()\n  const forceUpdate = useCallback(() => {\n    const newRef = {}\n    setDummy(newRef)\n  }, [])\n  return { forceUpdate }\n}\n","import { useCallback } from 'react'\nimport { useRerender } from '.'\n\nconst useReactive = () => {\n  const { forceUpdate } = useRerender()\n\n  const reactive = useCallback(\n    <T extends (...args: any[]) => any>(cb: T) =>\n      ((...args) => {\n        const returnData = cb(...args)\n        forceUpdate()\n        return returnData\n      }) as T,\n    [forceUpdate]\n  )\n\n  return { reactive }\n}\n\nexport { useReactive }\n","import { useAlerts } from 'components'\nimport { useEffect, useRef, useCallback } from 'react'\n\nconst useThrottle = <T extends (...args: any) => any>(\n  cb: T,\n  timeout: number\n) => {\n  const timeoutRef = useRef<number | undefined>(undefined)\n  const readyRef = useRef<boolean>(true)\n\n  useEffect(() => () => clearTimeout(timeoutRef.current), [])\n\n  const { AlertManager } = useAlerts()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(\n    ((...args: any) => {\n      if (readyRef.current === false) {\n        AlertManager.show('not-so-fast', { timeout: 3000 })\n        return\n      }\n      cb(...args)\n      readyRef.current = false\n\n      timeoutRef.current = setTimeout(() => {\n        readyRef.current = true\n      }, timeout)\n    }) as T,\n    [cb, timeout]\n  )\n}\n\nexport { useThrottle }\n","import { useEffect, useRef } from 'react'\n\nexport const usePreviousValue = <T>(value: T): T => {\n  const prev = useRef<T>(value)\n  useEffect(() => {\n    prev.current = value\n  })\n  return prev.current\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport {\n  NameState,\n  ReturnedNameState,\n  AlertOptions,\n  AlertProviderInterface,\n} from \"./types\";\n\nconst emptyState: ReturnedNameState = {\n  timeout: 0,\n  data: null,\n  show: false,\n  permanent: false,\n};\n\nexport const useAlertInner = (): AlertProviderInterface => {\n  const [state, setState] = useState<Record<string, NameState | undefined>>({});\n\n  const showHandler = useCallback((name: string, opts?: AlertOptions) => {\n    const { timeout = 4000, data, permanent = false } = opts || {};\n    setState((state) => ({\n      ...state,\n      [name]: {\n        timeout: timeout || 0,\n        data: data || null,\n        permanent,\n      },\n    }));\n  }, []);\n\n  const hideHandler = useCallback((name: string) => {\n    setState((state) => ({\n      ...state,\n      [name]: undefined,\n    }));\n  }, []);\n\n  const hideAllHandler = useCallback(() => {\n    setState({});\n  }, []);\n\n  const getByName = useCallback(\n    (name: string): ReturnedNameState => ({\n      show: true,\n      ...(state[name] || emptyState),\n    }),\n    [state]\n  );\n\n  const AlertManager = useMemo(\n    () => ({\n      show: showHandler,\n      hide: hideHandler,\n      hideAll: hideAllHandler,\n    }),\n    [showHandler, hideHandler, hideAllHandler]\n  );\n\n  return {\n    AlertManager,\n    getByName,\n  };\n};\n","import React, { FunctionComponent, createContext } from \"react\";\nimport { AlertProviderInterface } from \"./types\";\nimport { useAlertInner } from \"./useAlertInner\";\n\nexport const AlertContext = createContext<AlertProviderInterface>(\n  {} as AlertProviderInterface\n);\n\nexport const AlertProvider: FunctionComponent = ({ children }) => {\n  const alertValue = useAlertInner();\n\n  return (\n    <AlertContext.Provider value={alertValue}>{children}</AlertContext.Provider>\n  );\n};\n","import { keyframes } from \"styled-components\";\n\nexport const fadeIn = () => keyframes`\n  from { opacity: 0 }\n  to { opacity: 1 }\n`;\n\nexport const fadeOut = () => keyframes`\n  from { opacity: 1 }\n  to { opacity: 0 }\n`;\n\nexport const popUp = (isDesktop = false) => keyframes`\n  from { opacity: 1; transform: translateY(0) }\n  to { opacity: 1; transform: translateY(calc(${\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\n  })) }\n`;\n\nexport const popDown = (isDesktop = false) => keyframes`\n  from { opacity: 1; transform: translateY(calc(${\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\n  })) }\n  to { opacity: 1; transform: translateY(0) }\n`;\n\nexport const popUpCentered = (isDesktop = false) => keyframes`\n  from { opacity: 1; transform: translate(-50%, 0) }\n  to { opacity: 1; transform: translate(-50%, calc(${\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\n  })) }\n`;\n\nexport const popDownCentered = (isDesktop = false) => keyframes`\n  from { opacity: 1; transform: translate(-50%, calc(${\n    isDesktop ? \"-100% - 10px\" : \"-100%\"\n  })) }\n  to { opacity: 1; transform: translate(-50%, 0) }\n`;\n\nexport const customEnterAnimation = keyframes`\n  0% { transform: translateY(calc(-100% + 40px)) translateX(-50%) }\n  70% { transform: translateY(calc(-500%)) translateX(-50%) }\n  100% { transform: translateY(calc(-300%)) translateX(-50%) }\n`;\n\nexport const customExitAnimation = keyframes`\n  0% { transform: translateY(calc(-300%)) translateX(-50%); }\n  30% { transform: translateY(calc(-500%)) translateX(-50%); }\n  100% { transform: translateY(calc(-100% + 40px)) translateX(-50%); }\n`;\n","import { css } from 'styled'\nimport { AllowedPositions } from './types'\nimport { popUp, popDown, popUpCentered, popDownCentered } from './animations'\n\nexport const getPositionalCSS = (\n  position: AllowedPositions | undefined,\n  show: boolean,\n  animationDuration: number\n): ReturnType<typeof css> | string => {\n  if (!position) return ''\n\n  switch (position) {\n    case 'top':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation('top-centered', show, animationDuration)}\n        top: 10px;\n        left: 50%;\n        transform: translateX(-50%);\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\n      `\n    case 'top-left':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\n        top: 10px;\n        left: 10px;\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\n      `\n\n    case 'top-right':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation('top', show, animationDuration)}\n        top: 10px;\n        right: 10px;\n        ${getMobileSnackbarStyle('top', show, animationDuration)}\n      `\n\n    case 'bottom':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation(\n          'bottom-centered',\n          show,\n          animationDuration\n        )}\n        top: 100vh;\n        left: 50%;\n        transform: translate(-50%, calc(-100% - 10px));\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\n      `\n\n    case 'bottom-left':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\n        top: 100vh;\n        left: 10px;\n        transform: translateY(calc(-100% - 10px));\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\n      `\n\n    case 'bottom-right':\n      return css`\n        ${commonPositionalStyle}\n        ${getDesktopScackbarAnimation('bottom', show, animationDuration)}\n        top: 100vh;\n        right: 10px;\n        transform: translateY(calc(-100% - 10px));\n        ${getMobileSnackbarStyle('bottom', show, animationDuration)}\n      `\n\n    default:\n      return ''\n  }\n}\n\nconst commonPositionalStyle = `\n    position: fixed;\n    z-index: 100000;\n`\n\nconst getDesktopScackbarAnimation = (\n  position: 'bottom' | 'top' | 'bottom-centered' | 'top-centered',\n  show: boolean,\n  animationDuration: number\n) => {\n  const [pd, pu] = position.endsWith('centered')\n    ? [popDownCentered(true), popUpCentered(true)]\n    : [popDown(true), popUp(true)]\n\n  const [enter, exit] = position.startsWith('top') ? [pd, pu] : [pu, pd]\n\n  return css`\n    animation: ${show ? enter : exit} ${animationDuration}s\n      ${show ? 'ease-out' : 'ease-in'};\n  `\n}\n\nconst getMobileSnackbarStyle = (\n  position: 'bottom' | 'top',\n  show: boolean,\n  animationDuration: number\n) => {\n  const [enter, exit] =\n    position === 'top' ? [popDown(), popUp()] : [popUp(), popDown()]\n\n  return css`\n    ${({ theme }) => theme.breakpoints.down('sm')} {\n      width: 100vw;\n      border-radius: 0;\n      left: 0;\n      right: 0;\n      ${position === 'top' ? 'top: 0;' : ''}\n      transform: ${position === 'bottom' ? 'translateY(-100%)' : 'none'};\n      animation: ${show ? enter : exit} ${animationDuration}s\n        ${show ? 'ease-out' : 'ease-in'};\n    }\n  `\n}\n","import {\n  FunctionComponent,\n  ReactElement,\n  useCallback,\n  cloneElement,\n  useContext,\n} from 'react'\nimport { AlertContext } from './Provider'\n\ninterface DismissableProps {\n  children: ReactElement\n}\n\ninterface InnerDismissableProps extends DismissableProps {\n  name: string\n}\n\nexport const Dismissable: FunctionComponent<DismissableProps> = () => null\n\nexport const InnerDismissable: FunctionComponent<InnerDismissableProps> = ({\n  name,\n  children,\n}) => {\n  const { AlertManager } = useContext(AlertContext)\n\n  const dismiss = useCallback(() => AlertManager.hide(name), [\n    name,\n    AlertManager,\n  ])\n\n  return cloneElement(children, { onClick: dismiss })\n}\n","import React, {\n  FunctionComponent,\n  useLayoutEffect,\n  useState,\n  useContext,\n  Children,\n  isValidElement,\n  ReactElement,\n  useRef,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport styled, { css, Keyframes } from 'styled'\nimport { AlertContext } from './Provider'\nimport { fadeIn, fadeOut } from './animations'\nimport { AllowedPositions } from './types'\nimport { getPositionalCSS } from './utils'\nimport { InnerDismissable, Dismissable } from './Dismissable'\n\ninterface AlertProps {\n  name: string\n  onClose?: () => void\n  enterAnimation?: Keyframes | 'none'\n  exitAnimation?: Keyframes | 'none'\n  animationDuration?: number\n  animationTimingFunction?: (show: boolean) => string\n  noStyle?: boolean\n  containerCSS?: ReturnType<typeof css>\n  position?: AllowedPositions\n  id?: string\n  onClick?: () => void\n  variant?: 'success' | 'failure'\n}\n\nexport const Alert: FunctionComponent<AlertProps> = ({\n  name,\n  onClose,\n  enterAnimation,\n  exitAnimation,\n  animationDuration = 0.3,\n  animationTimingFunction = () => 'linear',\n  noStyle = false,\n  children,\n  containerCSS,\n  position,\n  id,\n  onClick,\n  variant,\n}) => {\n  const { getByName, AlertManager } = useContext(AlertContext)\n  const { show, timeout, data, permanent } = getByName(name)\n\n  const [isShowing, setIsShowing] = useState(false)\n  const [storedData, setStoredData] = useState<any>(null)\n  const hideTimeoutRef = useRef<number | undefined>(undefined)\n\n  const waitAnimation = () =>\n    new Promise((r) => setTimeout(r, animationDuration * 1000))\n\n  const handleHide = () => {\n    const doHide = () => {\n      clearTimeout(hideTimeoutRef.current)\n      setIsShowing(false)\n      setStoredData(null)\n      onClose?.()\n    }\n    if (exitAnimation !== 'none') waitAnimation().then(doHide)\n    else doHide()\n  }\n\n  useLayoutEffect(() => {\n    if (show) {\n      setIsShowing(true)\n      data && setStoredData(data)\n      if (!permanent) {\n        hideTimeoutRef.current = setTimeout(\n          () => AlertManager.hide(name),\n          timeout\n        )\n      }\n    } else if (isShowing) {\n      handleHide()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show])\n\n  if (!isShowing) return null\n\n  const processedChildren = (\n    typeof children === 'function' ? children(storedData) : children\n  ) as ReactElement | ReactElement[] | string\n\n  const Snack = (\n    <Container\n      id={id || name}\n      noStyle={noStyle}\n      animation={show ? enterAnimation || fadeIn() : exitAnimation || fadeOut()}\n      animationDuration={animationDuration}\n      animationTimingFunction={animationTimingFunction(show)}\n      show={show}\n      containerCSS={containerCSS}\n      position={position}\n      onClick={onClick}\n      role=\"alert\"\n      variant={variant}\n    >\n      {Children.map(processedChildren, (child) => {\n        if (!child) return child\n\n        // @ts-ignore\n        if (isValidElement(child) && child.type.name === Dismissable.name) {\n          return (\n            <InnerDismissable name={name}>\n              <span>{child.props.children}</span>\n            </InnerDismissable>\n          )\n        }\n        return child\n      })}\n    </Container>\n  )\n\n  if (position)\n    return ReactDOM.createPortal(Snack, document.querySelector('body')!)\n\n  return Snack\n}\n\nconst Container = styled.div<{\n  animation: Keyframes | 'none'\n  noStyle: boolean\n  animationDuration: number\n  show: boolean\n  containerCSS?: ReturnType<typeof css>\n  animationTimingFunction: string\n  position?: AllowedPositions\n  onClick?: () => void\n  variant?: AlertProps['variant']\n}>`\n  ${({\n    noStyle,\n    animation,\n    animationDuration,\n    show,\n    containerCSS,\n    animationTimingFunction,\n    position,\n    onClick,\n    variant,\n  }) => {\n    const animationProps = css`\n      animation: ${animation} ${animationDuration}s ${animationTimingFunction};\n      opacity: ${show ? 1 : 0};\n    `\n\n    const variantCss = variant\n      ? variant === 'success'\n        ? SuccessVariant\n        : FailureVariant\n      : ''\n\n    return noStyle\n      ? css`\n          ${animationProps}\n          ${containerCSS}\n          ${getPositionalCSS(position, show, animationDuration)}\n        `\n      : css`\n          box-sizing: border-box;\n          border-radius: 4px;\n          background-color: #333;\n          color: #eee;\n          padding: 15px 20px;\n          width: fit-content;\n          display: inline-block;\n          cursor: ${onClick ? 'pointer' : 'initial'};\n          ${animationProps}\n          ${variantCss}\n          ${containerCSS}\n          ${getPositionalCSS(position, show, animationDuration)}\n        `\n  }}\n`\n\nconst SuccessVariant = css`\n  background: #444;\n  border-bottom: #28a745 5px solid;\n  height: 76px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst FailureVariant = css`\n  ${SuccessVariant}\n  border-bottom: ${({ theme }) => theme.text.colors.error} 5px solid;\n`\n","import { useContext } from \"react\";\nimport { AlertContext } from \"./Provider\";\n\nexport const useAlerts = () => {\n  const { AlertManager } = useContext(AlertContext);\n\n  return { AlertManager };\n};\n","export const isToday = (date: number) => {\n  const inputDate = new Date(date)\n  const todaysDate = new Date()\n\n  return inputDate.setHours(0, 0, 0, 0) === todaysDate.setHours(0, 0, 0, 0)\n}\n\nexport const inferTerritory = (path: string) =>\n  (path.startsWith('/') ? path.slice(1) : path).split('/')[0]\n\nexport const stripTerritory = (path: string): string =>\n  (path.startsWith('/') ? path.slice(1) : path).split('/').slice(1).join('/')\n","type Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n\nconst sizes = {\n  xs: '0px',\n  sm: '500px',\n  md: '960px',\n  lg: '1150px',\n  xl: '1920px',\n} as const\n\nexport const theme = (darkMode: boolean) =>\n  ({\n    darkMode,\n    navbarHeight: 56,\n    text: {\n      colors: {\n        secondary: '#999',\n        error: '#ff5e5e',\n        green: '#28a745',\n        blue: '#2000d4',\n        black: '#222',\n        white: '#fff',\n        lightgreen: 'lightgreen',\n        info: '#007bff',\n        red: '#dc3545',\n        yellow: 'gold',\n        lightblue: 'lightblue',\n      },\n    },\n    breakpoints: {\n      up: (size: Size): string => `@media (min-width: ${sizes[size]})`,\n      down: (size: Size): string => `@media (max-width: ${sizes[size]})`,\n      between: (from: Size, to: Size): string =>\n        `@media (min-width: ${sizes[from]}) and (max-width: ${sizes[to]})`,\n    },\n  } as const)\n\nexport type Theme = ReturnType<typeof theme>\n","import React from 'react'\nimport { ThemeProvider } from 'styled'\nimport { useConfig } from 'hooks'\nimport { theme } from './theme'\n\nconst Provider: React.FC = ({ children }) => {\n  const { darkModeEnabled } = useConfig()\n\n  return (\n    <ThemeProvider theme={theme(darkModeEnabled)}>{children}</ThemeProvider>\n  )\n}\n\nexport { Provider as ThemeProvider }\n","import React, { lazy, Suspense, useEffect, useLayoutEffect } from 'react'\nimport {\n  BrowserRouter as RouterProvider,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport { Redirect, RouteProps, useHistory, useLocation } from 'react-router'\nimport { ThemeProvider } from 'theme'\nimport { ContextProviders } from 'contexts'\nimport { useAuth, useConfig, useFetch } from 'hooks'\nimport { ErrorDisplay, Layout, Spinner, TerritoryVerifier } from './components'\nimport './app.css'\nimport { usePreviousValue } from 'hooks/utils'\n\nconst AdminPanel = lazy(() => import('./features/AdminPanel'))\nconst Login = lazy(() => import('./features/Login'))\nconst Telefonica = lazy(() => import('./features/Telefonica'))\nconst StatisticsPanel = lazy(() => import('./features/StatisticsPanel'))\nconst AddPhones = lazy(() => import('./features/AddPhones'))\nconst AddNewPhones = lazy(() => import('./features/AddPhones/AddNewPhones'))\nconst ImportPhones = lazy(() => import('./features/AddPhones/Import'))\nconst SearchAndEdit = lazy(() => import('./features/SearchAndEdit'))\nconst Configurations = lazy(() => import('./features/Configurations'))\nconst Passwords = lazy(() => import('./features/Passwords'))\nconst ManageTerritories = lazy(() => import('./features/ManageTerritories'))\n\ninterface ProtectedRouteProps extends RouteProps {\n  condition: boolean\n  fallbackURL: string\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  component,\n  condition,\n  fallbackURL,\n  ...restProps\n}) =>\n  condition ? (\n    <Route {...restProps} component={component} />\n  ) : (\n    <Redirect to={fallbackURL} />\n  )\n\nconst WithTerritoryVerifier: React.FC<{\n  children: (t: string) => React.ReactNode\n}> = ({ children }) => (\n  <Route\n    path=\"/:territory\"\n    render={({ match }) => (\n      <TerritoryVerifier territory={match.params.territory}>\n        {children(match.params.territory)}\n      </TerritoryVerifier>\n    )}\n  />\n)\n\nconst MainRouter: React.FC = () => {\n  const { isAuth, isAdmin } = useAuth()\n  const {\n    configsLoading,\n    configsError,\n    getConfigs,\n    configurations,\n    testModeEnabled,\n  } = useConfig()\n  const location = useLocation()\n  const history = useHistory()\n\n  const Fetch = useFetch()\n\n  const returnTo = new URLSearchParams(window.location.search).get('returnTo')\n\n  useLayoutEffect(() => {\n    if (!isAuth && !location.pathname.includes('/login'))\n      history.push(`/login?returnTo=${window.location.pathname}`)\n    if (\n      isAuth &&\n      (location.pathname.includes('/login') || location.pathname === '/')\n    )\n      isAdmin\n        ? history.push(returnTo ?? '/base/admin-panel')\n        : history.push(returnTo ?? '/base/telefonica')\n  }, [isAuth, isAdmin, location.pathname, history, returnTo])\n\n  const prevTestModeEnabled = usePreviousValue(testModeEnabled)\n\n  useEffect(() => {\n    if (isAuth && (!configurations || testModeEnabled !== prevTestModeEnabled))\n      getConfigs(Fetch)\n  }, [\n    isAuth,\n    Fetch,\n    getConfigs,\n    configurations,\n    testModeEnabled,\n    prevTestModeEnabled,\n  ])\n\n  if (isAuth && configsLoading && !configurations)\n    return <Spinner container fulfill />\n\n  if (configsError) return <ErrorDisplay />\n\n  return (\n    <Suspense fallback={<Spinner container fulfill />}>\n      <Switch>\n        {/* Common */}\n        <Route path=\"/login\" exact component={Login} />\n\n        <WithTerritoryVerifier>\n          {(territory) => (\n            <Switch>\n              {/* User */}\n              <ProtectedRoute\n                path=\"/:territory/telefonica\"\n                component={Telefonica}\n                condition={isAuth}\n                fallbackURL={`/${territory}/login`}\n              />\n\n              {/* Admin */}\n              <ProtectedRoute\n                path=\"/:territory/admin-panel\"\n                exact\n                component={AdminPanel}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/statistics\"\n                exact\n                component={StatisticsPanel}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/add-phones\"\n                exact\n                component={AddPhones}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/add-phones/new-list\"\n                exact\n                component={AddNewPhones}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/add-phones/import\"\n                exact\n                component={ImportPhones}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/search-and-edit\"\n                exact\n                component={SearchAndEdit}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/configurations\"\n                exact\n                component={Configurations}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/passwords\"\n                exact\n                component={Passwords}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <ProtectedRoute\n                path=\"/:territory/admin-panel/territories\"\n                exact\n                component={ManageTerritories}\n                condition={isAdmin}\n                fallbackURL={`/${territory}/telefonica`}\n              />\n              <Redirect to={`/${territory}/admin-panel`} />\n            </Switch>\n          )}\n        </WithTerritoryVerifier>\n\n        {/* Misc */}\n        <Redirect to=\"/login\" />\n      </Switch>\n    </Suspense>\n  )\n}\n\nconst App: React.FC = () => (\n  <ContextProviders>\n    <ThemeProvider>\n      <RouterProvider>\n        <Layout>\n          <MainRouter />\n        </Layout>\n      </RouterProvider>\n    </ThemeProvider>\n  </ContextProviders>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { default as styled } from 'styled-components'\nimport type { ThemedStyledInterface } from 'styled-components'\nimport type { Theme } from 'theme'\n\nexport { css, keyframes, ThemeProvider } from 'styled-components'\nexport type { Keyframes } from 'styled-components'\n\nexport default styled as ThemedStyledInterface<Theme>\n"],"sourceRoot":""}