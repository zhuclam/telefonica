{"version":3,"sources":["../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","features/AddPhones/styles.tsx","features/AddPhones/utils.ts","features/AddPhones/AddNewPhones/components/EntryData.tsx","features/AddPhones/AddNewPhones/components/Review.tsx","features/AddPhones/AddNewPhones/components/Result.tsx","features/AddPhones/AddNewPhones/AddNewPhones.tsx"],"names":["rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","className","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","Title","styled","h1","Description","p","Buttons","div","getRandomNumber","parseInt","Math","random","toFixed","slice","LineIndicator","forwardRef","ref","lines","LineIndicatorContainer","Array","fill","map","_","EntryData","onNextStep","handleSetEntrydata","useState","numbers","setNumbers","additional","setAdditional","numberLineIndicatorRef","useRef","additionalLineIndicatorRef","testModeEnabled","useConfig","handleIndicatorsScroll","type","e","position","target","scrollTop","el","current","scroll","onNumberScroll","onAdditionalScroll","numberLines","split","additionalLines","useEffect","missing","difference","abs","repeat","pending","pop","join","haveSameAmountOfLines","haveEmptyNumberLines","some","line","trim","disableNextStep","Button","color","onClick","toString","splice","generateRandomNumber","info","names","randomName","floor","randomAddress","randomNumber","generateRandomInfo","prev","style","TextArea","value","onChange","onScroll","placeholder","Validations","Rule","valid","index","disabled","ul","textarea","span","theme","text","colors","green","red","Review","entryData","onGoBack","onConfirm","Container","Info","outline","darkMode","black","Result","response","onAddMore","onBackToAdminPanel","successCount","failureCount","breadcrumbItems","title","linkTo","AddNewPhones","step","setStep","setEntryData","isLoading","setIsLoading","serverResponse","setServerResponse","currentTerritory","Fetch","useFetch","AlertManager","useAlerts","history","useHistory","handleConfirm","a","post","phones","err","show","timeout","container","fulfill","name","containerCSS","FailAlertCss","items","data","css"],"mappings":"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","file":"static/js/8.527aacce.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import styled from 'styled'\n\nexport const Title = styled.h1`\n  font-weight: 400;\n  margin-bottom: 0.75em;\n\n  > span {\n    font-size: 0.7em;\n  }\n`\nexport const Description = styled.p`\n  > span {\n    font-weight: 500;\n  }\n`\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n\n  > button:not(:nth-of-type(1)) {\n    margin-left: 1em;\n  }\n`\n","const getRandomNumber = (): number =>\n  parseInt(Math.random().toFixed(1).slice(-1))\n\nexport const generateRandomNumber = (): string => {\n  const numbers = Array(8)\n    .fill(1)\n    .map((_) => getRandomNumber().toString())\n  numbers.splice(4, 0, '-')\n  return numbers.join('')\n}\n\nexport const generateRandomInfo = (): string => {\n  const names = [\n    'Alicia Gertrudis',\n    'Popeye Elmarino',\n    'Gervasio Garcia',\n    'Francisco Lopez',\n  ]\n  const addresses = ['Av. San Martín', 'Pozos', 'San Fernando', 'El Jaguar']\n\n  const randomName = names[Math.floor(Math.random() * names.length)]\n  const randomAddress = addresses[Math.floor(Math.random() * names.length)]\n\n  const randomNumber = Array(3)\n    .fill(1)\n    .map((_) => getRandomNumber().toString())\n    .join('')\n\n  return `${randomName}, ${randomAddress} ${randomNumber}`\n}\n","import { useConfig } from 'hooks'\nimport React, { forwardRef, useEffect, useRef, useState } from 'react'\nimport { Button, Col, Row } from 'reactstrap'\nimport styled from 'styled'\nimport { Buttons, Description, Title } from '../../styles'\nimport { NewPhone } from '../../types'\nimport { generateRandomInfo, generateRandomNumber } from '../../utils'\n\nconst LineIndicator: React.ForwardRefExoticComponent<\n  {\n    lines: number\n  } & React.RefAttributes<unknown>\n> = forwardRef(({ lines }, ref) => (\n  // @ts-ignore\n  <LineIndicatorContainer ref={ref}>\n    {Array(lines)\n      .fill(1)\n      .map((_, i) => (\n        <li key={i}>{i + 1}-</li>\n      ))}\n  </LineIndicatorContainer>\n))\n\ninterface EntryDataProps {\n  onNextStep: () => void\n  handleSetEntrydata: (data: NewPhone[]) => void\n}\n\nconst EntryData: React.FC<EntryDataProps> = ({\n  onNextStep,\n  handleSetEntrydata,\n}) => {\n  const [numbers, setNumbers] = useState<string>('')\n  const [additional, setAdditional] = useState<string>('')\n  const numberLineIndicatorRef = useRef<HTMLDivElement | null>(null)\n  const additionalLineIndicatorRef = useRef<HTMLDivElement | null>(null)\n\n  const { testModeEnabled } = useConfig()\n\n  const setRandomData = () => {\n    if (!testModeEnabled) return\n    const numbers = Array(10)\n      .fill(1)\n      .map((_) => generateRandomNumber())\n      .join('\\n')\n    const info = Array(10)\n      .fill(1)\n      .map((_) => generateRandomInfo())\n      .join('\\n')\n\n    setNumbers((prev) => prev + numbers + '\\n')\n    setAdditional((prev) => prev + info + '\\n')\n  }\n\n  const handleIndicatorsScroll =\n    (type: 'number' | 'additional') =>\n    (e: React.UIEvent<HTMLTextAreaElement, UIEvent>) => {\n      const position: number =\n        // @ts-ignore\n        e.target.scrollTop\n      const el =\n        type === 'number'\n          ? numberLineIndicatorRef?.current\n          : additionalLineIndicatorRef?.current\n      if (!el) return\n      el.scroll(0, position)\n    }\n\n  const onNumberScroll = handleIndicatorsScroll('number')\n  const onAdditionalScroll = handleIndicatorsScroll('additional')\n\n  const numberLines = numbers.split('\\n').length\n  const additionalLines = additional.split('\\n').length\n\n  useEffect(() => {\n    if (numberLines === additionalLines) return\n    const missing = numberLines > additionalLines\n    const difference = Math.abs(numberLines - additionalLines)\n    if (missing) {\n      setAdditional((additional) => additional + '\\n'.repeat(difference))\n    } else {\n      setAdditional((additional) => {\n        let lines = additional.split('\\n')\n        let pending = difference\n        while (lines[lines.length - 1] === '' && pending > 0) {\n          lines.pop()\n          pending--\n        }\n        return lines.join('\\n')\n      })\n    }\n  }, [numberLines, additionalLines, numbers])\n\n  const haveSameAmountOfLines = numberLines === additionalLines\n  const haveEmptyNumberLines = numbers\n    .split('\\n')\n    .some((line) => line.trim() === '')\n\n  const disableNextStep = !haveSameAmountOfLines || haveEmptyNumberLines\n\n  const onDone = () => {\n    handleSetEntrydata(\n      numbers.split('\\n').map((number, index) => ({\n        number,\n        info: additional.split('\\n')[index],\n      }))\n    )\n    onNextStep()\n  }\n\n  return (\n    <>\n      <Title>\n        Paso 1: <span>Ingresar datos</span>\n      </Title>\n      <Description>\n        Ingrese una lista de números en la caja de la izquierda.{' '}\n        <span>Separe cada número con un nuevo salto de línea (Enter)</span>.\n      </Description>\n      <Description>\n        Repita lo mismo en la caja de la derecha con la{' '}\n        <span>información adicional</span> -dirección, nombre de la persona,\n        etc.- que deba acompañar a cada número\n        <span> que se corresponda en la misma posición de ordenamiento</span>.\n      </Description>\n      <Description>\n        La información adicional de la caja de la derecha es{' '}\n        <span>opcional</span>, puede omitirla. Si desea omitir esa información\n        solamente para una fila (número), deje un espacio en blanco en la\n        posición de esa línea.\n      </Description>\n      <Description>\n        No se preocupe por comenter errores,{' '}\n        <span>podrá revisar la información</span> antes de enviarla{' '}\n        <span>en el siguiente paso</span>.\n      </Description>\n      <Description>\n        <span>Consejo:</span> puede copiar y pegar una columna entera de excel\n        en cada caja.\n      </Description>\n      {testModeEnabled && (\n        <Button color=\"info\" onClick={setRandomData}>\n          Generar datos aleatorios\n        </Button>\n      )}\n      <Row className=\"mt-3\">\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\n          <h5>Teléfonos:</h5>\n          <LineIndicator lines={numberLines} ref={numberLineIndicatorRef} />\n          <TextArea\n            value={numbers}\n            onChange={(e) => setNumbers(e.target.value)}\n            onScroll={onNumberScroll}\n            placeholder=\"Ej.: (011) 4754-7845\"\n          ></TextArea>\n        </Col>\n        <Col xs={12} md={6} style={{ position: 'relative' }}>\n          <h5>Información adicional:</h5>\n          <LineIndicator\n            lines={additionalLines}\n            ref={additionalLineIndicatorRef}\n          />\n          <TextArea\n            value={additional}\n            onChange={(e) => setAdditional(e.target.value)}\n            onScroll={onAdditionalScroll}\n            placeholder=\"Ej.: Pepe Mujica - Av. Gral Rodríguez 2084\"\n          ></TextArea>\n        </Col>\n      </Row>\n      <Validations>\n        <h4>Para avanzar al siguiente paso, se debe cumplir con:</h4>\n        <div>\n          <Rule valid={!haveEmptyNumberLines}>\n            No debe haber filas vacías de números\n          </Rule>\n          <Rule valid={haveSameAmountOfLines}>\n            Números e información adicional deben tener la misma cantidad de\n            líneas\n          </Rule>\n        </div>\n      </Validations>\n      <Buttons>\n        <Button color=\"success\" onClick={onDone} disabled={disableNextStep}>\n          Siguiente paso\n        </Button>\n      </Buttons>\n    </>\n  )\n}\n\nconst LineIndicatorContainer = styled.ul`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 1.5em;\n  margin: 0;\n  padding: 0;\n  padding-top: 1px;\n  line-height: 20px;\n  height: 400px;\n  width: 3em;\n  overflow-y: hidden;\n  border-right: 1px dashed #999;\n\n  li {\n    list-style: none;\n    font-weight: 500;\n    color: #666;\n  }\n`\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 400px;\n  padding: 0 1em 0 4em;\n  line-height: 20px;\n  white-space: nowrap;\n  overflow-x: hidden;\n`\n\nconst Validations = styled.div`\n  margin-top: 2em;\n  padding-bottom: 5em;\n\n  div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 1em;\n\n    span {\n      margin-top: 1em;\n    }\n  }\n`\n\nconst Rule = styled.span<{ valid: boolean }>`\n  color: ${({ theme, valid }) =>\n    valid ? theme.text.colors.green : theme.text.colors.red};\n\n  ::before {\n    content: '${({ valid }) => (valid ? '✅' : '❗')}';\n    margin-right: 0.5em;\n  }\n`\n\nexport { EntryData }\n","import React from 'react'\nimport { Button, Container } from 'reactstrap'\nimport styled from 'styled'\nimport { Buttons, Description, Title } from '../../styles'\nimport { NewPhone } from '../../types'\n\ninterface ReviewProps {\n  entryData: NewPhone[]\n  onGoBack: () => void\n  onConfirm: () => void\n}\n\nconst Review: React.FC<ReviewProps> = ({ entryData, onGoBack, onConfirm }) => (\n  <Container>\n    <Title>\n      Segundo paso: <span>Confirmar</span>\n    </Title>\n    <Description>\n      Por favor, revise bien la información y confirme si es correcta.\n    </Description>\n    <Info>\n      {entryData.map(({ number, info }, i) => (\n        <>\n          <span key={number + i}>\n            <span>Número:</span> {number}{' '}\n            <span className=\"separator\">{'->'}</span> <span>Info:</span> {info}\n          </span>\n          <br />\n        </>\n      ))}\n    </Info>\n    <Buttons>\n      <Button color=\"info\" outline onClick={onGoBack}>\n        Volver\n      </Button>\n      <Button color=\"success\" onClick={onConfirm}>\n        Confirmar y guardar\n      </Button>\n    </Buttons>\n  </Container>\n)\n\nconst Info = styled.p`\n  width: 100%;\n  height: 400px;\n  background: ${({ theme }) =>\n    theme.darkMode ? '#fff' : theme.text.colors.black};\n  padding: 10px;\n  overflow: auto;\n\n  span {\n    color: ${({ theme }) =>\n      theme.darkMode ? theme.text.colors.black : '#fff'};\n    display: inline-block;\n    margin-bottom: 0.1em;\n\n    span:not(.separator) {\n      background-color: #999;\n      padding: 2px 10px;\n      border-radius: 3px;\n    }\n\n    .separator {\n      display: inline-block;\n      margin: 0 1em;\n    }\n  }\n`\n\nexport { Review }\n","import React from 'react'\nimport { Button, Container } from 'reactstrap'\nimport { Buttons, Description, Title } from '../../styles'\nimport { AddPhoneResponse } from '../../types'\n\ninterface ResultProps {\n  response: AddPhoneResponse\n  onAddMore: () => void\n  onBackToAdminPanel: () => void\n}\n\nconst Result: React.FC<ResultProps> = ({\n  response,\n  onAddMore,\n  onBackToAdminPanel,\n}) => (\n  <Container>\n    <Title>¡Listo! 🌟</Title>\n    <h4>Números agregados: {response.successCount}</h4>\n    <h4>Números que no se agregaron(*): {response.failureCount}</h4>\n    <Description className=\"mt-3\">\n      * Cuando un número no se agrega, por lo general se debe a que es\n      duplicado.\n    </Description>\n    <Buttons className=\"mt-5\">\n      <Button color=\"info\" onClick={onAddMore}>\n        Agregar más números\n      </Button>\n      <Button color=\"success\" onClick={onBackToAdminPanel}>\n        Volver al panel de administrador\n      </Button>\n    </Buttons>\n  </Container>\n)\n\nexport { Result }\n","import React, { useState } from 'react'\nimport { Container } from 'reactstrap'\nimport { Alert, Breadcrumb, Spinner, useAlerts } from 'components'\nimport { AddPhonePayload, AddPhoneResponse, NewPhone } from '../types'\nimport { EntryData, Result, Review } from './components'\nimport { useConfig, useFetch } from 'hooks'\nimport { css } from 'styled'\nimport { useHistory } from 'react-router'\n\nconst breadcrumbItems = [\n  {\n    title: 'Panel de Administración',\n    linkTo: '/admin-panel',\n  },\n  {\n    title: 'Agregar Números',\n    linkTo: '/admin-panel/add-phones',\n  },\n  {\n    title: 'Cargar nueva lista',\n  },\n]\n\nconst AddNewPhones: React.FC = () => {\n  const [step, setStep] = useState<number>(1)\n  const [entryData, setEntryData] = useState<NewPhone[]>([])\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [serverResponse, setServerResponse] =\n    useState<AddPhoneResponse | null>(null)\n  const { currentTerritory } = useConfig()\n\n  const Fetch = useFetch()\n\n  const { AlertManager } = useAlerts()\n\n  const history = useHistory()\n\n  const handleNextStep = () => setStep(step + 1)\n\n  const handleSetEntrydata = (data: NewPhone[]) => setEntryData(data)\n\n  const handleBackToStepOne = () => setStep(1)\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n      const [err, response] = await Fetch().post<\n        AddPhonePayload,\n        AddPhoneResponse\n      >('add_numbers', { phones: entryData })\n\n      if (err) throw err\n\n      setServerResponse(response)\n      setStep(3)\n    } catch {\n      AlertManager.show('add-phones-error', { timeout: 13000 })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const reset = () => {\n    setStep(1)\n    setEntryData([])\n    setServerResponse(null)\n  }\n\n  const handleBackToAdmin = () => {\n    history.push(`/${currentTerritory.name}/admin-panel`)\n  }\n\n  if (isLoading) return <Spinner container fulfill />\n\n  return (\n    <Container className=\"pt-3 pb-5\">\n      <Alert\n        name=\"add-phones-error\"\n        position=\"bottom\"\n        containerCSS={FailAlertCss}\n      >\n        Hubo un error guardando los nuevos números. Por favor, revise los datos\n        e intente de nuevo. Si el problema persiste, contacte al desarrollador\n        para solucionarlo.{' '}\n      </Alert>\n      <Breadcrumb items={breadcrumbItems} />\n      {step === 1 && (\n        <EntryData\n          onNextStep={handleNextStep}\n          handleSetEntrydata={handleSetEntrydata}\n        />\n      )}\n      {step === 2 && (\n        <Review\n          entryData={entryData}\n          onGoBack={handleBackToStepOne}\n          onConfirm={handleConfirm}\n        />\n      )}\n      {step === 3 && serverResponse && (\n        <Result\n          response={serverResponse}\n          onAddMore={reset}\n          onBackToAdminPanel={handleBackToAdmin}\n        />\n      )}\n    </Container>\n  )\n}\n\nconst FailAlertCss = css`\n  background-color: ${({ theme }) => theme.text.colors.red};\n`\n\nexport { AddNewPhones }\n"],"sourceRoot":""}